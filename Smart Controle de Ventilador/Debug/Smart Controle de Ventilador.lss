
Smart Controle de Ventilador.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000068  00803e00  00001cf8  00001dac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cf2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000006  00009cf2  00001cf2  00001da6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000080  00803e68  00803e68  00001e14  2**0
                  ALLOC
  4 .comment      00000060  00000000  00000000  00001e14  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001e74  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000003b0  00000000  00000000  00001eb0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000666e  00000000  00000000  00002260  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000297c  00000000  00000000  000088ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001ed8  00000000  00000000  0000b24a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000694  00000000  00000000  0000d124  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002885  00000000  00000000  0000d7b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000fc9  00000000  00000000  0001003d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000290  00000000  00000000  00011006  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
       2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
       4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
       6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
       8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
       a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
       c:	98 c0       	rjmp	.+304    	; 0x13e <__vector_6>
       e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
      10:	bc c0       	rjmp	.+376    	; 0x18a <__vector_8>
      12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
      14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
      16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
      18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
      1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
      1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
      1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
      20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
      22:	2b c3       	rjmp	.+1622   	; 0x67a <__vector_17>
      24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
      26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
      28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
      2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
      2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
      2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
      30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
      32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
      34:	11 24       	eor	r1, r1
      36:	1f be       	out	0x3f, r1	; 63
      38:	cf ef       	ldi	r28, 0xFF	; 255
      3a:	cd bf       	out	0x3d, r28	; 61
      3c:	df e3       	ldi	r29, 0x3F	; 63
      3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_copy_data>:
      40:	1e e3       	ldi	r17, 0x3E	; 62
      42:	a0 e0       	ldi	r26, 0x00	; 0
      44:	be e3       	ldi	r27, 0x3E	; 62
      46:	e8 ef       	ldi	r30, 0xF8	; 248
      48:	fc e1       	ldi	r31, 0x1C	; 28
      4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
      4c:	05 90       	lpm	r0, Z+
      4e:	0d 92       	st	X+, r0
      50:	a8 36       	cpi	r26, 0x68	; 104
      52:	b1 07       	cpc	r27, r17
      54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
      56:	2e e3       	ldi	r18, 0x3E	; 62
      58:	a8 e6       	ldi	r26, 0x68	; 104
      5a:	be e3       	ldi	r27, 0x3E	; 62
      5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
      5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
      60:	a8 3e       	cpi	r26, 0xE8	; 232
      62:	b2 07       	cpc	r27, r18
      64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
      66:	79 d1       	rcall	.+754    	; 0x35a <main>
      68:	42 ce       	rjmp	.-892    	; 0xfffffcee <__eeprom_end+0xff7efcee>

0000006a <__bad_interrupt>:
      6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <toggle_lamp_output>:
		set_fan_direction(open);
	}else{
		set_fan_direction_immediately();
	}
	//ToDo -> insert a delay to wait relay on state			
	triac_set_output_state(fan_state);
      6c:	8a b1       	in	r24, 0x0a	; 10
      6e:	81 60       	ori	r24, 0x01	; 1
      70:	8a b9       	out	0x0a, r24	; 10
      72:	08 95       	ret

00000074 <set_fan_direction>:
      74:	90 91 6b 3e 	lds	r25, 0x3E6B	; 0x803e6b <fan_state>
      78:	91 30       	cpi	r25, 0x01	; 1
      7a:	99 f4       	brne	.+38     	; 0xa2 <__EEPROM_REGION_LENGTH__+0x22>
      7c:	90 91 00 3e 	lds	r25, 0x3E00	; 0x803e00 <__DATA_REGION_ORIGIN__>
      80:	98 17       	cp	r25, r24
      82:	79 f0       	breq	.+30     	; 0xa2 <__EEPROM_REGION_LENGTH__+0x22>
      84:	80 93 00 3e 	sts	0x3E00, r24	; 0x803e00 <__DATA_REGION_ORIGIN__>
      88:	80 e3       	ldi	r24, 0x30	; 48
      8a:	95 e7       	ldi	r25, 0x75	; 117
      8c:	80 93 68 3e 	sts	0x3E68, r24	; 0x803e68 <__data_end>
      90:	90 93 69 3e 	sts	0x3E69, r25	; 0x803e69 <__data_end+0x1>
      94:	81 b1       	in	r24, 0x01	; 1
      96:	87 7f       	andi	r24, 0xF7	; 247
      98:	81 b9       	out	0x01, r24	; 1
      9a:	81 b1       	in	r24, 0x01	; 1
      9c:	8b 7f       	andi	r24, 0xFB	; 251
      9e:	81 b9       	out	0x01, r24	; 1
      a0:	08 95       	ret
      a2:	82 30       	cpi	r24, 0x02	; 2
      a4:	31 f4       	brne	.+12     	; 0xb2 <__EEPROM_REGION_LENGTH__+0x32>
      a6:	81 b1       	in	r24, 0x01	; 1
      a8:	87 7f       	andi	r24, 0xF7	; 247
      aa:	81 b9       	out	0x01, r24	; 1
      ac:	81 b1       	in	r24, 0x01	; 1
      ae:	8b 7f       	andi	r24, 0xFB	; 251
      b0:	81 b9       	out	0x01, r24	; 1
      b2:	08 95       	ret

000000b4 <process_direction_relay>:
      b4:	80 91 00 3e 	lds	r24, 0x3E00	; 0x803e00 <__DATA_REGION_ORIGIN__>
      b8:	81 30       	cpi	r24, 0x01	; 1
      ba:	31 f4       	brne	.+12     	; 0xc8 <process_direction_relay+0x14>
      bc:	91 b1       	in	r25, 0x01	; 1
      be:	98 60       	ori	r25, 0x08	; 8
      c0:	91 b9       	out	0x01, r25	; 1
      c2:	91 b1       	in	r25, 0x01	; 1
      c4:	9b 7f       	andi	r25, 0xFB	; 251
      c6:	91 b9       	out	0x01, r25	; 1
      c8:	81 11       	cpse	r24, r1
      ca:	06 c0       	rjmp	.+12     	; 0xd8 <process_direction_relay+0x24>
      cc:	81 b1       	in	r24, 0x01	; 1
      ce:	87 7f       	andi	r24, 0xF7	; 247
      d0:	81 b9       	out	0x01, r24	; 1
      d2:	81 b1       	in	r24, 0x01	; 1
      d4:	84 60       	ori	r24, 0x04	; 4
      d6:	81 b9       	out	0x01, r24	; 1
      d8:	08 95       	ret

000000da <set_fan_direction_immediately>:
      da:	ec df       	rcall	.-40     	; 0xb4 <process_direction_relay>
      dc:	08 95       	ret

000000de <toggle_fan_output>:
}

void toggle_fan_output(){
	if(fan_state == on){
      de:	80 91 6b 3e 	lds	r24, 0x3E6B	; 0x803e6b <fan_state>
      e2:	81 30       	cpi	r24, 0x01	; 1
      e4:	29 f4       	brne	.+10     	; 0xf0 <toggle_fan_output+0x12>
		fan_state = off;
      e6:	10 92 6b 3e 	sts	0x3E6B, r1	; 0x803e6b <fan_state>
		set_fan_direction(open);		
      ea:	82 e0       	ldi	r24, 0x02	; 2
      ec:	c3 df       	rcall	.-122    	; 0x74 <set_fan_direction>
      ee:	04 c0       	rjmp	.+8      	; 0xf8 <toggle_fan_output+0x1a>
	}else {
		fan_state = on;
      f0:	81 e0       	ldi	r24, 0x01	; 1
      f2:	80 93 6b 3e 	sts	0x3E6B, r24	; 0x803e6b <fan_state>
		set_fan_direction_immediately();
      f6:	f1 df       	rcall	.-30     	; 0xda <set_fan_direction_immediately>
	}
	//ToDo -> insert a delay to wait relay on state
	triac_set_output_state(fan_state);
      f8:	80 91 6b 3e 	lds	r24, 0x3E6B	; 0x803e6b <fan_state>
      fc:	b9 d4       	rcall	.+2418   	; 0xa70 <triac_set_output_state>
      fe:	08 95       	ret

00000100 <increase_speed>:

/******************************************************
* FAN SPEED CONTROL                                   *
*******************************************************/
void increase_speed(){
	if(triac_get_output_state() == on){
     100:	ba d4       	rcall	.+2420   	; 0xa76 <triac_get_output_state>
     102:	81 30       	cpi	r24, 0x01	; 1
     104:	51 f4       	brne	.+20     	; 0x11a <increase_speed+0x1a>
		if(angle > 0) angle -= 30;
     106:	80 91 6a 3e 	lds	r24, 0x3E6A	; 0x803e6a <angle>
     10a:	88 23       	and	r24, r24
     10c:	19 f0       	breq	.+6      	; 0x114 <increase_speed+0x14>
     10e:	8e 51       	subi	r24, 0x1E	; 30
     110:	80 93 6a 3e 	sts	0x3E6A, r24	; 0x803e6a <angle>
		triac_set_angle(angle);
     114:	80 91 6a 3e 	lds	r24, 0x3E6A	; 0x803e6a <angle>
     118:	a5 d4       	rcall	.+2378   	; 0xa64 <triac_set_angle>
     11a:	08 95       	ret

0000011c <decrease_speed>:
	}
}

void decrease_speed(){	
	if(triac_get_output_state() == on){
     11c:	ac d4       	rcall	.+2392   	; 0xa76 <triac_get_output_state>
     11e:	81 30       	cpi	r24, 0x01	; 1
     120:	51 f4       	brne	.+20     	; 0x136 <decrease_speed+0x1a>
		if(angle < MAX_ANGLE) angle += 30;
     122:	80 91 6a 3e 	lds	r24, 0x3E6A	; 0x803e6a <angle>
     126:	86 39       	cpi	r24, 0x96	; 150
     128:	18 f4       	brcc	.+6      	; 0x130 <decrease_speed+0x14>
     12a:	82 5e       	subi	r24, 0xE2	; 226
     12c:	80 93 6a 3e 	sts	0x3E6A, r24	; 0x803e6a <angle>
		triac_set_angle(angle);
     130:	80 91 6a 3e 	lds	r24, 0x3E6A	; 0x803e6a <angle>
     134:	97 d4       	rcall	.+2350   	; 0xa64 <triac_set_angle>
     136:	08 95       	ret

00000138 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     138:	06 d3       	rcall	.+1548   	; 0x746 <system_init>

	touch_init();
     13a:	24 d2       	rcall	.+1096   	; 0x584 <touch_init>
     13c:	08 95       	ret

0000013e <__vector_6>:

bool flag= 0;
extern uint16_t cnt_direction;

ISR(RTC_CNT_vect)
{
     13e:	1f 92       	push	r1
     140:	0f 92       	push	r0
     142:	0f b6       	in	r0, 0x3f	; 63
     144:	0f 92       	push	r0
     146:	11 24       	eor	r1, r1
     148:	2f 93       	push	r18
     14a:	3f 93       	push	r19
     14c:	4f 93       	push	r20
     14e:	5f 93       	push	r21
     150:	6f 93       	push	r22
     152:	7f 93       	push	r23
     154:	8f 93       	push	r24
     156:	9f 93       	push	r25
     158:	af 93       	push	r26
     15a:	bf 93       	push	r27
     15c:	ef 93       	push	r30
     15e:	ff 93       	push	r31

	/* Insert your RTC Compare interrupt handling code */
	touch_timer_handler();
     160:	47 d2       	rcall	.+1166   	; 0x5f0 <touch_timer_handler>

	/* Compare interrupt flag has to be cleared manually */
	RTC.INTFLAGS = RTC_CMP_bm;
     162:	82 e0       	ldi	r24, 0x02	; 2
     164:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <gain_setting_int_cap+0x7f6451>
}
     168:	ff 91       	pop	r31
     16a:	ef 91       	pop	r30
     16c:	bf 91       	pop	r27
     16e:	af 91       	pop	r26
     170:	9f 91       	pop	r25
     172:	8f 91       	pop	r24
     174:	7f 91       	pop	r23
     176:	6f 91       	pop	r22
     178:	5f 91       	pop	r21
     17a:	4f 91       	pop	r20
     17c:	3f 91       	pop	r19
     17e:	2f 91       	pop	r18
     180:	0f 90       	pop	r0
     182:	0f be       	out	0x3f, r0	; 63
     184:	0f 90       	pop	r0
     186:	1f 90       	pop	r1
     188:	18 95       	reti

0000018a <__vector_8>:

ISR(TCA0_OVF_vect)
{
     18a:	1f 92       	push	r1
     18c:	0f 92       	push	r0
     18e:	0f b6       	in	r0, 0x3f	; 63
     190:	0f 92       	push	r0
     192:	11 24       	eor	r1, r1
     194:	2f 93       	push	r18
     196:	3f 93       	push	r19
     198:	4f 93       	push	r20
     19a:	5f 93       	push	r21
     19c:	6f 93       	push	r22
     19e:	7f 93       	push	r23
     1a0:	8f 93       	push	r24
     1a2:	9f 93       	push	r25
     1a4:	af 93       	push	r26
     1a6:	bf 93       	push	r27
     1a8:	ef 93       	push	r30
     1aa:	ff 93       	push	r31
	/* Insert your TCA overflow interrupt handling code */

	/* The interrupt flag has to be cleared manually */
	

	if(cnt_direction  > 0){
     1ac:	80 91 68 3e 	lds	r24, 0x3E68	; 0x803e68 <__data_end>
     1b0:	90 91 69 3e 	lds	r25, 0x3E69	; 0x803e69 <__data_end+0x1>
     1b4:	00 97       	sbiw	r24, 0x00	; 0
     1b6:	49 f0       	breq	.+18     	; 0x1ca <__vector_8+0x40>
		flag = 1;
     1b8:	21 e0       	ldi	r18, 0x01	; 1
     1ba:	20 93 6c 3e 	sts	0x3E6C, r18	; 0x803e6c <flag>
		cnt_direction--;
     1be:	01 97       	sbiw	r24, 0x01	; 1
     1c0:	80 93 68 3e 	sts	0x3E68, r24	; 0x803e68 <__data_end>
     1c4:	90 93 69 3e 	sts	0x3E69, r25	; 0x803e69 <__data_end+0x1>
     1c8:	07 c0       	rjmp	.+14     	; 0x1d8 <__vector_8+0x4e>
	}else if(flag){
     1ca:	80 91 6c 3e 	lds	r24, 0x3E6C	; 0x803e6c <flag>
     1ce:	88 23       	and	r24, r24
     1d0:	19 f0       	breq	.+6      	; 0x1d8 <__vector_8+0x4e>
		flag = 0;
     1d2:	10 92 6c 3e 	sts	0x3E6C, r1	; 0x803e6c <flag>
		process_direction_relay();
     1d6:	6e df       	rcall	.-292    	; 0xb4 <process_direction_relay>
	}
	
	triac_driver_tick();
     1d8:	25 d3       	rcall	.+1610   	; 0x824 <triac_driver_tick>
	
	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
     1da:	81 e0       	ldi	r24, 0x01	; 1
     1dc:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <gain_setting_int_cap+0x7f6d19>
}
     1e0:	ff 91       	pop	r31
     1e2:	ef 91       	pop	r30
     1e4:	bf 91       	pop	r27
     1e6:	af 91       	pop	r26
     1e8:	9f 91       	pop	r25
     1ea:	8f 91       	pop	r24
     1ec:	7f 91       	pop	r23
     1ee:	6f 91       	pop	r22
     1f0:	5f 91       	pop	r21
     1f2:	4f 91       	pop	r20
     1f4:	3f 91       	pop	r19
     1f6:	2f 91       	pop	r18
     1f8:	0f 90       	pop	r0
     1fa:	0f be       	out	0x3f, r0	; 63
     1fc:	0f 90       	pop	r0
     1fe:	1f 90       	pop	r1
     200:	18 95       	reti

00000202 <touch_status_display>:
Output : none
Notes  : none
============================================================================*/
void touch_status_display(void)
{
	key_status = get_sensor_state(0) & KEY_TOUCHED_MASK;
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	2a d2       	rcall	.+1108   	; 0x65c <get_sensor_state>
     208:	80 78       	andi	r24, 0x80	; 128
     20a:	80 93 73 3e 	sts	0x3E73, r24	; 0x803e73 <key_status>
	if (0u != key_status && !flag0) {
     20e:	88 23       	and	r24, r24
     210:	49 f0       	breq	.+18     	; 0x224 <touch_status_display+0x22>
     212:	90 91 72 3e 	lds	r25, 0x3E72	; 0x803e72 <flag0>
     216:	91 11       	cpse	r25, r1
     218:	05 c0       	rjmp	.+10     	; 0x224 <touch_status_display+0x22>
		toggle_lamp_output();
     21a:	28 df       	rcall	.-432    	; 0x6c <toggle_lamp_output>
		flag0 = 1;
     21c:	81 e0       	ldi	r24, 0x01	; 1
     21e:	80 93 72 3e 	sts	0x3E72, r24	; 0x803e72 <flag0>
     222:	07 c0       	rjmp	.+14     	; 0x232 <touch_status_display+0x30>
	} else if(0u == key_status && flag0){
     224:	81 11       	cpse	r24, r1
     226:	05 c0       	rjmp	.+10     	; 0x232 <touch_status_display+0x30>
     228:	80 91 72 3e 	lds	r24, 0x3E72	; 0x803e72 <flag0>
     22c:	81 11       	cpse	r24, r1
		flag0 = 0;
     22e:	10 92 72 3e 	sts	0x3E72, r1	; 0x803e72 <flag0>
	}
	
	key_status = get_sensor_state(1) & KEY_TOUCHED_MASK;
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	12 d2       	rcall	.+1060   	; 0x65c <get_sensor_state>
     238:	80 78       	andi	r24, 0x80	; 128
     23a:	80 93 73 3e 	sts	0x3E73, r24	; 0x803e73 <key_status>
	if (0u != key_status && !flag1) {
     23e:	88 23       	and	r24, r24
     240:	49 f0       	breq	.+18     	; 0x254 <touch_status_display+0x52>
     242:	90 91 71 3e 	lds	r25, 0x3E71	; 0x803e71 <flag1>
     246:	91 11       	cpse	r25, r1
     248:	05 c0       	rjmp	.+10     	; 0x254 <touch_status_display+0x52>
		toggle_fan_output();
     24a:	49 df       	rcall	.-366    	; 0xde <toggle_fan_output>
		flag1 = 1;
     24c:	81 e0       	ldi	r24, 0x01	; 1
     24e:	80 93 71 3e 	sts	0x3E71, r24	; 0x803e71 <flag1>
     252:	07 c0       	rjmp	.+14     	; 0x262 <touch_status_display+0x60>
	}else if(0u == key_status && flag1){
     254:	81 11       	cpse	r24, r1
     256:	05 c0       	rjmp	.+10     	; 0x262 <touch_status_display+0x60>
     258:	80 91 71 3e 	lds	r24, 0x3E71	; 0x803e71 <flag1>
     25c:	81 11       	cpse	r24, r1
		flag1 = 0;
     25e:	10 92 71 3e 	sts	0x3E71, r1	; 0x803e71 <flag1>
	}
	
	key_status = get_sensor_state(2) & KEY_TOUCHED_MASK;
     262:	82 e0       	ldi	r24, 0x02	; 2
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	fa d1       	rcall	.+1012   	; 0x65c <get_sensor_state>
     268:	80 78       	andi	r24, 0x80	; 128
     26a:	80 93 73 3e 	sts	0x3E73, r24	; 0x803e73 <key_status>
	if (0u != key_status && !flag2) {
     26e:	88 23       	and	r24, r24
     270:	49 f0       	breq	.+18     	; 0x284 <touch_status_display+0x82>
     272:	90 91 70 3e 	lds	r25, 0x3E70	; 0x803e70 <flag2>
     276:	91 11       	cpse	r25, r1
     278:	05 c0       	rjmp	.+10     	; 0x284 <touch_status_display+0x82>
		decrease_speed();
     27a:	50 df       	rcall	.-352    	; 0x11c <decrease_speed>
		flag2 = 1;
     27c:	81 e0       	ldi	r24, 0x01	; 1
     27e:	80 93 70 3e 	sts	0x3E70, r24	; 0x803e70 <flag2>
     282:	07 c0       	rjmp	.+14     	; 0x292 <touch_status_display+0x90>
	}else if(0u == key_status && flag2){
     284:	81 11       	cpse	r24, r1
     286:	05 c0       	rjmp	.+10     	; 0x292 <touch_status_display+0x90>
     288:	80 91 70 3e 	lds	r24, 0x3E70	; 0x803e70 <flag2>
     28c:	81 11       	cpse	r24, r1
		flag2 = 0;
     28e:	10 92 70 3e 	sts	0x3E70, r1	; 0x803e70 <flag2>
	} 
	
	key_status = get_sensor_state(3) & KEY_TOUCHED_MASK;
     292:	83 e0       	ldi	r24, 0x03	; 3
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	e2 d1       	rcall	.+964    	; 0x65c <get_sensor_state>
     298:	80 78       	andi	r24, 0x80	; 128
     29a:	80 93 73 3e 	sts	0x3E73, r24	; 0x803e73 <key_status>
	if (0u != key_status && !flag3) {
     29e:	88 23       	and	r24, r24
     2a0:	51 f0       	breq	.+20     	; 0x2b6 <touch_status_display+0xb4>
     2a2:	90 91 6f 3e 	lds	r25, 0x3E6F	; 0x803e6f <flag3>
     2a6:	91 11       	cpse	r25, r1
     2a8:	06 c0       	rjmp	.+12     	; 0x2b6 <touch_status_display+0xb4>
		set_fan_direction(up);
     2aa:	80 e0       	ldi	r24, 0x00	; 0
     2ac:	e3 de       	rcall	.-570    	; 0x74 <set_fan_direction>
		flag3 = 1;
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	80 93 6f 3e 	sts	0x3E6F, r24	; 0x803e6f <flag3>
     2b4:	07 c0       	rjmp	.+14     	; 0x2c4 <touch_status_display+0xc2>
	}else if(0u == key_status && flag3){
     2b6:	81 11       	cpse	r24, r1
     2b8:	05 c0       	rjmp	.+10     	; 0x2c4 <touch_status_display+0xc2>
     2ba:	80 91 6f 3e 	lds	r24, 0x3E6F	; 0x803e6f <flag3>
     2be:	81 11       	cpse	r24, r1
		flag3 = 0;
     2c0:	10 92 6f 3e 	sts	0x3E6F, r1	; 0x803e6f <flag3>
	}
	
	key_status = get_sensor_state(4) & KEY_TOUCHED_MASK;
     2c4:	84 e0       	ldi	r24, 0x04	; 4
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	c9 d1       	rcall	.+914    	; 0x65c <get_sensor_state>
     2ca:	80 78       	andi	r24, 0x80	; 128
     2cc:	80 93 73 3e 	sts	0x3E73, r24	; 0x803e73 <key_status>
	if (0u != key_status && !flag4) {
     2d0:	88 23       	and	r24, r24
     2d2:	49 f0       	breq	.+18     	; 0x2e6 <touch_status_display+0xe4>
     2d4:	90 91 6e 3e 	lds	r25, 0x3E6E	; 0x803e6e <flag4>
     2d8:	91 11       	cpse	r25, r1
     2da:	05 c0       	rjmp	.+10     	; 0x2e6 <touch_status_display+0xe4>
		increase_speed();
     2dc:	11 df       	rcall	.-478    	; 0x100 <increase_speed>
		flag4 = 1;
     2de:	81 e0       	ldi	r24, 0x01	; 1
     2e0:	80 93 6e 3e 	sts	0x3E6E, r24	; 0x803e6e <flag4>
     2e4:	07 c0       	rjmp	.+14     	; 0x2f4 <touch_status_display+0xf2>
	}else if(0u == key_status && flag4){
     2e6:	81 11       	cpse	r24, r1
     2e8:	05 c0       	rjmp	.+10     	; 0x2f4 <touch_status_display+0xf2>
     2ea:	80 91 6e 3e 	lds	r24, 0x3E6E	; 0x803e6e <flag4>
     2ee:	81 11       	cpse	r24, r1
		flag4 = 0;
     2f0:	10 92 6e 3e 	sts	0x3E6E, r1	; 0x803e6e <flag4>
	}
	
	key_status = get_sensor_state(5) & KEY_TOUCHED_MASK;
     2f4:	85 e0       	ldi	r24, 0x05	; 5
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	b1 d1       	rcall	.+866    	; 0x65c <get_sensor_state>
     2fa:	80 78       	andi	r24, 0x80	; 128
     2fc:	80 93 73 3e 	sts	0x3E73, r24	; 0x803e73 <key_status>
	if (0u != key_status && !flag5) {
     300:	88 23       	and	r24, r24
     302:	51 f0       	breq	.+20     	; 0x318 <touch_status_display+0x116>
     304:	90 91 6d 3e 	lds	r25, 0x3E6D	; 0x803e6d <flag5>
     308:	91 11       	cpse	r25, r1
     30a:	06 c0       	rjmp	.+12     	; 0x318 <touch_status_display+0x116>
		set_fan_direction(down);
     30c:	81 e0       	ldi	r24, 0x01	; 1
     30e:	b2 de       	rcall	.-668    	; 0x74 <set_fan_direction>
		flag5 = 1;
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	80 93 6d 3e 	sts	0x3E6D, r24	; 0x803e6d <flag5>
     316:	08 95       	ret
	}else if(0u == key_status && flag5){
     318:	81 11       	cpse	r24, r1
     31a:	05 c0       	rjmp	.+10     	; 0x326 <touch_status_display+0x124>
     31c:	80 91 6d 3e 	lds	r24, 0x3E6D	; 0x803e6d <flag5>
     320:	81 11       	cpse	r24, r1
		flag5 = 0;
     322:	10 92 6d 3e 	sts	0x3E6D, r1	; 0x803e6d <flag5>
     326:	08 95       	ret

00000328 <touch_example>:
	 *
	 * Note: This is a sample file to provide reference on using touch status in a user application. This file is not
	 * linked to a project build.
	 */

	cpu_irq_enable(); /* Global Interrupt Enable */
     328:	78 94       	sei

	touch_process();
     32a:	32 d1       	rcall	.+612    	; 0x590 <touch_process>
	if (measurement_done_touch == 1) {
     32c:	80 91 76 3e 	lds	r24, 0x3E76	; 0x803e76 <measurement_done_touch>
     330:	81 30       	cpi	r24, 0x01	; 1
     332:	19 f4       	brne	.+6      	; 0x33a <touch_example+0x12>
		measurement_done_touch = 0;
     334:	10 92 76 3e 	sts	0x3E76, r1	; 0x803e76 <measurement_done_touch>
		touch_status_display();
     338:	64 df       	rcall	.-312    	; 0x202 <touch_status_display>
     33a:	08 95       	ret

0000033c <Triac_set_level>:
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
     33c:	88 23       	and	r24, r24
     33e:	21 f0       	breq	.+8      	; 0x348 <Triac_set_level+0xc>
		VPORTA.OUT |= (1 << pin);
     340:	81 b1       	in	r24, 0x01	; 1
     342:	82 60       	ori	r24, 0x02	; 2
     344:	81 b9       	out	0x01, r24	; 1
     346:	08 95       	ret
	} else {
		VPORTA.OUT &= ~(1 << pin);
     348:	81 b1       	in	r24, 0x01	; 1
     34a:	8d 7f       	andi	r24, 0xFD	; 253
     34c:	81 b9       	out	0x01, r24	; 1
     34e:	08 95       	ret

00000350 <Zerocross_get_level>:
 *
 * Reads the level on pins connected to a port
 */
static inline bool PORTB_get_pin_level(const uint8_t pin)
{
	return VPORTB.IN & (1 << pin);
     350:	86 b1       	in	r24, 0x06	; 6
 * Reads the level on a pin
 */
static inline bool Zerocross_get_level()
{
	return PORTB_get_pin_level(5);
}
     352:	85 fb       	bst	r24, 5
     354:	88 27       	eor	r24, r24
     356:	80 f9       	bld	r24, 0
     358:	08 95       	ret

0000035a <main>:
#include "touch_example.h"
#include "triac_driver/triac_driver.h"
#include "atmel_start_pins.h"

int main(void)
{
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
     35e:	cd b7       	in	r28, 0x3d	; 61
     360:	de b7       	in	r29, 0x3e	; 62
     362:	26 97       	sbiw	r28, 0x06	; 6
     364:	cd bf       	out	0x3d, r28	; 61
     366:	de bf       	out	0x3e, r29	; 62
	triac_driver_config config;
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     368:	e7 de       	rcall	.-562    	; 0x138 <atmel_start_init>
	
	config.get_zero_pin_state_func = Zerocross_get_level;
     36a:	88 ea       	ldi	r24, 0xA8	; 168
     36c:	91 e0       	ldi	r25, 0x01	; 1
     36e:	48 2f       	mov	r20, r24
     370:	89 83       	std	Y+1, r24	; 0x01
     372:	9a 83       	std	Y+2, r25	; 0x02
	config.triac_control_func = Triac_set_level;
     374:	8e e9       	ldi	r24, 0x9E	; 158
     376:	91 e0       	ldi	r25, 0x01	; 1
     378:	68 2f       	mov	r22, r24
     37a:	8b 83       	std	Y+3, r24	; 0x03
     37c:	9c 83       	std	Y+4, r25	; 0x04
	config.trigger_angle = 0;
	config.triac_state = off;
	triac_driver_init(config);
     37e:	5a 81       	ldd	r21, Y+2	; 0x02
     380:	7c 81       	ldd	r23, Y+4	; 0x04
     382:	80 e0       	ldi	r24, 0x00	; 0
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	4f d3       	rcall	.+1694   	; 0xa26 <triac_driver_init>

	/* Replace with your application code */
	while (1) {
		touch_example();
     388:	cf df       	rcall	.-98     	; 0x328 <touch_example>
     38a:	fe cf       	rjmp	.-4      	; 0x388 <main+0x2e>

0000038c <datastreamer_init>:
Input  : none
Output : none
Notes  :
============================================================================*/
void datastreamer_init(void)
{
     38c:	08 95       	ret

0000038e <datastreamer_transmit>:
Input  : Byte to be transmitted
Output : none
Notes  :
============================================================================*/
void datastreamer_transmit(uint8_t data_byte)
{
     38e:	cf 93       	push	r28
     390:	c8 2f       	mov	r28, r24
	while (!USART_is_tx_ready())
     392:	31 d2       	rcall	.+1122   	; 0x7f6 <USART_is_tx_ready>
     394:	88 23       	and	r24, r24
     396:	e9 f3       	breq	.-6      	; 0x392 <datastreamer_transmit+0x4>
		;

	USART_write(data_byte);
     398:	8c 2f       	mov	r24, r28
     39a:	3d d2       	rcall	.+1146   	; 0x816 <USART_write>

	while (USART_is_tx_busy())
     39c:	32 d2       	rcall	.+1124   	; 0x802 <USART_is_tx_busy>
     39e:	81 11       	cpse	r24, r1
     3a0:	fd cf       	rjmp	.-6      	; 0x39c <datastreamer_transmit+0xe>
		;
}
     3a2:	cf 91       	pop	r28
     3a4:	08 95       	ret

000003a6 <datastreamer_output>:
Output : none
Notes  : The data visualizer scripts that are generated in the project should be
         set on the data visualizer software.
============================================================================*/
void datastreamer_output(void)
{
     3a6:	0f 93       	push	r16
     3a8:	1f 93       	push	r17
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	00 d0       	rcall	.+0      	; 0x3b0 <datastreamer_output+0xa>
     3b0:	cd b7       	in	r28, 0x3d	; 61
     3b2:	de b7       	in	r29, 0x3e	; 62
	static uint8_t    sequence = 0u;
	uint16_t          u16temp_output;
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
     3b4:	80 91 74 3e 	lds	r24, 0x3E74	; 0x803e74 <sequence.4047>
     3b8:	8f 70       	andi	r24, 0x0F	; 15
	if (send_header == 0) {
     3ba:	49 f0       	breq	.+18     	; 0x3ce <datastreamer_output+0x28>
     3bc:	0d c0       	rjmp	.+26     	; 0x3d8 <datastreamer_output+0x32>
		for (i = 0; i < sizeof(data); i++) {
			datastreamer_transmit(data[i]);
     3be:	f8 01       	movw	r30, r16
     3c0:	ef 5f       	subi	r30, 0xFF	; 255
     3c2:	f1 4c       	sbci	r31, 0xC1	; 193
     3c4:	80 81       	ld	r24, Z
     3c6:	e3 df       	rcall	.-58     	; 0x38e <datastreamer_transmit>
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
		for (i = 0; i < sizeof(data); i++) {
     3c8:	0f 5f       	subi	r16, 0xFF	; 255
     3ca:	1f 4f       	sbci	r17, 0xFF	; 255
     3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <datastreamer_output+0x2c>
     3ce:	00 e0       	ldi	r16, 0x00	; 0
     3d0:	10 e0       	ldi	r17, 0x00	; 0
     3d2:	03 31       	cpi	r16, 0x13	; 19
     3d4:	11 05       	cpc	r17, r1
     3d6:	98 f3       	brcs	.-26     	; 0x3be <datastreamer_output+0x18>
			datastreamer_transmit(data[i]);
		}
	}

	// Start token
	datastreamer_transmit(0x55);
     3d8:	85 e5       	ldi	r24, 0x55	; 85
     3da:	d9 df       	rcall	.-78     	; 0x38e <datastreamer_transmit>

	// Frame Start
	datastreamer_transmit(sequence);
     3dc:	80 91 74 3e 	lds	r24, 0x3E74	; 0x803e74 <sequence.4047>
     3e0:	d6 df       	rcall	.-84     	; 0x38e <datastreamer_transmit>
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     3e2:	19 82       	std	Y+1, r1	; 0x01
     3e4:	1a 82       	std	Y+2, r1	; 0x02
     3e6:	3d c0       	rjmp	.+122    	; 0x462 <__LOCK_REGION_LENGTH__+0x62>

		/* Signals */
		u16temp_output = get_sensor_node_signal(count_bytes_out);
     3e8:	89 81       	ldd	r24, Y+1	; 0x01
     3ea:	9a 81       	ldd	r25, Y+2	; 0x02
     3ec:	11 d1       	rcall	.+546    	; 0x610 <get_sensor_node_signal>
     3ee:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     3f0:	ce df       	rcall	.-100    	; 0x38e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     3f2:	81 2f       	mov	r24, r17
     3f4:	cc df       	rcall	.-104    	; 0x38e <datastreamer_transmit>

		/* Reference */
		u16temp_output = get_sensor_node_reference(count_bytes_out);
     3f6:	89 81       	ldd	r24, Y+1	; 0x01
     3f8:	9a 81       	ldd	r25, Y+2	; 0x02
     3fa:	17 d1       	rcall	.+558    	; 0x62a <get_sensor_node_reference>
     3fc:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     3fe:	c7 df       	rcall	.-114    	; 0x38e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     400:	81 2f       	mov	r24, r17
     402:	c5 df       	rcall	.-118    	; 0x38e <datastreamer_transmit>

		/* Touch delta */
		temp_int_calc = get_sensor_node_signal(count_bytes_out);
     404:	89 81       	ldd	r24, Y+1	; 0x01
     406:	9a 81       	ldd	r25, Y+2	; 0x02
     408:	03 d1       	rcall	.+518    	; 0x610 <get_sensor_node_signal>
     40a:	8c 01       	movw	r16, r24
		temp_int_calc -= get_sensor_node_reference(count_bytes_out);
     40c:	89 81       	ldd	r24, Y+1	; 0x01
     40e:	9a 81       	ldd	r25, Y+2	; 0x02
     410:	0c d1       	rcall	.+536    	; 0x62a <get_sensor_node_reference>
     412:	08 1b       	sub	r16, r24
     414:	19 0b       	sbc	r17, r25
		u16temp_output = (uint16_t)(temp_int_calc);
		datastreamer_transmit((uint8_t)u16temp_output);
     416:	80 2f       	mov	r24, r16
     418:	ba df       	rcall	.-140    	; 0x38e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     41a:	81 2f       	mov	r24, r17
     41c:	b8 df       	rcall	.-144    	; 0x38e <datastreamer_transmit>

		/* Comp Caps */
		u16temp_output = get_sensor_cc_val(count_bytes_out);
     41e:	89 81       	ldd	r24, Y+1	; 0x01
     420:	9a 81       	ldd	r25, Y+2	; 0x02
     422:	0f d1       	rcall	.+542    	; 0x642 <get_sensor_cc_val>
     424:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     426:	b3 df       	rcall	.-154    	; 0x38e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     428:	81 2f       	mov	r24, r17
     42a:	b1 df       	rcall	.-158    	; 0x38e <datastreamer_transmit>

		/* State */
		u8temp_output = get_sensor_state(count_bytes_out);
     42c:	89 81       	ldd	r24, Y+1	; 0x01
     42e:	9a 81       	ldd	r25, Y+2	; 0x02
     430:	15 d1       	rcall	.+554    	; 0x65c <get_sensor_state>
		if (0u != (u8temp_output & 0x80)) {
     432:	88 23       	and	r24, r24
     434:	1c f4       	brge	.+6      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
			datastreamer_transmit(0x01);
     436:	81 e0       	ldi	r24, 0x01	; 1
     438:	aa df       	rcall	.-172    	; 0x38e <datastreamer_transmit>
     43a:	02 c0       	rjmp	.+4      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
		} else {
			datastreamer_transmit(0x00);
     43c:	80 e0       	ldi	r24, 0x00	; 0
     43e:	a7 df       	rcall	.-178    	; 0x38e <datastreamer_transmit>
		}

		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
     440:	89 81       	ldd	r24, Y+1	; 0x01
     442:	9a 81       	ldd	r25, Y+2	; 0x02
     444:	fc 01       	movw	r30, r24
     446:	ee 0f       	add	r30, r30
     448:	ff 1f       	adc	r31, r31
     44a:	8e 0f       	add	r24, r30
     44c:	9f 1f       	adc	r25, r31
     44e:	fc 01       	movw	r30, r24
     450:	e4 5e       	subi	r30, 0xE4	; 228
     452:	f1 4c       	sbci	r31, 0xC1	; 193
     454:	80 81       	ld	r24, Z
     456:	9b df       	rcall	.-202    	; 0x38e <datastreamer_transmit>
	// Start token
	datastreamer_transmit(0x55);

	// Frame Start
	datastreamer_transmit(sequence);
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     458:	89 81       	ldd	r24, Y+1	; 0x01
     45a:	9a 81       	ldd	r25, Y+2	; 0x02
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	89 83       	std	Y+1, r24	; 0x01
     460:	9a 83       	std	Y+2, r25	; 0x02
     462:	89 81       	ldd	r24, Y+1	; 0x01
     464:	9a 81       	ldd	r25, Y+2	; 0x02
     466:	06 97       	sbiw	r24, 0x06	; 6
     468:	08 f4       	brcc	.+2      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     46a:	be cf       	rjmp	.-132    	; 0x3e8 <datastreamer_output+0x42>
		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
	}

	/* Other Debug Parameters */
	datastreamer_transmit(module_error_code);
     46c:	80 91 75 3e 	lds	r24, 0x3E75	; 0x803e75 <module_error_code>
     470:	8e df       	rcall	.-228    	; 0x38e <datastreamer_transmit>

	/* Frame End */
	datastreamer_transmit(sequence++);
     472:	80 91 74 3e 	lds	r24, 0x3E74	; 0x803e74 <sequence.4047>
     476:	91 e0       	ldi	r25, 0x01	; 1
     478:	98 0f       	add	r25, r24
     47a:	90 93 74 3e 	sts	0x3E74, r25	; 0x803e74 <sequence.4047>
     47e:	87 df       	rcall	.-242    	; 0x38e <datastreamer_transmit>

	/* End token */
	datastreamer_transmit(~0x55);
     480:	8a ea       	ldi	r24, 0xAA	; 170
     482:	85 df       	rcall	.-246    	; 0x38e <datastreamer_transmit>
}
     484:	0f 90       	pop	r0
     486:	0f 90       	pop	r0
     488:	df 91       	pop	r29
     48a:	cf 91       	pop	r28
     48c:	1f 91       	pop	r17
     48e:	0f 91       	pop	r16
     490:	08 95       	ret

00000492 <touch_ptc_pin_config>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     492:	e1 e3       	ldi	r30, 0x31	; 49
     494:	f4 e0       	ldi	r31, 0x04	; 4
     496:	80 81       	ld	r24, Z
     498:	87 7f       	andi	r24, 0xF7	; 247
     49a:	80 83       	st	Z, r24
     49c:	80 81       	ld	r24, Z
     49e:	88 7f       	andi	r24, 0xF8	; 248
     4a0:	84 60       	ori	r24, 0x04	; 4
     4a2:	80 83       	st	Z, r24
     4a4:	e5 e1       	ldi	r30, 0x15	; 21
     4a6:	f4 e0       	ldi	r31, 0x04	; 4
     4a8:	80 81       	ld	r24, Z
     4aa:	87 7f       	andi	r24, 0xF7	; 247
     4ac:	80 83       	st	Z, r24
     4ae:	80 81       	ld	r24, Z
     4b0:	88 7f       	andi	r24, 0xF8	; 248
     4b2:	84 60       	ori	r24, 0x04	; 4
     4b4:	80 83       	st	Z, r24
     4b6:	e0 e3       	ldi	r30, 0x30	; 48
     4b8:	f4 e0       	ldi	r31, 0x04	; 4
     4ba:	80 81       	ld	r24, Z
     4bc:	87 7f       	andi	r24, 0xF7	; 247
     4be:	80 83       	st	Z, r24
     4c0:	80 81       	ld	r24, Z
     4c2:	88 7f       	andi	r24, 0xF8	; 248
     4c4:	84 60       	ori	r24, 0x04	; 4
     4c6:	80 83       	st	Z, r24
     4c8:	e7 e1       	ldi	r30, 0x17	; 23
     4ca:	f4 e0       	ldi	r31, 0x04	; 4
     4cc:	80 81       	ld	r24, Z
     4ce:	87 7f       	andi	r24, 0xF7	; 247
     4d0:	80 83       	st	Z, r24
     4d2:	80 81       	ld	r24, Z
     4d4:	88 7f       	andi	r24, 0xF8	; 248
     4d6:	84 60       	ori	r24, 0x04	; 4
     4d8:	80 83       	st	Z, r24
     4da:	e6 e1       	ldi	r30, 0x16	; 22
     4dc:	f4 e0       	ldi	r31, 0x04	; 4
     4de:	80 81       	ld	r24, Z
     4e0:	87 7f       	andi	r24, 0xF7	; 247
     4e2:	80 83       	st	Z, r24
     4e4:	80 81       	ld	r24, Z
     4e6:	88 7f       	andi	r24, 0xF8	; 248
     4e8:	84 60       	ori	r24, 0x04	; 4
     4ea:	80 83       	st	Z, r24
     4ec:	e4 e1       	ldi	r30, 0x14	; 20
     4ee:	f4 e0       	ldi	r31, 0x04	; 4
     4f0:	80 81       	ld	r24, Z
     4f2:	87 7f       	andi	r24, 0xF7	; 247
     4f4:	80 83       	st	Z, r24
     4f6:	80 81       	ld	r24, Z
     4f8:	88 7f       	andi	r24, 0xF8	; 248
     4fa:	84 60       	ori	r24, 0x04	; 4
     4fc:	80 83       	st	Z, r24
     4fe:	08 95       	ret

00000500 <qtm_measure_complete_callback>:
     500:	81 e0       	ldi	r24, 0x01	; 1
     502:	80 93 77 3e 	sts	0x3E77, r24	; 0x803e77 <touch_postprocess_request>
     506:	08 95       	ret

00000508 <touch_sensors_config>:
     508:	cf 93       	push	r28
     50a:	df 93       	push	r29
     50c:	88 e3       	ldi	r24, 0x38	; 56
     50e:	9e e3       	ldi	r25, 0x3E	; 62
     510:	22 d9       	rcall	.-3516   	; 0xfffff756 <__eeprom_end+0xff7ef756>
     512:	84 eb       	ldi	r24, 0xB4	; 180
     514:	9e e3       	ldi	r25, 0x3E	; 62
     516:	57 d9       	rcall	.-3410   	; 0xfffff7c6 <__eeprom_end+0xff7ef7c6>
     518:	c0 e0       	ldi	r28, 0x00	; 0
     51a:	d0 e0       	ldi	r29, 0x00	; 0
     51c:	09 c0       	rjmp	.+18     	; 0x530 <touch_sensors_config+0x28>
     51e:	be 01       	movw	r22, r28
     520:	88 e3       	ldi	r24, 0x38	; 56
     522:	9e e3       	ldi	r25, 0x3E	; 62
     524:	be d9       	rcall	.-3204   	; 0xfffff8a2 <__eeprom_end+0xff7ef8a2>
     526:	be 01       	movw	r22, r28
     528:	88 e3       	ldi	r24, 0x38	; 56
     52a:	9e e3       	ldi	r25, 0x3E	; 62
     52c:	d9 d9       	rcall	.-3150   	; 0xfffff8e0 <__eeprom_end+0xff7ef8e0>
     52e:	21 96       	adiw	r28, 0x01	; 1
     530:	c6 30       	cpi	r28, 0x06	; 6
     532:	d1 05       	cpc	r29, r1
     534:	a0 f3       	brcs	.-24     	; 0x51e <touch_sensors_config+0x16>
     536:	c0 e0       	ldi	r28, 0x00	; 0
     538:	d0 e0       	ldi	r29, 0x00	; 0
     53a:	0e c0       	rjmp	.+28     	; 0x558 <touch_sensors_config+0x50>
     53c:	ae 01       	movw	r20, r28
     53e:	44 0f       	add	r20, r20
     540:	55 1f       	adc	r21, r21
     542:	44 0f       	add	r20, r20
     544:	55 1f       	adc	r21, r21
     546:	4c 0f       	add	r20, r28
     548:	5d 1f       	adc	r21, r29
     54a:	4a 56       	subi	r20, 0x6A	; 106
     54c:	51 4c       	sbci	r21, 0xC1	; 193
     54e:	6c 2f       	mov	r22, r28
     550:	84 e1       	ldi	r24, 0x14	; 20
     552:	9e e3       	ldi	r25, 0x3E	; 62
     554:	07 d3       	rcall	.+1550   	; 0xb64 <qtm_init_sensor_key>
     556:	21 96       	adiw	r28, 0x01	; 1
     558:	c6 30       	cpi	r28, 0x06	; 6
     55a:	d1 05       	cpc	r29, r1
     55c:	78 f3       	brcs	.-34     	; 0x53c <touch_sensors_config+0x34>
     55e:	80 e0       	ldi	r24, 0x00	; 0
     560:	df 91       	pop	r29
     562:	cf 91       	pop	r28
     564:	08 95       	ret

00000566 <qtm_error_callback>:
     566:	8f 5f       	subi	r24, 0xFF	; 255
     568:	80 93 75 3e 	sts	0x3E75, r24	; 0x803e75 <module_error_code>
     56c:	1c df       	rcall	.-456    	; 0x3a6 <datastreamer_output>
     56e:	08 95       	ret

00000570 <Timer_set_period>:
     570:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <gain_setting_int_cap+0x7f644f>
     574:	92 fd       	sbrc	r25, 2
     576:	fc cf       	rjmp	.-8      	; 0x570 <Timer_set_period>
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <gain_setting_int_cap+0x7f6458>
     57e:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <gain_setting_int_cap+0x7f6459>
     582:	08 95       	ret

00000584 <touch_init>:
     584:	80 e2       	ldi	r24, 0x20	; 32
     586:	f4 df       	rcall	.-24     	; 0x570 <Timer_set_period>
     588:	84 df       	rcall	.-248    	; 0x492 <touch_ptc_pin_config>
     58a:	be df       	rcall	.-132    	; 0x508 <touch_sensors_config>
     58c:	ff de       	rcall	.-514    	; 0x38c <datastreamer_init>
     58e:	08 95       	ret

00000590 <touch_process>:
     590:	80 91 78 3e 	lds	r24, 0x3E78	; 0x803e78 <time_to_measure_touch_flag>
     594:	81 30       	cpi	r24, 0x01	; 1
     596:	49 f4       	brne	.+18     	; 0x5aa <touch_process+0x1a>
     598:	60 e8       	ldi	r22, 0x80	; 128
     59a:	72 e0       	ldi	r23, 0x02	; 2
     59c:	88 e3       	ldi	r24, 0x38	; 56
     59e:	9e e3       	ldi	r25, 0x3E	; 62
     5a0:	1c d9       	rcall	.-3528   	; 0xfffff7da <__eeprom_end+0xff7ef7da>
     5a2:	81 11       	cpse	r24, r1
     5a4:	02 c0       	rjmp	.+4      	; 0x5aa <touch_process+0x1a>
     5a6:	10 92 78 3e 	sts	0x3E78, r1	; 0x803e78 <time_to_measure_touch_flag>
     5aa:	80 91 77 3e 	lds	r24, 0x3E77	; 0x803e77 <touch_postprocess_request>
     5ae:	81 30       	cpi	r24, 0x01	; 1
     5b0:	f1 f4       	brne	.+60     	; 0x5ee <touch_process+0x5e>
     5b2:	10 92 77 3e 	sts	0x3E77, r1	; 0x803e77 <touch_postprocess_request>
     5b6:	51 d7       	rcall	.+3746   	; 0x145a <qtm_acquisition_process>
     5b8:	81 11       	cpse	r24, r1
     5ba:	08 c0       	rjmp	.+16     	; 0x5cc <touch_process+0x3c>
     5bc:	84 e1       	ldi	r24, 0x14	; 20
     5be:	9e e3       	ldi	r25, 0x3E	; 62
     5c0:	f0 d2       	rcall	.+1504   	; 0xba2 <qtm_key_sensors_process>
     5c2:	88 23       	and	r24, r24
     5c4:	29 f0       	breq	.+10     	; 0x5d0 <touch_process+0x40>
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	ce df       	rcall	.-100    	; 0x566 <qtm_error_callback>
     5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <touch_process+0x40>
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	cb df       	rcall	.-106    	; 0x566 <qtm_error_callback>
     5d0:	e0 91 14 3e 	lds	r30, 0x3E14	; 0x803e14 <qtlib_key_set1>
     5d4:	f0 91 15 3e 	lds	r31, 0x3E15	; 0x803e15 <qtlib_key_set1+0x1>
     5d8:	80 81       	ld	r24, Z
     5da:	88 23       	and	r24, r24
     5dc:	24 f4       	brge	.+8      	; 0x5e6 <touch_process+0x56>
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	80 93 78 3e 	sts	0x3E78, r24	; 0x803e78 <time_to_measure_touch_flag>
     5e4:	03 c0       	rjmp	.+6      	; 0x5ec <touch_process+0x5c>
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	80 93 76 3e 	sts	0x3E76, r24	; 0x803e76 <measurement_done_touch>
     5ec:	dc de       	rcall	.-584    	; 0x3a6 <datastreamer_output>
     5ee:	08 95       	ret

000005f0 <touch_timer_handler>:
     5f0:	80 91 95 3e 	lds	r24, 0x3E95	; 0x803e95 <interrupt_cnt>
     5f4:	8f 5f       	subi	r24, 0xFF	; 255
     5f6:	80 93 95 3e 	sts	0x3E95, r24	; 0x803e95 <interrupt_cnt>
     5fa:	84 31       	cpi	r24, 0x14	; 20
     5fc:	40 f0       	brcs	.+16     	; 0x60e <touch_timer_handler+0x1e>
     5fe:	10 92 95 3e 	sts	0x3E95, r1	; 0x803e95 <interrupt_cnt>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	80 93 78 3e 	sts	0x3E78, r24	; 0x803e78 <time_to_measure_touch_flag>
     608:	84 e1       	ldi	r24, 0x14	; 20
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	a0 d2       	rcall	.+1344   	; 0xb4e <qtm_update_qtlib_timer>
     60e:	08 95       	ret

00000610 <get_sensor_node_signal>:
     610:	fc 01       	movw	r30, r24
     612:	ee 0f       	add	r30, r30
     614:	ff 1f       	adc	r31, r31
     616:	ee 0f       	add	r30, r30
     618:	ff 1f       	adc	r31, r31
     61a:	8e 0f       	add	r24, r30
     61c:	9f 1f       	adc	r25, r31
     61e:	fc 01       	movw	r30, r24
     620:	ea 56       	subi	r30, 0x6A	; 106
     622:	f1 4c       	sbci	r31, 0xC1	; 193
     624:	81 81       	ldd	r24, Z+1	; 0x01
     626:	92 81       	ldd	r25, Z+2	; 0x02
     628:	08 95       	ret

0000062a <get_sensor_node_reference>:
     62a:	fc 01       	movw	r30, r24
     62c:	ee 0f       	add	r30, r30
     62e:	ff 1f       	adc	r31, r31
     630:	e8 0f       	add	r30, r24
     632:	f9 1f       	adc	r31, r25
     634:	ee 0f       	add	r30, r30
     636:	ff 1f       	adc	r31, r31
     638:	e0 54       	subi	r30, 0x40	; 64
     63a:	f1 4c       	sbci	r31, 0xC1	; 193
     63c:	84 81       	ldd	r24, Z+4	; 0x04
     63e:	95 81       	ldd	r25, Z+5	; 0x05
     640:	08 95       	ret

00000642 <get_sensor_cc_val>:
     642:	fc 01       	movw	r30, r24
     644:	ee 0f       	add	r30, r30
     646:	ff 1f       	adc	r31, r31
     648:	ee 0f       	add	r30, r30
     64a:	ff 1f       	adc	r31, r31
     64c:	8e 0f       	add	r24, r30
     64e:	9f 1f       	adc	r25, r31
     650:	fc 01       	movw	r30, r24
     652:	ea 56       	subi	r30, 0x6A	; 106
     654:	f1 4c       	sbci	r31, 0xC1	; 193
     656:	83 81       	ldd	r24, Z+3	; 0x03
     658:	94 81       	ldd	r25, Z+4	; 0x04
     65a:	08 95       	ret

0000065c <get_sensor_state>:
     65c:	e0 91 18 3e 	lds	r30, 0x3E18	; 0x803e18 <qtlib_key_set1+0x4>
     660:	f0 91 19 3e 	lds	r31, 0x3E19	; 0x803e19 <qtlib_key_set1+0x5>
     664:	9c 01       	movw	r18, r24
     666:	22 0f       	add	r18, r18
     668:	33 1f       	adc	r19, r19
     66a:	82 0f       	add	r24, r18
     66c:	93 1f       	adc	r25, r19
     66e:	88 0f       	add	r24, r24
     670:	99 1f       	adc	r25, r25
     672:	e8 0f       	add	r30, r24
     674:	f9 1f       	adc	r31, r25
     676:	80 81       	ld	r24, Z
     678:	08 95       	ret

0000067a <__vector_17>:
Input    :  none
Output  :  none
Notes    :  none
============================================================================*/
ISR(ADC0_RESRDY_vect)
{
     67a:	1f 92       	push	r1
     67c:	0f 92       	push	r0
     67e:	0f b6       	in	r0, 0x3f	; 63
     680:	0f 92       	push	r0
     682:	11 24       	eor	r1, r1
     684:	2f 93       	push	r18
     686:	3f 93       	push	r19
     688:	4f 93       	push	r20
     68a:	5f 93       	push	r21
     68c:	6f 93       	push	r22
     68e:	7f 93       	push	r23
     690:	8f 93       	push	r24
     692:	9f 93       	push	r25
     694:	af 93       	push	r26
     696:	bf 93       	push	r27
     698:	ef 93       	push	r30
     69a:	ff 93       	push	r31
	qtm_t81x_ptc_handler_eoc();
     69c:	62 d9       	rcall	.-3388   	; 0xfffff962 <__eeprom_end+0xff7ef962>
}
     69e:	ff 91       	pop	r31
     6a0:	ef 91       	pop	r30
     6a2:	bf 91       	pop	r27
     6a4:	af 91       	pop	r26
     6a6:	9f 91       	pop	r25
     6a8:	8f 91       	pop	r24
     6aa:	7f 91       	pop	r23
     6ac:	6f 91       	pop	r22
     6ae:	5f 91       	pop	r21
     6b0:	4f 91       	pop	r20
     6b2:	3f 91       	pop	r19
     6b4:	2f 91       	pop	r18
     6b6:	0f 90       	pop	r0
     6b8:	0f be       	out	0x3f, r0	; 63
     6ba:	0f 90       	pop	r0
     6bc:	1f 90       	pop	r1
     6be:	18 95       	reti

000006c0 <BOD_init>:
	//		 | BOD_VLMCFG_BELOW_gc; /* Interrupt when supply goes below VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
     6c0:	80 e0       	ldi	r24, 0x00	; 0
     6c2:	08 95       	ret

000006c4 <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
     6c4:	40 e0       	ldi	r20, 0x00	; 0
     6c6:	68 ed       	ldi	r22, 0xD8	; 216
     6c8:	81 e6       	ldi	r24, 0x61	; 97
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	6b d0       	rcall	.+214    	; 0x7a4 <protected_write_io>
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
     6ce:	80 e0       	ldi	r24, 0x00	; 0
     6d0:	08 95       	ret

000006d2 <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
     6d2:	78 94       	sei

	return 0;
}
     6d4:	80 e0       	ldi	r24, 0x00	; 0
     6d6:	08 95       	ret

000006d8 <mcu_init>:
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	08 c0       	rjmp	.+16     	; 0x6ec <mcu_init+0x14>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     6dc:	e8 2f       	mov	r30, r24
     6de:	f0 e0       	ldi	r31, 0x00	; 0
     6e0:	e0 5f       	subi	r30, 0xF0	; 240
     6e2:	fb 4f       	sbci	r31, 0xFB	; 251
     6e4:	90 81       	ld	r25, Z
     6e6:	98 60       	ori	r25, 0x08	; 8
     6e8:	90 83       	st	Z, r25
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
     6ea:	8f 5f       	subi	r24, 0xFF	; 255
     6ec:	88 30       	cpi	r24, 0x08	; 8
     6ee:	b0 f3       	brcs	.-20     	; 0x6dc <mcu_init+0x4>
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	08 c0       	rjmp	.+16     	; 0x704 <mcu_init+0x2c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     6f4:	e8 2f       	mov	r30, r24
     6f6:	f0 e0       	ldi	r31, 0x00	; 0
     6f8:	e0 5d       	subi	r30, 0xD0	; 208
     6fa:	fb 4f       	sbci	r31, 0xFB	; 251
     6fc:	90 81       	ld	r25, Z
     6fe:	98 60       	ori	r25, 0x08	; 8
     700:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     702:	8f 5f       	subi	r24, 0xFF	; 255
     704:	88 30       	cpi	r24, 0x08	; 8
     706:	b0 f3       	brcs	.-20     	; 0x6f4 <mcu_init+0x1c>
     708:	80 e0       	ldi	r24, 0x00	; 0
     70a:	08 c0       	rjmp	.+16     	; 0x71c <mcu_init+0x44>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     70c:	e8 2f       	mov	r30, r24
     70e:	f0 e0       	ldi	r31, 0x00	; 0
     710:	e0 5b       	subi	r30, 0xB0	; 176
     712:	fb 4f       	sbci	r31, 0xFB	; 251
     714:	90 81       	ld	r25, Z
     716:	98 60       	ori	r25, 0x08	; 8
     718:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     71a:	8f 5f       	subi	r24, 0xFF	; 255
     71c:	88 30       	cpi	r24, 0x08	; 8
     71e:	b0 f3       	brcs	.-20     	; 0x70c <mcu_init+0x34>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
     720:	08 95       	ret

00000722 <USART_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
     722:	84 b1       	in	r24, 0x04	; 4
     724:	87 7f       	andi	r24, 0xF7	; 247
     726:	84 b9       	out	0x04, r24	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
     728:	e3 e3       	ldi	r30, 0x33	; 51
     72a:	f4 e0       	ldi	r31, 0x04	; 4
     72c:	80 81       	ld	r24, Z
     72e:	87 7f       	andi	r24, 0xF7	; 247
     730:	80 83       	st	Z, r24
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
     732:	85 b1       	in	r24, 0x05	; 5
     734:	8b 7f       	andi	r24, 0xFB	; 251
     736:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     738:	84 b1       	in	r24, 0x04	; 4
     73a:	84 60       	ori	r24, 0x04	; 4
     73c:	84 b9       	out	0x04, r24	; 4
	    // <true"> High
	    false);

	PB2_set_dir(PORT_DIR_OUT);

	USART_init();
     73e:	51 d0       	rcall	.+162    	; 0x7e2 <USART_init>
     740:	08 95       	ret

00000742 <TIMER_0_initialization>:
}

void TIMER_0_initialization(void)
{

	TIMER_0_init();
     742:	42 d0       	rcall	.+132    	; 0x7c8 <TIMER_0_init>
     744:	08 95       	ret

00000746 <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
     746:	c8 df       	rcall	.-112    	; 0x6d8 <mcu_init>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
     748:	81 b1       	in	r24, 0x01	; 1
     74a:	8d 7f       	andi	r24, 0xFD	; 253
     74c:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
     74e:	80 b1       	in	r24, 0x00	; 0
     750:	82 60       	ori	r24, 0x02	; 2
     752:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
     754:	81 b1       	in	r24, 0x01	; 1
     756:	8b 7f       	andi	r24, 0xFB	; 251
     758:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
     75a:	80 b1       	in	r24, 0x00	; 0
     75c:	84 60       	ori	r24, 0x04	; 4
     75e:	80 b9       	out	0x00, r24	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
     760:	81 b1       	in	r24, 0x01	; 1
     762:	87 7f       	andi	r24, 0xF7	; 247
     764:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
     766:	80 b1       	in	r24, 0x00	; 0
     768:	88 60       	ori	r24, 0x08	; 8
     76a:	80 b9       	out	0x00, r24	; 0
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
     76c:	85 b1       	in	r24, 0x05	; 5
     76e:	8f 7e       	andi	r24, 0xEF	; 239
     770:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
     772:	84 b1       	in	r24, 0x04	; 4
     774:	80 61       	ori	r24, 0x10	; 16
     776:	84 b9       	out	0x04, r24	; 4
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
     778:	84 b1       	in	r24, 0x04	; 4
     77a:	8f 7d       	andi	r24, 0xDF	; 223
     77c:	84 b9       	out	0x04, r24	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
     77e:	e5 e3       	ldi	r30, 0x35	; 53
     780:	f4 e0       	ldi	r31, 0x04	; 4
     782:	80 81       	ld	r24, Z
     784:	87 7f       	andi	r24, 0xF7	; 247
     786:	80 83       	st	Z, r24
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
     788:	89 b1       	in	r24, 0x09	; 9
     78a:	8e 7f       	andi	r24, 0xFE	; 254
     78c:	89 b9       	out	0x09, r24	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
     78e:	88 b1       	in	r24, 0x08	; 8
     790:	81 60       	ori	r24, 0x01	; 1
     792:	88 b9       	out	0x08, r24	; 8
	    // <true"> High
	    false);

	Rele3_set_dir(PORT_DIR_OUT);

	CLKCTRL_init();
     794:	97 df       	rcall	.-210    	; 0x6c4 <CLKCTRL_init>

	Timer_init();
     796:	0a d0       	rcall	.+20     	; 0x7ac <Timer_init>

	USART_initialization();
     798:	c4 df       	rcall	.-120    	; 0x722 <USART_initialization>

	TIMER_0_initialization();
     79a:	d3 df       	rcall	.-90     	; 0x742 <TIMER_0_initialization>

	CPUINT_init();
     79c:	9a df       	rcall	.-204    	; 0x6d2 <CPUINT_init>

	SLPCTRL_init();
     79e:	12 d0       	rcall	.+36     	; 0x7c4 <SLPCTRL_init>

	BOD_init();
     7a0:	8f df       	rcall	.-226    	; 0x6c0 <BOD_init>
     7a2:	08 95       	ret

000007a4 <protected_write_io>:
#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     7a4:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
     7a6:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
     7a8:	40 83       	st	Z, r20
	ret                             // Return to caller
     7aa:	08 95       	ret

000007ac <Timer_init>:
 * \return Initialization status.
 */
int8_t Timer_init()
{

	while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
     7ac:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <gain_setting_int_cap+0x7f644f>
     7b0:	81 11       	cpse	r24, r1
     7b2:	fc cf       	rjmp	.-8      	; 0x7ac <Timer_init>

	// RTC.CMP = 0x0; /* Compare: 0x0 */

	// RTC.CNT = 0x0; /* Counter: 0x0 */

	RTC.CTRLA = RTC_PRESCALER_DIV1_gc   /* 1 */
     7b4:	e0 e4       	ldi	r30, 0x40	; 64
     7b6:	f1 e0       	ldi	r31, 0x01	; 1
     7b8:	81 e8       	ldi	r24, 0x81	; 129
     7ba:	80 83       	st	Z, r24

	// RTC.CLKSEL = RTC_CLKSEL_INT32K_gc; /* 32KHz Internal Ultra Low Power Oscillator (OSCULP32K) */

	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.INTCTRL = 1 << RTC_CMP_bp    /* Compare Match Interrupt enable: enabled */
     7bc:	82 e0       	ldi	r24, 0x02	; 2
     7be:	82 83       	std	Z+2, r24	; 0x02
	// RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	// RTC.PITINTCTRL = 0 << RTC_PI_bp; /* Periodic Interrupt: disabled */

	return 0;
}
     7c0:	80 e0       	ldi	r24, 0x00	; 0
     7c2:	08 95       	ret

000007c4 <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	08 95       	ret

000007c8 <TIMER_0_init>:

	// TCA0.SINGLE.CTRLC = 0 << TCA_SINGLE_CMP0OV_bp /* Compare 0 Waveform Output Value: disabled */
	//		 | 0 << TCA_SINGLE_CMP1OV_bp /* Compare 1 Waveform Output Value: disabled */
	//		 | 0 << TCA_SINGLE_CMP2OV_bp; /* Compare 2 Waveform Output Value: disabled */

	TCA0.SINGLE.DBGCTRL = 1 << TCA_SINGLE_DBGRUN_bp; /* Debug Run: enabled */
     7c8:	e0 e0       	ldi	r30, 0x00	; 0
     7ca:	fa e0       	ldi	r31, 0x0A	; 10
     7cc:	81 e0       	ldi	r24, 0x01	; 1
     7ce:	86 87       	std	Z+14, r24	; 0x0e

	// TCA0.SINGLE.EVCTRL = 0 << TCA_SINGLE_CNTEI_bp /* Count on Event Input: disabled */
	//		 | TCA_SINGLE_EVACT_POSEDGE_gc /* Count on positive edge event */;

	TCA0.SINGLE.INTCTRL = 0 << TCA_SINGLE_CMP0_bp   /* Compare 0 Interrupt: disabled */
     7d0:	82 87       	std	Z+10, r24	; 0x0a
	                      | 0 << TCA_SINGLE_CMP1_bp /* Compare 1 Interrupt: disabled */
	                      | 0 << TCA_SINGLE_CMP2_bp /* Compare 2 Interrupt: disabled */
	                      | 1 << TCA_SINGLE_OVF_bp; /* Overflow Interrupt: enabled */

	TCA0.SINGLE.PER = 0xfa; /* Period: 0xfa */
     7d2:	8a ef       	ldi	r24, 0xFA	; 250
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	86 a3       	std	Z+38, r24	; 0x26
     7d8:	97 a3       	std	Z+39, r25	; 0x27

	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV8_gc /* System Clock / 8 */
     7da:	87 e0       	ldi	r24, 0x07	; 7
     7dc:	80 83       	st	Z, r24
	                    | 1 << TCA_SINGLE_ENABLE_bp /* Module Enable: enabled */;

	return 0;
}
     7de:	80 e0       	ldi	r24, 0x00	; 0
     7e0:	08 95       	ret

000007e2 <USART_init>:
uint8_t USART_read()
{
	while (!(USART0.STATUS & USART_RXCIF_bm))
		;
	return USART0.RXDATAL;
}
     7e2:	e0 e0       	ldi	r30, 0x00	; 0
     7e4:	f8 e0       	ldi	r31, 0x08	; 8
     7e6:	83 e2       	ldi	r24, 0x23	; 35
     7e8:	98 e0       	ldi	r25, 0x08	; 8
     7ea:	80 87       	std	Z+8, r24	; 0x08
     7ec:	91 87       	std	Z+9, r25	; 0x09
     7ee:	80 ec       	ldi	r24, 0xC0	; 192
     7f0:	86 83       	std	Z+6, r24	; 0x06
     7f2:	80 e0       	ldi	r24, 0x00	; 0
     7f4:	08 95       	ret

000007f6 <USART_is_tx_ready>:
     7f6:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <gain_setting_int_cap+0x7f6b12>
     7fa:	85 fb       	bst	r24, 5
     7fc:	88 27       	eor	r24, r24
     7fe:	80 f9       	bld	r24, 0
     800:	08 95       	ret

00000802 <USART_is_tx_busy>:
     802:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <gain_setting_int_cap+0x7f6b12>
     806:	82 95       	swap	r24
     808:	86 95       	lsr	r24
     80a:	86 95       	lsr	r24
     80c:	83 70       	andi	r24, 0x03	; 3
     80e:	91 e0       	ldi	r25, 0x01	; 1
     810:	89 27       	eor	r24, r25
     812:	81 70       	andi	r24, 0x01	; 1
     814:	08 95       	ret

00000816 <USART_write>:
 *
 * \return Nothing
 */
void USART_write(const uint8_t data)
{
	while (!(USART0.STATUS & USART_DREIF_bm))
     816:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <gain_setting_int_cap+0x7f6b12>
     81a:	95 ff       	sbrs	r25, 5
     81c:	fc cf       	rjmp	.-8      	; 0x816 <USART_write>
		;
	USART0.TXDATAL = data;
     81e:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <gain_setting_int_cap+0x7f6b10>
     822:	08 95       	ret

00000824 <triac_driver_tick>:
}


uint8_t triac_get_angle(){
	return driver_config.trigger_angle;
}
     824:	80 91 87 3e 	lds	r24, 0x3E87	; 0x803e87 <driver_started>
     828:	88 23       	and	r24, r24
     82a:	09 f4       	brne	.+2      	; 0x82e <triac_driver_tick+0xa>
     82c:	fb c0       	rjmp	.+502    	; 0xa24 <triac_driver_tick+0x200>
     82e:	80 91 86 3e 	lds	r24, 0x3E86	; 0x803e86 <driver_config+0x5>
     832:	81 30       	cpi	r24, 0x01	; 1
     834:	09 f0       	breq	.+2      	; 0x838 <triac_driver_tick+0x14>
     836:	e3 c0       	rjmp	.+454    	; 0x9fe <triac_driver_tick+0x1da>
     838:	90 91 85 3e 	lds	r25, 0x3E85	; 0x803e85 <driver_config+0x4>
     83c:	9a 30       	cpi	r25, 0x0A	; 10
     83e:	08 f4       	brcc	.+2      	; 0x842 <triac_driver_tick+0x1e>
     840:	de c0       	rjmp	.+444    	; 0x9fe <triac_driver_tick+0x1da>
     842:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <driver_config>
     846:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <driver_config+0x1>
     84a:	09 95       	icall
     84c:	81 11       	cpse	r24, r1
     84e:	07 c0       	rjmp	.+14     	; 0x85e <triac_driver_tick+0x3a>
     850:	80 91 80 3e 	lds	r24, 0x3E80	; 0x803e80 <flag_zero_sync.3755>
     854:	81 11       	cpse	r24, r1
     856:	03 c0       	rjmp	.+6      	; 0x85e <triac_driver_tick+0x3a>
     858:	81 e0       	ldi	r24, 0x01	; 1
     85a:	80 93 80 3e 	sts	0x3E80, r24	; 0x803e80 <flag_zero_sync.3755>
     85e:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <driver_config>
     862:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <driver_config+0x1>
     866:	09 95       	icall
     868:	81 11       	cpse	r24, r1
     86a:	60 c0       	rjmp	.+192    	; 0x92c <triac_driver_tick+0x108>
     86c:	80 91 80 3e 	lds	r24, 0x3E80	; 0x803e80 <flag_zero_sync.3755>
     870:	88 23       	and	r24, r24
     872:	09 f4       	brne	.+2      	; 0x876 <triac_driver_tick+0x52>
     874:	5b c0       	rjmp	.+182    	; 0x92c <triac_driver_tick+0x108>
     876:	10 92 7f 3e 	sts	0x3E7F, r1	; 0x803e7f <flag_zero_high.3757>
     87a:	80 91 7e 3e 	lds	r24, 0x3E7E	; 0x803e7e <flag_zero_low.3756>
     87e:	81 11       	cpse	r24, r1
     880:	20 c0       	rjmp	.+64     	; 0x8c2 <triac_driver_tick+0x9e>
     882:	60 91 85 3e 	lds	r22, 0x3E85	; 0x803e85 <driver_config+0x4>
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	37 d9       	rcall	.-3474   	; 0xfffffafc <__eeprom_end+0xff7efafc>
     88e:	2c ea       	ldi	r18, 0xAC	; 172
     890:	3a ea       	ldi	r19, 0xAA	; 170
     892:	46 ea       	ldi	r20, 0xA6	; 166
     894:	52 e4       	ldi	r21, 0x42	; 66
     896:	be d9       	rcall	.-3204   	; 0xfffffc14 <__eeprom_end+0xff7efc14>
     898:	20 e0       	ldi	r18, 0x00	; 0
     89a:	30 e0       	ldi	r19, 0x00	; 0
     89c:	44 e3       	ldi	r20, 0x34	; 52
     89e:	53 e4       	ldi	r21, 0x43	; 67
     8a0:	8a d8       	rcall	.-3820   	; 0xfffff9b6 <__eeprom_end+0xff7ef9b6>
     8a2:	fb d8       	rcall	.-3594   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     8a4:	60 93 7c 3e 	sts	0x3E7C, r22	; 0x803e7c <cnt_angle.3759>
     8a8:	70 93 7d 3e 	sts	0x3E7D, r23	; 0x803e7d <cnt_angle.3759+0x1>
     8ac:	81 e0       	ldi	r24, 0x01	; 1
     8ae:	80 93 7e 3e 	sts	0x3E7E, r24	; 0x803e7e <flag_zero_low.3756>
     8b2:	85 e0       	ldi	r24, 0x05	; 5
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	80 93 7a 3e 	sts	0x3E7A, r24	; 0x803e7a <cnt_triac.3760>
     8ba:	90 93 7b 3e 	sts	0x3E7B, r25	; 0x803e7b <cnt_triac.3760+0x1>
     8be:	10 92 79 3e 	sts	0x3E79, r1	; 0x803e79 <flag_triac_off.3758>
     8c2:	80 91 7c 3e 	lds	r24, 0x3E7C	; 0x803e7c <cnt_angle.3759>
     8c6:	90 91 7d 3e 	lds	r25, 0x3E7D	; 0x803e7d <cnt_angle.3759+0x1>
     8ca:	00 97       	sbiw	r24, 0x00	; 0
     8cc:	29 f0       	breq	.+10     	; 0x8d8 <triac_driver_tick+0xb4>
     8ce:	01 97       	sbiw	r24, 0x01	; 1
     8d0:	80 93 7c 3e 	sts	0x3E7C, r24	; 0x803e7c <cnt_angle.3759>
     8d4:	90 93 7d 3e 	sts	0x3E7D, r25	; 0x803e7d <cnt_angle.3759+0x1>
     8d8:	80 91 7c 3e 	lds	r24, 0x3E7C	; 0x803e7c <cnt_angle.3759>
     8dc:	90 91 7d 3e 	lds	r25, 0x3E7D	; 0x803e7d <cnt_angle.3759+0x1>
     8e0:	89 2b       	or	r24, r25
     8e2:	21 f5       	brne	.+72     	; 0x92c <triac_driver_tick+0x108>
     8e4:	80 91 79 3e 	lds	r24, 0x3E79	; 0x803e79 <flag_triac_off.3758>
     8e8:	81 11       	cpse	r24, r1
     8ea:	20 c0       	rjmp	.+64     	; 0x92c <triac_driver_tick+0x108>
     8ec:	e0 91 83 3e 	lds	r30, 0x3E83	; 0x803e83 <driver_config+0x2>
     8f0:	f0 91 84 3e 	lds	r31, 0x3E84	; 0x803e84 <driver_config+0x3>
     8f4:	81 e0       	ldi	r24, 0x01	; 1
     8f6:	09 95       	icall
     8f8:	80 91 7a 3e 	lds	r24, 0x3E7A	; 0x803e7a <cnt_triac.3760>
     8fc:	90 91 7b 3e 	lds	r25, 0x3E7B	; 0x803e7b <cnt_triac.3760+0x1>
     900:	00 97       	sbiw	r24, 0x00	; 0
     902:	29 f0       	breq	.+10     	; 0x90e <triac_driver_tick+0xea>
     904:	01 97       	sbiw	r24, 0x01	; 1
     906:	80 93 7a 3e 	sts	0x3E7A, r24	; 0x803e7a <cnt_triac.3760>
     90a:	90 93 7b 3e 	sts	0x3E7B, r25	; 0x803e7b <cnt_triac.3760+0x1>
     90e:	80 91 7a 3e 	lds	r24, 0x3E7A	; 0x803e7a <cnt_triac.3760>
     912:	90 91 7b 3e 	lds	r25, 0x3E7B	; 0x803e7b <cnt_triac.3760+0x1>
     916:	89 2b       	or	r24, r25
     918:	49 f4       	brne	.+18     	; 0x92c <triac_driver_tick+0x108>
     91a:	e0 91 83 3e 	lds	r30, 0x3E83	; 0x803e83 <driver_config+0x2>
     91e:	f0 91 84 3e 	lds	r31, 0x3E84	; 0x803e84 <driver_config+0x3>
     922:	80 e0       	ldi	r24, 0x00	; 0
     924:	09 95       	icall
     926:	81 e0       	ldi	r24, 0x01	; 1
     928:	80 93 79 3e 	sts	0x3E79, r24	; 0x803e79 <flag_triac_off.3758>
     92c:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <driver_config>
     930:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <driver_config+0x1>
     934:	09 95       	icall
     936:	88 23       	and	r24, r24
     938:	09 f4       	brne	.+2      	; 0x93c <triac_driver_tick+0x118>
     93a:	74 c0       	rjmp	.+232    	; 0xa24 <triac_driver_tick+0x200>
     93c:	80 91 80 3e 	lds	r24, 0x3E80	; 0x803e80 <flag_zero_sync.3755>
     940:	88 23       	and	r24, r24
     942:	09 f4       	brne	.+2      	; 0x946 <triac_driver_tick+0x122>
     944:	6f c0       	rjmp	.+222    	; 0xa24 <triac_driver_tick+0x200>
     946:	10 92 7e 3e 	sts	0x3E7E, r1	; 0x803e7e <flag_zero_low.3756>
     94a:	80 91 7f 3e 	lds	r24, 0x3E7F	; 0x803e7f <flag_zero_high.3757>
     94e:	81 11       	cpse	r24, r1
     950:	20 c0       	rjmp	.+64     	; 0x992 <triac_driver_tick+0x16e>
     952:	60 91 85 3e 	lds	r22, 0x3E85	; 0x803e85 <driver_config+0x4>
     956:	70 e0       	ldi	r23, 0x00	; 0
     958:	80 e0       	ldi	r24, 0x00	; 0
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	cf d8       	rcall	.-3682   	; 0xfffffafc <__eeprom_end+0xff7efafc>
     95e:	2c ea       	ldi	r18, 0xAC	; 172
     960:	3a ea       	ldi	r19, 0xAA	; 170
     962:	46 ea       	ldi	r20, 0xA6	; 166
     964:	52 e4       	ldi	r21, 0x42	; 66
     966:	56 d9       	rcall	.-3412   	; 0xfffffc14 <__eeprom_end+0xff7efc14>
     968:	20 e0       	ldi	r18, 0x00	; 0
     96a:	30 e0       	ldi	r19, 0x00	; 0
     96c:	44 e3       	ldi	r20, 0x34	; 52
     96e:	53 e4       	ldi	r21, 0x43	; 67
     970:	22 d8       	rcall	.-4028   	; 0xfffff9b6 <__eeprom_end+0xff7ef9b6>
     972:	93 d8       	rcall	.-3802   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     974:	60 93 7c 3e 	sts	0x3E7C, r22	; 0x803e7c <cnt_angle.3759>
     978:	70 93 7d 3e 	sts	0x3E7D, r23	; 0x803e7d <cnt_angle.3759+0x1>
     97c:	81 e0       	ldi	r24, 0x01	; 1
     97e:	80 93 7f 3e 	sts	0x3E7F, r24	; 0x803e7f <flag_zero_high.3757>
     982:	85 e0       	ldi	r24, 0x05	; 5
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	80 93 7a 3e 	sts	0x3E7A, r24	; 0x803e7a <cnt_triac.3760>
     98a:	90 93 7b 3e 	sts	0x3E7B, r25	; 0x803e7b <cnt_triac.3760+0x1>
     98e:	10 92 79 3e 	sts	0x3E79, r1	; 0x803e79 <flag_triac_off.3758>
     992:	80 91 7c 3e 	lds	r24, 0x3E7C	; 0x803e7c <cnt_angle.3759>
     996:	90 91 7d 3e 	lds	r25, 0x3E7D	; 0x803e7d <cnt_angle.3759+0x1>
     99a:	00 97       	sbiw	r24, 0x00	; 0
     99c:	29 f0       	breq	.+10     	; 0x9a8 <triac_driver_tick+0x184>
     99e:	01 97       	sbiw	r24, 0x01	; 1
     9a0:	80 93 7c 3e 	sts	0x3E7C, r24	; 0x803e7c <cnt_angle.3759>
     9a4:	90 93 7d 3e 	sts	0x3E7D, r25	; 0x803e7d <cnt_angle.3759+0x1>
     9a8:	80 91 7c 3e 	lds	r24, 0x3E7C	; 0x803e7c <cnt_angle.3759>
     9ac:	90 91 7d 3e 	lds	r25, 0x3E7D	; 0x803e7d <cnt_angle.3759+0x1>
     9b0:	89 2b       	or	r24, r25
     9b2:	c1 f5       	brne	.+112    	; 0xa24 <triac_driver_tick+0x200>
     9b4:	80 91 79 3e 	lds	r24, 0x3E79	; 0x803e79 <flag_triac_off.3758>
     9b8:	81 11       	cpse	r24, r1
     9ba:	34 c0       	rjmp	.+104    	; 0xa24 <triac_driver_tick+0x200>
     9bc:	e0 91 83 3e 	lds	r30, 0x3E83	; 0x803e83 <driver_config+0x2>
     9c0:	f0 91 84 3e 	lds	r31, 0x3E84	; 0x803e84 <driver_config+0x3>
     9c4:	81 e0       	ldi	r24, 0x01	; 1
     9c6:	09 95       	icall
     9c8:	80 91 7a 3e 	lds	r24, 0x3E7A	; 0x803e7a <cnt_triac.3760>
     9cc:	90 91 7b 3e 	lds	r25, 0x3E7B	; 0x803e7b <cnt_triac.3760+0x1>
     9d0:	00 97       	sbiw	r24, 0x00	; 0
     9d2:	29 f0       	breq	.+10     	; 0x9de <triac_driver_tick+0x1ba>
     9d4:	01 97       	sbiw	r24, 0x01	; 1
     9d6:	80 93 7a 3e 	sts	0x3E7A, r24	; 0x803e7a <cnt_triac.3760>
     9da:	90 93 7b 3e 	sts	0x3E7B, r25	; 0x803e7b <cnt_triac.3760+0x1>
     9de:	80 91 7a 3e 	lds	r24, 0x3E7A	; 0x803e7a <cnt_triac.3760>
     9e2:	90 91 7b 3e 	lds	r25, 0x3E7B	; 0x803e7b <cnt_triac.3760+0x1>
     9e6:	89 2b       	or	r24, r25
     9e8:	e9 f4       	brne	.+58     	; 0xa24 <triac_driver_tick+0x200>
     9ea:	e0 91 83 3e 	lds	r30, 0x3E83	; 0x803e83 <driver_config+0x2>
     9ee:	f0 91 84 3e 	lds	r31, 0x3E84	; 0x803e84 <driver_config+0x3>
     9f2:	80 e0       	ldi	r24, 0x00	; 0
     9f4:	09 95       	icall
     9f6:	81 e0       	ldi	r24, 0x01	; 1
     9f8:	80 93 79 3e 	sts	0x3E79, r24	; 0x803e79 <flag_triac_off.3758>
     9fc:	08 95       	ret
     9fe:	81 30       	cpi	r24, 0x01	; 1
     a00:	59 f4       	brne	.+22     	; 0xa18 <triac_driver_tick+0x1f4>
     a02:	80 91 85 3e 	lds	r24, 0x3E85	; 0x803e85 <driver_config+0x4>
     a06:	8a 30       	cpi	r24, 0x0A	; 10
     a08:	38 f4       	brcc	.+14     	; 0xa18 <triac_driver_tick+0x1f4>
     a0a:	e0 91 83 3e 	lds	r30, 0x3E83	; 0x803e83 <driver_config+0x2>
     a0e:	f0 91 84 3e 	lds	r31, 0x3E84	; 0x803e84 <driver_config+0x3>
     a12:	81 e0       	ldi	r24, 0x01	; 1
     a14:	09 95       	icall
     a16:	08 95       	ret
     a18:	e0 91 83 3e 	lds	r30, 0x3E83	; 0x803e83 <driver_config+0x2>
     a1c:	f0 91 84 3e 	lds	r31, 0x3E84	; 0x803e84 <driver_config+0x3>
     a20:	80 e0       	ldi	r24, 0x00	; 0
     a22:	09 95       	icall
     a24:	08 95       	ret

00000a26 <triac_driver_init>:
     a26:	cf 93       	push	r28
     a28:	df 93       	push	r29
     a2a:	cd b7       	in	r28, 0x3d	; 61
     a2c:	de b7       	in	r29, 0x3e	; 62
     a2e:	26 97       	sbiw	r28, 0x06	; 6
     a30:	cd bf       	out	0x3d, r28	; 61
     a32:	de bf       	out	0x3e, r29	; 62
     a34:	49 83       	std	Y+1, r20	; 0x01
     a36:	5a 83       	std	Y+2, r21	; 0x02
     a38:	6b 83       	std	Y+3, r22	; 0x03
     a3a:	7c 83       	std	Y+4, r23	; 0x04
     a3c:	8d 83       	std	Y+5, r24	; 0x05
     a3e:	9e 83       	std	Y+6, r25	; 0x06
     a40:	86 e0       	ldi	r24, 0x06	; 6
     a42:	fe 01       	movw	r30, r28
     a44:	31 96       	adiw	r30, 0x01	; 1
     a46:	a1 e8       	ldi	r26, 0x81	; 129
     a48:	be e3       	ldi	r27, 0x3E	; 62
     a4a:	01 90       	ld	r0, Z+
     a4c:	0d 92       	st	X+, r0
     a4e:	8a 95       	dec	r24
     a50:	e1 f7       	brne	.-8      	; 0xa4a <triac_driver_init+0x24>
     a52:	81 e0       	ldi	r24, 0x01	; 1
     a54:	80 93 87 3e 	sts	0x3E87, r24	; 0x803e87 <driver_started>
     a58:	26 96       	adiw	r28, 0x06	; 6
     a5a:	cd bf       	out	0x3d, r28	; 61
     a5c:	de bf       	out	0x3e, r29	; 62
     a5e:	df 91       	pop	r29
     a60:	cf 91       	pop	r28
     a62:	08 95       	ret

00000a64 <triac_set_angle>:
     a64:	87 39       	cpi	r24, 0x97	; 151
     a66:	08 f0       	brcs	.+2      	; 0xa6a <triac_set_angle+0x6>
     a68:	86 e9       	ldi	r24, 0x96	; 150
     a6a:	80 93 85 3e 	sts	0x3E85, r24	; 0x803e85 <driver_config+0x4>
     a6e:	08 95       	ret

00000a70 <triac_set_output_state>:


void triac_set_output_state(output_state state) {
	driver_config.triac_state = state;		
     a70:	80 93 86 3e 	sts	0x3E86, r24	; 0x803e86 <driver_config+0x5>
     a74:	08 95       	ret

00000a76 <triac_get_output_state>:
}

output_state triac_get_output_state(){
	return driver_config.triac_state;
}
     a76:	80 91 86 3e 	lds	r24, 0x3E86	; 0x803e86 <driver_config+0x5>
     a7a:	08 95       	ret

00000a7c <check_for_aks_block>:
     a7c:	cf 92       	push	r12
     a7e:	df 92       	push	r13
     a80:	ff 92       	push	r15
     a82:	0f 93       	push	r16
     a84:	1f 93       	push	r17
     a86:	cf 93       	push	r28
     a88:	df 93       	push	r29
     a8a:	ec 01       	movw	r28, r24
     a8c:	ae 81       	ldd	r26, Y+6	; 0x06
     a8e:	bf 81       	ldd	r27, Y+7	; 0x07
     a90:	eb 01       	movw	r28, r22
     a92:	cc 0f       	add	r28, r28
     a94:	dd 1f       	adc	r29, r29
     a96:	c6 0f       	add	r28, r22
     a98:	d7 1f       	adc	r29, r23
     a9a:	ca 0f       	add	r28, r26
     a9c:	db 1f       	adc	r29, r27
     a9e:	fa 80       	ldd	r15, Y+2	; 0x02
     aa0:	fc 01       	movw	r30, r24
     aa2:	44 81       	ldd	r20, Z+4	; 0x04
     aa4:	55 81       	ldd	r21, Z+5	; 0x05
     aa6:	e6 e0       	ldi	r30, 0x06	; 6
     aa8:	e6 9f       	mul	r30, r22
     aaa:	90 01       	movw	r18, r0
     aac:	e7 9f       	mul	r30, r23
     aae:	30 0d       	add	r19, r0
     ab0:	11 24       	eor	r1, r1
     ab2:	8a 01       	movw	r16, r20
     ab4:	02 0f       	add	r16, r18
     ab6:	13 1f       	adc	r17, r19
     ab8:	f8 01       	movw	r30, r16
     aba:	22 81       	ldd	r18, Z+2	; 0x02
     abc:	33 81       	ldd	r19, Z+3	; 0x03
     abe:	f9 01       	movw	r30, r18
     ac0:	21 81       	ldd	r18, Z+1	; 0x01
     ac2:	32 81       	ldd	r19, Z+2	; 0x02
     ac4:	f8 01       	movw	r30, r16
     ac6:	04 81       	ldd	r16, Z+4	; 0x04
     ac8:	15 81       	ldd	r17, Z+5	; 0x05
     aca:	20 1b       	sub	r18, r16
     acc:	31 0b       	sbc	r19, r17
     ace:	e8 81       	ld	r30, Y
     ad0:	2e 1b       	sub	r18, r30
     ad2:	31 09       	sbc	r19, r1
     ad4:	ec 01       	movw	r28, r24
     ad6:	ea 81       	ldd	r30, Y+2	; 0x02
     ad8:	fb 81       	ldd	r31, Y+3	; 0x03
     ada:	00 81       	ld	r16, Z
     adc:	11 81       	ldd	r17, Z+1	; 0x01
     ade:	fa 01       	movw	r30, r20
     ae0:	40 e0       	ldi	r20, 0x00	; 0
     ae2:	50 e0       	ldi	r21, 0x00	; 0
     ae4:	40 17       	cp	r20, r16
     ae6:	51 07       	cpc	r21, r17
     ae8:	39 f1       	breq	.+78     	; 0xb38 <check_for_aks_block+0xbc>
     aea:	46 17       	cp	r20, r22
     aec:	57 07       	cpc	r21, r23
     aee:	f9 f0       	breq	.+62     	; 0xb2e <check_for_aks_block+0xb2>
     af0:	12 96       	adiw	r26, 0x02	; 2
     af2:	8c 91       	ld	r24, X
     af4:	12 97       	sbiw	r26, 0x02	; 2
     af6:	f8 12       	cpse	r15, r24
     af8:	1a c0       	rjmp	.+52     	; 0xb2e <check_for_aks_block+0xb2>
     afa:	80 81       	ld	r24, Z
     afc:	85 58       	subi	r24, 0x85	; 133
     afe:	82 30       	cpi	r24, 0x02	; 2
     b00:	e8 f0       	brcs	.+58     	; 0xb3c <check_for_aks_block+0xc0>
     b02:	c4 80       	ldd	r12, Z+4	; 0x04
     b04:	d5 80       	ldd	r13, Z+5	; 0x05
     b06:	82 81       	ldd	r24, Z+2	; 0x02
     b08:	93 81       	ldd	r25, Z+3	; 0x03
     b0a:	ec 01       	movw	r28, r24
     b0c:	89 81       	ldd	r24, Y+1	; 0x01
     b0e:	9a 81       	ldd	r25, Y+2	; 0x02
     b10:	c8 16       	cp	r12, r24
     b12:	d9 06       	cpc	r13, r25
     b14:	60 f4       	brcc	.+24     	; 0xb2e <check_for_aks_block+0xb2>
     b16:	8c 19       	sub	r24, r12
     b18:	9d 09       	sbc	r25, r13
     b1a:	cc 91       	ld	r28, X
     b1c:	d0 e0       	ldi	r29, 0x00	; 0
     b1e:	c8 17       	cp	r28, r24
     b20:	d9 07       	cpc	r29, r25
     b22:	28 f4       	brcc	.+10     	; 0xb2e <check_for_aks_block+0xb2>
     b24:	8c 1b       	sub	r24, r28
     b26:	9d 0b       	sbc	r25, r29
     b28:	28 17       	cp	r18, r24
     b2a:	39 07       	cpc	r19, r25
     b2c:	38 f0       	brcs	.+14     	; 0xb3c <check_for_aks_block+0xc0>
     b2e:	4f 5f       	subi	r20, 0xFF	; 255
     b30:	5f 4f       	sbci	r21, 0xFF	; 255
     b32:	13 96       	adiw	r26, 0x03	; 3
     b34:	36 96       	adiw	r30, 0x06	; 6
     b36:	d6 cf       	rjmp	.-84     	; 0xae4 <check_for_aks_block+0x68>
     b38:	80 e0       	ldi	r24, 0x00	; 0
     b3a:	01 c0       	rjmp	.+2      	; 0xb3e <check_for_aks_block+0xc2>
     b3c:	81 e0       	ldi	r24, 0x01	; 1
     b3e:	df 91       	pop	r29
     b40:	cf 91       	pop	r28
     b42:	1f 91       	pop	r17
     b44:	0f 91       	pop	r16
     b46:	ff 90       	pop	r15
     b48:	df 90       	pop	r13
     b4a:	cf 90       	pop	r12
     b4c:	08 95       	ret

00000b4e <qtm_update_qtlib_timer>:
     b4e:	20 91 88 3e 	lds	r18, 0x3E88	; 0x803e88 <qtm_local_ms_timecount>
     b52:	30 91 89 3e 	lds	r19, 0x3E89	; 0x803e89 <qtm_local_ms_timecount+0x1>
     b56:	82 0f       	add	r24, r18
     b58:	93 1f       	adc	r25, r19
     b5a:	80 93 88 3e 	sts	0x3E88, r24	; 0x803e88 <qtm_local_ms_timecount>
     b5e:	90 93 89 3e 	sts	0x3E89, r25	; 0x803e89 <qtm_local_ms_timecount+0x1>
     b62:	08 95       	ret

00000b64 <qtm_init_sensor_key>:
     b64:	00 97       	sbiw	r24, 0x00	; 0
     b66:	d9 f0       	breq	.+54     	; 0xb9e <qtm_init_sensor_key+0x3a>
     b68:	41 15       	cp	r20, r1
     b6a:	51 05       	cpc	r21, r1
     b6c:	c1 f0       	breq	.+48     	; 0xb9e <qtm_init_sensor_key+0x3a>
     b6e:	26 e0       	ldi	r18, 0x06	; 6
     b70:	62 9f       	mul	r22, r18
     b72:	b0 01       	movw	r22, r0
     b74:	11 24       	eor	r1, r1
     b76:	dc 01       	movw	r26, r24
     b78:	14 96       	adiw	r26, 0x04	; 4
     b7a:	ed 91       	ld	r30, X+
     b7c:	fc 91       	ld	r31, X
     b7e:	15 97       	sbiw	r26, 0x05	; 5
     b80:	e6 0f       	add	r30, r22
     b82:	f7 1f       	adc	r31, r23
     b84:	21 e0       	ldi	r18, 0x01	; 1
     b86:	20 83       	st	Z, r18
     b88:	14 96       	adiw	r26, 0x04	; 4
     b8a:	8d 91       	ld	r24, X+
     b8c:	9c 91       	ld	r25, X
     b8e:	15 97       	sbiw	r26, 0x05	; 5
     b90:	fc 01       	movw	r30, r24
     b92:	e6 0f       	add	r30, r22
     b94:	f7 1f       	adc	r31, r23
     b96:	42 83       	std	Z+2, r20	; 0x02
     b98:	53 83       	std	Z+3, r21	; 0x03
     b9a:	80 e0       	ldi	r24, 0x00	; 0
     b9c:	08 95       	ret
     b9e:	8b e0       	ldi	r24, 0x0B	; 11
     ba0:	08 95       	ret

00000ba2 <qtm_key_sensors_process>:
     ba2:	2f 92       	push	r2
     ba4:	3f 92       	push	r3
     ba6:	4f 92       	push	r4
     ba8:	5f 92       	push	r5
     baa:	6f 92       	push	r6
     bac:	7f 92       	push	r7
     bae:	8f 92       	push	r8
     bb0:	9f 92       	push	r9
     bb2:	af 92       	push	r10
     bb4:	bf 92       	push	r11
     bb6:	cf 92       	push	r12
     bb8:	df 92       	push	r13
     bba:	ef 92       	push	r14
     bbc:	ff 92       	push	r15
     bbe:	0f 93       	push	r16
     bc0:	1f 93       	push	r17
     bc2:	cf 93       	push	r28
     bc4:	df 93       	push	r29
     bc6:	00 97       	sbiw	r24, 0x00	; 0
     bc8:	09 f4       	brne	.+2      	; 0xbcc <qtm_key_sensors_process+0x2a>
     bca:	7c c3       	rjmp	.+1784   	; 0x12c4 <qtm_key_sensors_process+0x722>
     bcc:	ec 01       	movw	r28, r24
     bce:	a1 2c       	mov	r10, r1
     bd0:	b1 2c       	mov	r11, r1
     bd2:	81 2c       	mov	r8, r1
     bd4:	91 2c       	mov	r9, r1
     bd6:	21 2c       	mov	r2, r1
     bd8:	d1 2c       	mov	r13, r1
     bda:	55 24       	eor	r5, r5
     bdc:	53 94       	inc	r5
     bde:	33 e0       	ldi	r19, 0x03	; 3
     be0:	c3 2e       	mov	r12, r19
     be2:	45 e8       	ldi	r20, 0x85	; 133
     be4:	64 2e       	mov	r6, r20
     be6:	56 e8       	ldi	r21, 0x86	; 134
     be8:	75 2e       	mov	r7, r21
     bea:	62 e0       	ldi	r22, 0x02	; 2
     bec:	36 2e       	mov	r3, r22
     bee:	78 e0       	ldi	r23, 0x08	; 8
     bf0:	47 2e       	mov	r4, r23
     bf2:	ea 81       	ldd	r30, Y+2	; 0x02
     bf4:	fb 81       	ldd	r31, Y+3	; 0x03
     bf6:	80 81       	ld	r24, Z
     bf8:	91 81       	ldd	r25, Z+1	; 0x01
     bfa:	88 16       	cp	r8, r24
     bfc:	99 06       	cpc	r9, r25
     bfe:	08 f0       	brcs	.+2      	; 0xc02 <qtm_key_sensors_process+0x60>
     c00:	a4 c1       	rjmp	.+840    	; 0xf4a <qtm_key_sensors_process+0x3a8>
     c02:	75 01       	movw	r14, r10
     c04:	ee 0c       	add	r14, r14
     c06:	ff 1c       	adc	r15, r15
     c08:	ec 81       	ldd	r30, Y+4	; 0x04
     c0a:	fd 81       	ldd	r31, Y+5	; 0x05
     c0c:	ee 0d       	add	r30, r14
     c0e:	ff 1d       	adc	r31, r15
     c10:	a2 81       	ldd	r26, Z+2	; 0x02
     c12:	b3 81       	ldd	r27, Z+3	; 0x03
     c14:	9c 91       	ld	r25, X
     c16:	9e 71       	andi	r25, 0x1E	; 30
     c18:	09 f0       	breq	.+2      	; 0xc1c <qtm_key_sensors_process+0x7a>
     c1a:	50 82       	st	Z, r5
     c1c:	0c 81       	ldd	r16, Y+4	; 0x04
     c1e:	1d 81       	ldd	r17, Y+5	; 0x05
     c20:	0e 0d       	add	r16, r14
     c22:	1f 1d       	adc	r17, r15
     c24:	d8 01       	movw	r26, r16
     c26:	8c 91       	ld	r24, X
     c28:	84 30       	cpi	r24, 0x04	; 4
     c2a:	09 f4       	brne	.+2      	; 0xc2e <qtm_key_sensors_process+0x8c>
     c2c:	9d c0       	rjmp	.+314    	; 0xd68 <qtm_key_sensors_process+0x1c6>
     c2e:	38 f4       	brcc	.+14     	; 0xc3e <qtm_key_sensors_process+0x9c>
     c30:	82 30       	cpi	r24, 0x02	; 2
     c32:	d1 f0       	breq	.+52     	; 0xc68 <qtm_key_sensors_process+0xc6>
     c34:	08 f0       	brcs	.+2      	; 0xc38 <qtm_key_sensors_process+0x96>
     c36:	45 c0       	rjmp	.+138    	; 0xcc2 <qtm_key_sensors_process+0x120>
     c38:	81 30       	cpi	r24, 0x01	; 1
     c3a:	59 f0       	breq	.+22     	; 0xc52 <qtm_key_sensors_process+0xb0>
     c3c:	7f c1       	rjmp	.+766    	; 0xf3c <qtm_key_sensors_process+0x39a>
     c3e:	85 38       	cpi	r24, 0x85	; 133
     c40:	09 f4       	brne	.+2      	; 0xc44 <qtm_key_sensors_process+0xa2>
     c42:	bd c0       	rjmp	.+378    	; 0xdbe <qtm_key_sensors_process+0x21c>
     c44:	86 38       	cpi	r24, 0x86	; 134
     c46:	09 f4       	brne	.+2      	; 0xc4a <qtm_key_sensors_process+0xa8>
     c48:	f3 c0       	rjmp	.+486    	; 0xe30 <qtm_key_sensors_process+0x28e>
     c4a:	87 30       	cpi	r24, 0x07	; 7
     c4c:	09 f0       	breq	.+2      	; 0xc50 <qtm_key_sensors_process+0xae>
     c4e:	76 c1       	rjmp	.+748    	; 0xf3c <qtm_key_sensors_process+0x39a>
     c50:	34 c1       	rjmp	.+616    	; 0xeba <qtm_key_sensors_process+0x318>
     c52:	91 11       	cpse	r25, r1
     c54:	65 c1       	rjmp	.+714    	; 0xf20 <qtm_key_sensors_process+0x37e>
     c56:	f8 01       	movw	r30, r16
     c58:	30 82       	st	Z, r3
     c5a:	8c 81       	ldd	r24, Y+4	; 0x04
     c5c:	9d 81       	ldd	r25, Y+5	; 0x05
     c5e:	fc 01       	movw	r30, r24
     c60:	ee 0d       	add	r30, r14
     c62:	ff 1d       	adc	r31, r15
     c64:	41 82       	std	Z+1, r4	; 0x01
     c66:	5c c1       	rjmp	.+696    	; 0xf20 <qtm_key_sensors_process+0x37e>
     c68:	d8 01       	movw	r26, r16
     c6a:	11 96       	adiw	r26, 0x01	; 1
     c6c:	2c 91       	ld	r18, X
     c6e:	11 97       	sbiw	r26, 0x01	; 1
     c70:	22 23       	and	r18, r18
     c72:	29 f1       	breq	.+74     	; 0xcbe <qtm_key_sensors_process+0x11c>
     c74:	12 96       	adiw	r26, 0x02	; 2
     c76:	ed 91       	ld	r30, X+
     c78:	fc 91       	ld	r31, X
     c7a:	13 97       	sbiw	r26, 0x03	; 3
     c7c:	25 30       	cpi	r18, 0x05	; 5
     c7e:	18 f0       	brcs	.+6      	; 0xc86 <qtm_key_sensors_process+0xe4>
     c80:	81 81       	ldd	r24, Z+1	; 0x01
     c82:	92 81       	ldd	r25, Z+2	; 0x02
     c84:	0e c0       	rjmp	.+28     	; 0xca2 <qtm_key_sensors_process+0x100>
     c86:	d8 01       	movw	r26, r16
     c88:	14 96       	adiw	r26, 0x04	; 4
     c8a:	8d 91       	ld	r24, X+
     c8c:	9c 91       	ld	r25, X
     c8e:	15 97       	sbiw	r26, 0x05	; 5
     c90:	41 81       	ldd	r20, Z+1	; 0x01
     c92:	52 81       	ldd	r21, Z+2	; 0x02
     c94:	84 17       	cp	r24, r20
     c96:	95 07       	cpc	r25, r21
     c98:	69 f0       	breq	.+26     	; 0xcb4 <qtm_key_sensors_process+0x112>
     c9a:	48 17       	cp	r20, r24
     c9c:	59 07       	cpc	r21, r25
     c9e:	30 f4       	brcc	.+12     	; 0xcac <qtm_key_sensors_process+0x10a>
     ca0:	01 97       	sbiw	r24, 0x01	; 1
     ca2:	14 96       	adiw	r26, 0x04	; 4
     ca4:	8d 93       	st	X+, r24
     ca6:	9c 93       	st	X, r25
     ca8:	15 97       	sbiw	r26, 0x05	; 5
     caa:	04 c0       	rjmp	.+8      	; 0xcb4 <qtm_key_sensors_process+0x112>
     cac:	01 96       	adiw	r24, 0x01	; 1
     cae:	f8 01       	movw	r30, r16
     cb0:	84 83       	std	Z+4, r24	; 0x04
     cb2:	95 83       	std	Z+5, r25	; 0x05
     cb4:	21 50       	subi	r18, 0x01	; 1
     cb6:	d8 01       	movw	r26, r16
     cb8:	11 96       	adiw	r26, 0x01	; 1
     cba:	2c 93       	st	X, r18
     cbc:	31 c1       	rjmp	.+610    	; 0xf20 <qtm_key_sensors_process+0x37e>
     cbe:	f8 01       	movw	r30, r16
     cc0:	2b c1       	rjmp	.+598    	; 0xf18 <qtm_key_sensors_process+0x376>
     cc2:	d8 01       	movw	r26, r16
     cc4:	14 96       	adiw	r26, 0x04	; 4
     cc6:	2d 91       	ld	r18, X+
     cc8:	3c 91       	ld	r19, X
     cca:	15 97       	sbiw	r26, 0x05	; 5
     ccc:	12 96       	adiw	r26, 0x02	; 2
     cce:	ed 91       	ld	r30, X+
     cd0:	fc 91       	ld	r31, X
     cd2:	13 97       	sbiw	r26, 0x03	; 3
     cd4:	41 81       	ldd	r20, Z+1	; 0x01
     cd6:	52 81       	ldd	r21, Z+2	; 0x02
     cd8:	24 17       	cp	r18, r20
     cda:	35 07       	cpc	r19, r21
     cdc:	09 f4       	brne	.+2      	; 0xce0 <qtm_key_sensors_process+0x13e>
     cde:	2e c1       	rjmp	.+604    	; 0xf3c <qtm_key_sensors_process+0x39a>
     ce0:	8e 81       	ldd	r24, Y+6	; 0x06
     ce2:	9f 81       	ldd	r25, Y+7	; 0x07
     ce4:	42 17       	cp	r20, r18
     ce6:	53 07       	cpc	r21, r19
     ce8:	f8 f4       	brcc	.+62     	; 0xd28 <qtm_key_sensors_process+0x186>
     cea:	ea 81       	ldd	r30, Y+2	; 0x02
     cec:	fb 81       	ldd	r31, Y+3	; 0x03
     cee:	24 1b       	sub	r18, r20
     cf0:	35 0b       	sbc	r19, r21
     cf2:	dc 01       	movw	r26, r24
     cf4:	aa 0d       	add	r26, r10
     cf6:	bb 1d       	adc	r27, r11
     cf8:	8c 91       	ld	r24, X
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	05 80       	ldd	r0, Z+5	; 0x05
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <qtm_key_sensors_process+0x162>
     d00:	95 95       	asr	r25
     d02:	87 95       	ror	r24
     d04:	0a 94       	dec	r0
     d06:	e2 f7       	brpl	.-8      	; 0xd00 <qtm_key_sensors_process+0x15e>
     d08:	99 27       	eor	r25, r25
     d0a:	28 17       	cp	r18, r24
     d0c:	39 07       	cpc	r19, r25
     d0e:	08 f4       	brcc	.+2      	; 0xd12 <qtm_key_sensors_process+0x170>
     d10:	15 c1       	rjmp	.+554    	; 0xf3c <qtm_key_sensors_process+0x39a>
     d12:	84 81       	ldd	r24, Z+4	; 0x04
     d14:	88 23       	and	r24, r24
     d16:	09 f4       	brne	.+2      	; 0xd1a <qtm_key_sensors_process+0x178>
     d18:	11 c1       	rjmp	.+546    	; 0xf3c <qtm_key_sensors_process+0x39a>
     d1a:	87 e0       	ldi	r24, 0x07	; 7
     d1c:	f8 01       	movw	r30, r16
     d1e:	80 83       	st	Z, r24
     d20:	ea 81       	ldd	r30, Y+2	; 0x02
     d22:	fb 81       	ldd	r31, Y+3	; 0x03
     d24:	24 81       	ldd	r18, Z+4	; 0x04
     d26:	19 c0       	rjmp	.+50     	; 0xd5a <qtm_key_sensors_process+0x1b8>
     d28:	fc 01       	movw	r30, r24
     d2a:	ea 0d       	add	r30, r10
     d2c:	fb 1d       	adc	r31, r11
     d2e:	42 1b       	sub	r20, r18
     d30:	53 0b       	sbc	r21, r19
     d32:	80 81       	ld	r24, Z
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	48 17       	cp	r20, r24
     d38:	59 07       	cpc	r21, r25
     d3a:	08 f4       	brcc	.+2      	; 0xd3e <qtm_key_sensors_process+0x19c>
     d3c:	ff c0       	rjmp	.+510    	; 0xf3c <qtm_key_sensors_process+0x39a>
     d3e:	82 81       	ldd	r24, Z+2	; 0x02
     d40:	88 23       	and	r24, r24
     d42:	29 f0       	breq	.+10     	; 0xd4e <qtm_key_sensors_process+0x1ac>
     d44:	b4 01       	movw	r22, r8
     d46:	ce 01       	movw	r24, r28
     d48:	99 de       	rcall	.-718    	; 0xa7c <check_for_aks_block>
     d4a:	81 11       	cpse	r24, r1
     d4c:	f7 c0       	rjmp	.+494    	; 0xf3c <qtm_key_sensors_process+0x39a>
     d4e:	e4 e0       	ldi	r30, 0x04	; 4
     d50:	d8 01       	movw	r26, r16
     d52:	ec 93       	st	X, r30
     d54:	ea 81       	ldd	r30, Y+2	; 0x02
     d56:	fb 81       	ldd	r31, Y+3	; 0x03
     d58:	22 81       	ldd	r18, Z+2	; 0x02
     d5a:	8c 81       	ldd	r24, Y+4	; 0x04
     d5c:	9d 81       	ldd	r25, Y+5	; 0x05
     d5e:	fc 01       	movw	r30, r24
     d60:	ee 0d       	add	r30, r14
     d62:	ff 1d       	adc	r31, r15
     d64:	21 83       	std	Z+1, r18	; 0x01
     d66:	dc c0       	rjmp	.+440    	; 0xf20 <qtm_key_sensors_process+0x37e>
     d68:	d8 01       	movw	r26, r16
     d6a:	14 96       	adiw	r26, 0x04	; 4
     d6c:	2d 91       	ld	r18, X+
     d6e:	3c 91       	ld	r19, X
     d70:	15 97       	sbiw	r26, 0x05	; 5
     d72:	12 96       	adiw	r26, 0x02	; 2
     d74:	ed 91       	ld	r30, X+
     d76:	fc 91       	ld	r31, X
     d78:	13 97       	sbiw	r26, 0x03	; 3
     d7a:	81 81       	ldd	r24, Z+1	; 0x01
     d7c:	92 81       	ldd	r25, Z+2	; 0x02
     d7e:	82 17       	cp	r24, r18
     d80:	93 07       	cpc	r25, r19
     d82:	08 f4       	brcc	.+2      	; 0xd86 <qtm_key_sensors_process+0x1e4>
     d84:	ba c0       	rjmp	.+372    	; 0xefa <qtm_key_sensors_process+0x358>
     d86:	ee 81       	ldd	r30, Y+6	; 0x06
     d88:	ff 81       	ldd	r31, Y+7	; 0x07
     d8a:	ea 0d       	add	r30, r10
     d8c:	fb 1d       	adc	r31, r11
     d8e:	82 1b       	sub	r24, r18
     d90:	93 0b       	sbc	r25, r19
     d92:	20 81       	ld	r18, Z
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	28 17       	cp	r18, r24
     d98:	39 07       	cpc	r19, r25
     d9a:	08 f0       	brcs	.+2      	; 0xd9e <qtm_key_sensors_process+0x1fc>
     d9c:	c4 c0       	rjmp	.+392    	; 0xf26 <qtm_key_sensors_process+0x384>
     d9e:	82 81       	ldd	r24, Z+2	; 0x02
     da0:	88 23       	and	r24, r24
     da2:	29 f0       	breq	.+10     	; 0xdae <qtm_key_sensors_process+0x20c>
     da4:	b4 01       	movw	r22, r8
     da6:	ce 01       	movw	r24, r28
     da8:	69 de       	rcall	.-814    	; 0xa7c <check_for_aks_block>
     daa:	81 11       	cpse	r24, r1
     dac:	c7 c0       	rjmp	.+398    	; 0xf3c <qtm_key_sensors_process+0x39a>
     dae:	f8 01       	movw	r30, r16
     db0:	81 81       	ldd	r24, Z+1	; 0x01
     db2:	88 23       	and	r24, r24
     db4:	09 f4       	brne	.+2      	; 0xdb8 <qtm_key_sensors_process+0x216>
     db6:	6a c0       	rjmp	.+212    	; 0xe8c <qtm_key_sensors_process+0x2ea>
     db8:	81 50       	subi	r24, 0x01	; 1
     dba:	81 83       	std	Z+1, r24	; 0x01
     dbc:	b1 c0       	rjmp	.+354    	; 0xf20 <qtm_key_sensors_process+0x37e>
     dbe:	e8 81       	ld	r30, Y
     dc0:	f9 81       	ldd	r31, Y+1	; 0x01
     dc2:	aa 81       	ldd	r26, Y+2	; 0x02
     dc4:	bb 81       	ldd	r27, Y+3	; 0x03
     dc6:	18 96       	adiw	r26, 0x08	; 8
     dc8:	8c 91       	ld	r24, X
     dca:	83 83       	std	Z+3, r24	; 0x03
     dcc:	ec 81       	ldd	r30, Y+4	; 0x04
     dce:	fd 81       	ldd	r31, Y+5	; 0x05
     dd0:	ee 0d       	add	r30, r14
     dd2:	ff 1d       	adc	r31, r15
     dd4:	44 81       	ldd	r20, Z+4	; 0x04
     dd6:	55 81       	ldd	r21, Z+5	; 0x05
     dd8:	a2 81       	ldd	r26, Z+2	; 0x02
     dda:	b3 81       	ldd	r27, Z+3	; 0x03
     ddc:	11 96       	adiw	r26, 0x01	; 1
     dde:	8d 91       	ld	r24, X+
     de0:	9c 91       	ld	r25, X
     de2:	12 97       	sbiw	r26, 0x02	; 2
     de4:	84 17       	cp	r24, r20
     de6:	95 07       	cpc	r25, r21
     de8:	c0 f0       	brcs	.+48     	; 0xe1a <qtm_key_sensors_process+0x278>
     dea:	ae 81       	ldd	r26, Y+6	; 0x06
     dec:	bf 81       	ldd	r27, Y+7	; 0x07
     dee:	aa 0d       	add	r26, r10
     df0:	bb 1d       	adc	r27, r11
     df2:	6c 91       	ld	r22, X
     df4:	26 2f       	mov	r18, r22
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	11 96       	adiw	r26, 0x01	; 1
     dfa:	7c 91       	ld	r23, X
     dfc:	7f 5f       	subi	r23, 0xFF	; 255
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <qtm_key_sensors_process+0x262>
     e00:	35 95       	asr	r19
     e02:	27 95       	ror	r18
     e04:	7a 95       	dec	r23
     e06:	e2 f7       	brpl	.-8      	; 0xe00 <qtm_key_sensors_process+0x25e>
     e08:	84 1b       	sub	r24, r20
     e0a:	95 0b       	sbc	r25, r21
     e0c:	62 1b       	sub	r22, r18
     e0e:	26 2f       	mov	r18, r22
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	28 17       	cp	r18, r24
     e14:	39 07       	cpc	r19, r25
     e16:	08 f4       	brcc	.+2      	; 0xe1a <qtm_key_sensors_process+0x278>
     e18:	8f c0       	rjmp	.+286    	; 0xf38 <qtm_key_sensors_process+0x396>
     e1a:	70 82       	st	Z, r7
     e1c:	ea 81       	ldd	r30, Y+2	; 0x02
     e1e:	fb 81       	ldd	r31, Y+3	; 0x03
     e20:	22 81       	ldd	r18, Z+2	; 0x02
     e22:	8c 81       	ldd	r24, Y+4	; 0x04
     e24:	9d 81       	ldd	r25, Y+5	; 0x05
     e26:	fc 01       	movw	r30, r24
     e28:	ee 0d       	add	r30, r14
     e2a:	ff 1d       	adc	r31, r15
     e2c:	21 83       	std	Z+1, r18	; 0x01
     e2e:	42 c0       	rjmp	.+132    	; 0xeb4 <qtm_key_sensors_process+0x312>
     e30:	d8 01       	movw	r26, r16
     e32:	14 96       	adiw	r26, 0x04	; 4
     e34:	6d 91       	ld	r22, X+
     e36:	7c 91       	ld	r23, X
     e38:	15 97       	sbiw	r26, 0x05	; 5
     e3a:	12 96       	adiw	r26, 0x02	; 2
     e3c:	ed 91       	ld	r30, X+
     e3e:	fc 91       	ld	r31, X
     e40:	13 97       	sbiw	r26, 0x03	; 3
     e42:	21 81       	ldd	r18, Z+1	; 0x01
     e44:	32 81       	ldd	r19, Z+2	; 0x02
     e46:	26 17       	cp	r18, r22
     e48:	37 07       	cpc	r19, r23
     e4a:	58 f4       	brcc	.+22     	; 0xe62 <qtm_key_sensors_process+0x2c0>
     e4c:	11 96       	adiw	r26, 0x01	; 1
     e4e:	8c 91       	ld	r24, X
     e50:	11 97       	sbiw	r26, 0x01	; 1
     e52:	81 11       	cpse	r24, r1
     e54:	02 c0       	rjmp	.+4      	; 0xe5a <qtm_key_sensors_process+0x2b8>
     e56:	cc 92       	st	X, r12
     e58:	6f c0       	rjmp	.+222    	; 0xf38 <qtm_key_sensors_process+0x396>
     e5a:	81 50       	subi	r24, 0x01	; 1
     e5c:	f8 01       	movw	r30, r16
     e5e:	81 83       	std	Z+1, r24	; 0x01
     e60:	6b c0       	rjmp	.+214    	; 0xf38 <qtm_key_sensors_process+0x396>
     e62:	ee 81       	ldd	r30, Y+6	; 0x06
     e64:	ff 81       	ldd	r31, Y+7	; 0x07
     e66:	ea 0d       	add	r30, r10
     e68:	fb 1d       	adc	r31, r11
     e6a:	80 81       	ld	r24, Z
     e6c:	48 2f       	mov	r20, r24
     e6e:	50 e0       	ldi	r21, 0x00	; 0
     e70:	91 81       	ldd	r25, Z+1	; 0x01
     e72:	9f 5f       	subi	r25, 0xFF	; 255
     e74:	02 c0       	rjmp	.+4      	; 0xe7a <qtm_key_sensors_process+0x2d8>
     e76:	55 95       	asr	r21
     e78:	47 95       	ror	r20
     e7a:	9a 95       	dec	r25
     e7c:	e2 f7       	brpl	.-8      	; 0xe76 <qtm_key_sensors_process+0x2d4>
     e7e:	26 1b       	sub	r18, r22
     e80:	37 0b       	sbc	r19, r23
     e82:	84 1b       	sub	r24, r20
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	82 17       	cp	r24, r18
     e88:	93 07       	cpc	r25, r19
     e8a:	60 f4       	brcc	.+24     	; 0xea4 <qtm_key_sensors_process+0x302>
     e8c:	d8 01       	movw	r26, r16
     e8e:	6c 92       	st	X, r6
     e90:	ea 81       	ldd	r30, Y+2	; 0x02
     e92:	fb 81       	ldd	r31, Y+3	; 0x03
     e94:	23 81       	ldd	r18, Z+3	; 0x03
     e96:	8c 81       	ldd	r24, Y+4	; 0x04
     e98:	9d 81       	ldd	r25, Y+5	; 0x05
     e9a:	fc 01       	movw	r30, r24
     e9c:	ee 0d       	add	r30, r14
     e9e:	ff 1d       	adc	r31, r15
     ea0:	21 83       	std	Z+1, r18	; 0x01
     ea2:	4a c0       	rjmp	.+148    	; 0xf38 <qtm_key_sensors_process+0x396>
     ea4:	f8 01       	movw	r30, r16
     ea6:	81 81       	ldd	r24, Z+1	; 0x01
     ea8:	81 11       	cpse	r24, r1
     eaa:	02 c0       	rjmp	.+4      	; 0xeb0 <qtm_key_sensors_process+0x30e>
     eac:	c0 82       	st	Z, r12
     eae:	44 c0       	rjmp	.+136    	; 0xf38 <qtm_key_sensors_process+0x396>
     eb0:	81 50       	subi	r24, 0x01	; 1
     eb2:	81 83       	std	Z+1, r24	; 0x01
     eb4:	22 24       	eor	r2, r2
     eb6:	23 94       	inc	r2
     eb8:	33 c0       	rjmp	.+102    	; 0xf20 <qtm_key_sensors_process+0x37e>
     eba:	f8 01       	movw	r30, r16
     ebc:	24 81       	ldd	r18, Z+4	; 0x04
     ebe:	35 81       	ldd	r19, Z+5	; 0x05
     ec0:	02 80       	ldd	r0, Z+2	; 0x02
     ec2:	f3 81       	ldd	r31, Z+3	; 0x03
     ec4:	e0 2d       	mov	r30, r0
     ec6:	81 81       	ldd	r24, Z+1	; 0x01
     ec8:	92 81       	ldd	r25, Z+2	; 0x02
     eca:	82 17       	cp	r24, r18
     ecc:	93 07       	cpc	r25, r19
     ece:	58 f5       	brcc	.+86     	; 0xf26 <qtm_key_sensors_process+0x384>
     ed0:	28 1b       	sub	r18, r24
     ed2:	39 0b       	sbc	r19, r25
     ed4:	ee 81       	ldd	r30, Y+6	; 0x06
     ed6:	ff 81       	ldd	r31, Y+7	; 0x07
     ed8:	ea 0d       	add	r30, r10
     eda:	fb 1d       	adc	r31, r11
     edc:	80 81       	ld	r24, Z
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	ea 81       	ldd	r30, Y+2	; 0x02
     ee2:	fb 81       	ldd	r31, Y+3	; 0x03
     ee4:	05 80       	ldd	r0, Z+5	; 0x05
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <qtm_key_sensors_process+0x34a>
     ee8:	95 95       	asr	r25
     eea:	87 95       	ror	r24
     eec:	0a 94       	dec	r0
     eee:	e2 f7       	brpl	.-8      	; 0xee8 <qtm_key_sensors_process+0x346>
     ef0:	99 27       	eor	r25, r25
     ef2:	28 17       	cp	r18, r24
     ef4:	39 07       	cpc	r19, r25
     ef6:	18 f4       	brcc	.+6      	; 0xefe <qtm_key_sensors_process+0x35c>
     ef8:	d8 01       	movw	r26, r16
     efa:	cc 92       	st	X, r12
     efc:	16 c0       	rjmp	.+44     	; 0xf2a <qtm_key_sensors_process+0x388>
     efe:	f8 01       	movw	r30, r16
     f00:	81 81       	ldd	r24, Z+1	; 0x01
     f02:	81 11       	cpse	r24, r1
     f04:	0b c0       	rjmp	.+22     	; 0xf1c <qtm_key_sensors_process+0x37a>
     f06:	50 82       	st	Z, r5
     f08:	8c 81       	ldd	r24, Y+4	; 0x04
     f0a:	9d 81       	ldd	r25, Y+5	; 0x05
     f0c:	fc 01       	movw	r30, r24
     f0e:	ee 0d       	add	r30, r14
     f10:	ff 1d       	adc	r31, r15
     f12:	02 80       	ldd	r0, Z+2	; 0x02
     f14:	f3 81       	ldd	r31, Z+3	; 0x03
     f16:	e0 2d       	mov	r30, r0
     f18:	c0 82       	st	Z, r12
     f1a:	10 c0       	rjmp	.+32     	; 0xf3c <qtm_key_sensors_process+0x39a>
     f1c:	81 50       	subi	r24, 0x01	; 1
     f1e:	81 83       	std	Z+1, r24	; 0x01
     f20:	dd 24       	eor	r13, r13
     f22:	d3 94       	inc	r13
     f24:	0b c0       	rjmp	.+22     	; 0xf3c <qtm_key_sensors_process+0x39a>
     f26:	f8 01       	movw	r30, r16
     f28:	c0 82       	st	Z, r12
     f2a:	8c 81       	ldd	r24, Y+4	; 0x04
     f2c:	9d 81       	ldd	r25, Y+5	; 0x05
     f2e:	fc 01       	movw	r30, r24
     f30:	ee 0d       	add	r30, r14
     f32:	ff 1d       	adc	r31, r15
     f34:	11 82       	std	Z+1, r1	; 0x01
     f36:	02 c0       	rjmp	.+4      	; 0xf3c <qtm_key_sensors_process+0x39a>
     f38:	22 24       	eor	r2, r2
     f3a:	23 94       	inc	r2
     f3c:	ff ef       	ldi	r31, 0xFF	; 255
     f3e:	8f 1a       	sub	r8, r31
     f40:	9f 0a       	sbc	r9, r31
     f42:	83 e0       	ldi	r24, 0x03	; 3
     f44:	a8 0e       	add	r10, r24
     f46:	b1 1c       	adc	r11, r1
     f48:	54 ce       	rjmp	.-856    	; 0xbf2 <qtm_key_sensors_process+0x50>
     f4a:	e8 81       	ld	r30, Y
     f4c:	f9 81       	ldd	r31, Y+1	; 0x01
     f4e:	80 81       	ld	r24, Z
     f50:	87 ff       	sbrs	r24, 7
     f52:	23 c0       	rjmp	.+70     	; 0xf9a <qtm_key_sensors_process+0x3f8>
     f54:	40 e0       	ldi	r20, 0x00	; 0
     f56:	50 e0       	ldi	r21, 0x00	; 0
     f58:	20 e0       	ldi	r18, 0x00	; 0
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	ea 81       	ldd	r30, Y+2	; 0x02
     f5e:	fb 81       	ldd	r31, Y+3	; 0x03
     f60:	80 81       	ld	r24, Z
     f62:	91 81       	ldd	r25, Z+1	; 0x01
     f64:	28 17       	cp	r18, r24
     f66:	39 07       	cpc	r19, r25
     f68:	98 f4       	brcc	.+38     	; 0xf90 <qtm_key_sensors_process+0x3ee>
     f6a:	ec 81       	ldd	r30, Y+4	; 0x04
     f6c:	fd 81       	ldd	r31, Y+5	; 0x05
     f6e:	e4 0f       	add	r30, r20
     f70:	f5 1f       	adc	r31, r21
     f72:	a2 81       	ldd	r26, Z+2	; 0x02
     f74:	b3 81       	ldd	r27, Z+3	; 0x03
     f76:	8c 91       	ld	r24, X
     f78:	80 fd       	sbrc	r24, 0
     f7a:	05 c0       	rjmp	.+10     	; 0xf86 <qtm_key_sensors_process+0x3e4>
     f7c:	90 81       	ld	r25, Z
     f7e:	97 7f       	andi	r25, 0xF7	; 247
     f80:	11 f0       	breq	.+4      	; 0xf86 <qtm_key_sensors_process+0x3e4>
     f82:	81 60       	ori	r24, 0x01	; 1
     f84:	8c 93       	st	X, r24
     f86:	2f 5f       	subi	r18, 0xFF	; 255
     f88:	3f 4f       	sbci	r19, 0xFF	; 255
     f8a:	4a 5f       	subi	r20, 0xFA	; 250
     f8c:	5f 4f       	sbci	r21, 0xFF	; 255
     f8e:	e6 cf       	rjmp	.-52     	; 0xf5c <qtm_key_sensors_process+0x3ba>
     f90:	e8 81       	ld	r30, Y
     f92:	f9 81       	ldd	r31, Y+1	; 0x01
     f94:	80 81       	ld	r24, Z
     f96:	8f 77       	andi	r24, 0x7F	; 127
     f98:	80 83       	st	Z, r24
     f9a:	d1 10       	cpse	r13, r1
     f9c:	07 c0       	rjmp	.+14     	; 0xfac <qtm_key_sensors_process+0x40a>
     f9e:	e8 81       	ld	r30, Y
     fa0:	f9 81       	ldd	r31, Y+1	; 0x01
     fa2:	21 10       	cpse	r2, r1
     fa4:	6f c0       	rjmp	.+222    	; 0x1084 <qtm_key_sensors_process+0x4e2>
     fa6:	80 81       	ld	r24, Z
     fa8:	8e 7f       	andi	r24, 0xFE	; 254
     faa:	6e c0       	rjmp	.+220    	; 0x1088 <qtm_key_sensors_process+0x4e6>
     fac:	ea 81       	ldd	r30, Y+2	; 0x02
     fae:	fb 81       	ldd	r31, Y+3	; 0x03
     fb0:	81 85       	ldd	r24, Z+9	; 0x09
     fb2:	88 23       	and	r24, r24
     fb4:	a1 f3       	breq	.-24     	; 0xf9e <qtm_key_sensors_process+0x3fc>
     fb6:	e8 81       	ld	r30, Y
     fb8:	f9 81       	ldd	r31, Y+1	; 0x01
     fba:	80 81       	ld	r24, Z
     fbc:	80 68       	ori	r24, 0x80	; 128
     fbe:	80 83       	st	Z, r24
     fc0:	ea 81       	ldd	r30, Y+2	; 0x02
     fc2:	fb 81       	ldd	r31, Y+3	; 0x03
     fc4:	81 85       	ldd	r24, Z+9	; 0x09
     fc6:	81 30       	cpi	r24, 0x01	; 1
     fc8:	51 f7       	brne	.-44     	; 0xf9e <qtm_key_sensors_process+0x3fc>
     fca:	40 e0       	ldi	r20, 0x00	; 0
     fcc:	50 e0       	ldi	r21, 0x00	; 0
     fce:	20 e0       	ldi	r18, 0x00	; 0
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	96 e0       	ldi	r25, 0x06	; 6
     fd4:	d9 2e       	mov	r13, r25
     fd6:	ea 81       	ldd	r30, Y+2	; 0x02
     fd8:	fb 81       	ldd	r31, Y+3	; 0x03
     fda:	60 81       	ld	r22, Z
     fdc:	71 81       	ldd	r23, Z+1	; 0x01
     fde:	26 17       	cp	r18, r22
     fe0:	37 07       	cpc	r19, r23
     fe2:	e8 f6       	brcc	.-70     	; 0xf9e <qtm_key_sensors_process+0x3fc>
     fe4:	0c 81       	ldd	r16, Y+4	; 0x04
     fe6:	1d 81       	ldd	r17, Y+5	; 0x05
     fe8:	fa 01       	movw	r30, r20
     fea:	ee 0f       	add	r30, r30
     fec:	ff 1f       	adc	r31, r31
     fee:	e0 0f       	add	r30, r16
     ff0:	f1 1f       	adc	r31, r17
     ff2:	80 81       	ld	r24, Z
     ff4:	98 2f       	mov	r25, r24
     ff6:	97 7f       	andi	r25, 0xF7	; 247
     ff8:	a1 f1       	breq	.+104    	; 0x1062 <qtm_key_sensors_process+0x4c0>
     ffa:	85 38       	cpi	r24, 0x85	; 133
     ffc:	11 f0       	breq	.+4      	; 0x1002 <qtm_key_sensors_process+0x460>
     ffe:	83 30       	cpi	r24, 0x03	; 3
    1000:	b1 f5       	brne	.+108    	; 0x106e <qtm_key_sensors_process+0x4cc>
    1002:	ee 80       	ldd	r14, Y+6	; 0x06
    1004:	ff 80       	ldd	r15, Y+7	; 0x07
    1006:	d7 01       	movw	r26, r14
    1008:	a4 0f       	add	r26, r20
    100a:	b5 1f       	adc	r27, r21
    100c:	12 96       	adiw	r26, 0x02	; 2
    100e:	bc 90       	ld	r11, X
    1010:	bb 20       	and	r11, r11
    1012:	39 f1       	breq	.+78     	; 0x1062 <qtm_key_sensors_process+0x4c0>
    1014:	80 e0       	ldi	r24, 0x00	; 0
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	c1 2c       	mov	r12, r1
    101a:	86 17       	cp	r24, r22
    101c:	97 07       	cpc	r25, r23
    101e:	f8 f4       	brcc	.+62     	; 0x105e <qtm_key_sensors_process+0x4bc>
    1020:	28 17       	cp	r18, r24
    1022:	39 07       	cpc	r19, r25
    1024:	d1 f0       	breq	.+52     	; 0x105a <qtm_key_sensors_process+0x4b8>
    1026:	d8 9e       	mul	r13, r24
    1028:	d0 01       	movw	r26, r0
    102a:	d9 9e       	mul	r13, r25
    102c:	b0 0d       	add	r27, r0
    102e:	11 24       	eor	r1, r1
    1030:	a0 0f       	add	r26, r16
    1032:	b1 1f       	adc	r27, r17
    1034:	ac 91       	ld	r26, X
    1036:	a4 30       	cpi	r26, 0x04	; 4
    1038:	11 f0       	breq	.+4      	; 0x103e <qtm_key_sensors_process+0x49c>
    103a:	a6 38       	cpi	r26, 0x86	; 134
    103c:	71 f4       	brne	.+28     	; 0x105a <qtm_key_sensors_process+0x4b8>
    103e:	dc 01       	movw	r26, r24
    1040:	aa 0f       	add	r26, r26
    1042:	bb 1f       	adc	r27, r27
    1044:	a8 0f       	add	r26, r24
    1046:	b9 1f       	adc	r27, r25
    1048:	ae 0d       	add	r26, r14
    104a:	bf 1d       	adc	r27, r15
    104c:	12 96       	adiw	r26, 0x02	; 2
    104e:	ac 91       	ld	r26, X
    1050:	ba 12       	cpse	r11, r26
    1052:	03 c0       	rjmp	.+6      	; 0x105a <qtm_key_sensors_process+0x4b8>
    1054:	cb 01       	movw	r24, r22
    1056:	cc 24       	eor	r12, r12
    1058:	c3 94       	inc	r12
    105a:	01 96       	adiw	r24, 0x01	; 1
    105c:	de cf       	rjmp	.-68     	; 0x101a <qtm_key_sensors_process+0x478>
    105e:	c1 10       	cpse	r12, r1
    1060:	06 c0       	rjmp	.+12     	; 0x106e <qtm_key_sensors_process+0x4cc>
    1062:	02 80       	ldd	r0, Z+2	; 0x02
    1064:	f3 81       	ldd	r31, Z+3	; 0x03
    1066:	e0 2d       	mov	r30, r0
    1068:	80 81       	ld	r24, Z
    106a:	8e 7f       	andi	r24, 0xFE	; 254
    106c:	05 c0       	rjmp	.+10     	; 0x1078 <qtm_key_sensors_process+0x4d6>
    106e:	02 80       	ldd	r0, Z+2	; 0x02
    1070:	f3 81       	ldd	r31, Z+3	; 0x03
    1072:	e0 2d       	mov	r30, r0
    1074:	80 81       	ld	r24, Z
    1076:	81 60       	ori	r24, 0x01	; 1
    1078:	80 83       	st	Z, r24
    107a:	2f 5f       	subi	r18, 0xFF	; 255
    107c:	3f 4f       	sbci	r19, 0xFF	; 255
    107e:	4d 5f       	subi	r20, 0xFD	; 253
    1080:	5f 4f       	sbci	r21, 0xFF	; 255
    1082:	a9 cf       	rjmp	.-174    	; 0xfd6 <qtm_key_sensors_process+0x434>
    1084:	80 81       	ld	r24, Z
    1086:	81 60       	ori	r24, 0x01	; 1
    1088:	80 83       	st	Z, r24
    108a:	80 91 88 3e 	lds	r24, 0x3E88	; 0x803e88 <qtm_local_ms_timecount>
    108e:	90 91 89 3e 	lds	r25, 0x3E89	; 0x803e89 <qtm_local_ms_timecount+0x1>
    1092:	e8 81       	ld	r30, Y
    1094:	f9 81       	ldd	r31, Y+1	; 0x01
    1096:	21 81       	ldd	r18, Z+1	; 0x01
    1098:	32 81       	ldd	r19, Z+2	; 0x02
    109a:	a9 01       	movw	r20, r18
    109c:	48 53       	subi	r20, 0x38	; 56
    109e:	5f 4f       	sbci	r21, 0xFF	; 255
    10a0:	48 17       	cp	r20, r24
    10a2:	59 07       	cpc	r21, r25
    10a4:	38 f4       	brcc	.+14     	; 0x10b4 <qtm_key_sensors_process+0x512>
    10a6:	82 1b       	sub	r24, r18
    10a8:	93 0b       	sbc	r25, r19
    10aa:	aa 24       	eor	r10, r10
    10ac:	a3 94       	inc	r10
    10ae:	a3 e0       	ldi	r26, 0x03	; 3
    10b0:	ba 2e       	mov	r11, r26
    10b2:	44 c0       	rjmp	.+136    	; 0x113c <qtm_key_sensors_process+0x59a>
    10b4:	82 17       	cp	r24, r18
    10b6:	93 07       	cpc	r25, r19
    10b8:	10 f0       	brcs	.+4      	; 0x10be <qtm_key_sensors_process+0x51c>
    10ba:	80 e0       	ldi	r24, 0x00	; 0
    10bc:	04 c1       	rjmp	.+520    	; 0x12c6 <qtm_key_sensors_process+0x724>
    10be:	82 1b       	sub	r24, r18
    10c0:	93 0b       	sbc	r25, r19
    10c2:	01 97       	sbiw	r24, 0x01	; 1
    10c4:	89 3c       	cpi	r24, 0xC9	; 201
    10c6:	91 05       	cpc	r25, r1
    10c8:	c0 f3       	brcs	.-16     	; 0x10ba <qtm_key_sensors_process+0x518>
    10ca:	ef cf       	rjmp	.-34     	; 0x10aa <qtm_key_sensors_process+0x508>
    10cc:	88 5c       	subi	r24, 0xC8	; 200
    10ce:	91 09       	sbc	r25, r1
    10d0:	e8 81       	ld	r30, Y
    10d2:	f9 81       	ldd	r31, Y+1	; 0x01
    10d4:	21 81       	ldd	r18, Z+1	; 0x01
    10d6:	32 81       	ldd	r19, Z+2	; 0x02
    10d8:	28 53       	subi	r18, 0x38	; 56
    10da:	3f 4f       	sbci	r19, 0xFF	; 255
    10dc:	21 83       	std	Z+1, r18	; 0x01
    10de:	32 83       	std	Z+2, r19	; 0x02
    10e0:	23 81       	ldd	r18, Z+3	; 0x03
    10e2:	21 11       	cpse	r18, r1
    10e4:	96 c0       	rjmp	.+300    	; 0x1212 <qtm_key_sensors_process+0x670>
    10e6:	24 81       	ldd	r18, Z+4	; 0x04
    10e8:	22 23       	and	r18, r18
    10ea:	11 f0       	breq	.+4      	; 0x10f0 <qtm_key_sensors_process+0x54e>
    10ec:	21 50       	subi	r18, 0x01	; 1
    10ee:	24 83       	std	Z+4, r18	; 0x04
    10f0:	e8 81       	ld	r30, Y
    10f2:	f9 81       	ldd	r31, Y+1	; 0x01
    10f4:	25 81       	ldd	r18, Z+5	; 0x05
    10f6:	22 23       	and	r18, r18
    10f8:	11 f0       	breq	.+4      	; 0x10fe <qtm_key_sensors_process+0x55c>
    10fa:	21 50       	subi	r18, 0x01	; 1
    10fc:	25 83       	std	Z+5, r18	; 0x05
    10fe:	8a 80       	ldd	r8, Y+2	; 0x02
    1100:	9b 80       	ldd	r9, Y+3	; 0x03
    1102:	d4 01       	movw	r26, r8
    1104:	16 96       	adiw	r26, 0x06	; 6
    1106:	2c 91       	ld	r18, X
    1108:	16 97       	sbiw	r26, 0x06	; 6
    110a:	21 11       	cpse	r18, r1
    110c:	1b c0       	rjmp	.+54     	; 0x1144 <qtm_key_sensors_process+0x5a2>
    110e:	8a 80       	ldd	r8, Y+2	; 0x02
    1110:	9b 80       	ldd	r9, Y+3	; 0x03
    1112:	f4 01       	movw	r30, r8
    1114:	27 81       	ldd	r18, Z+7	; 0x07
    1116:	21 11       	cpse	r18, r1
    1118:	48 c0       	rjmp	.+144    	; 0x11aa <qtm_key_sensors_process+0x608>
    111a:	ea 81       	ldd	r30, Y+2	; 0x02
    111c:	fb 81       	ldd	r31, Y+3	; 0x03
    111e:	23 81       	ldd	r18, Z+3	; 0x03
    1120:	22 23       	and	r18, r18
    1122:	61 f0       	breq	.+24     	; 0x113c <qtm_key_sensors_process+0x59a>
    1124:	20 e0       	ldi	r18, 0x00	; 0
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	a0 e0       	ldi	r26, 0x00	; 0
    112a:	b0 e0       	ldi	r27, 0x00	; 0
    112c:	ea 81       	ldd	r30, Y+2	; 0x02
    112e:	fb 81       	ldd	r31, Y+3	; 0x03
    1130:	40 81       	ld	r20, Z
    1132:	51 81       	ldd	r21, Z+1	; 0x01
    1134:	a4 17       	cp	r26, r20
    1136:	b5 07       	cpc	r27, r21
    1138:	08 f4       	brcc	.+2      	; 0x113c <qtm_key_sensors_process+0x59a>
    113a:	6e c0       	rjmp	.+220    	; 0x1218 <qtm_key_sensors_process+0x676>
    113c:	89 3c       	cpi	r24, 0xC9	; 201
    113e:	91 05       	cpc	r25, r1
    1140:	28 f6       	brcc	.-118    	; 0x10cc <qtm_key_sensors_process+0x52a>
    1142:	bb cf       	rjmp	.-138    	; 0x10ba <qtm_key_sensors_process+0x518>
    1144:	08 81       	ld	r16, Y
    1146:	19 81       	ldd	r17, Y+1	; 0x01
    1148:	f8 01       	movw	r30, r16
    114a:	24 81       	ldd	r18, Z+4	; 0x04
    114c:	21 11       	cpse	r18, r1
    114e:	df cf       	rjmp	.-66     	; 0x110e <qtm_key_sensors_process+0x56c>
    1150:	ed 90       	ld	r14, X+
    1152:	fc 90       	ld	r15, X
    1154:	60 e0       	ldi	r22, 0x00	; 0
    1156:	70 e0       	ldi	r23, 0x00	; 0
    1158:	40 e0       	ldi	r20, 0x00	; 0
    115a:	50 e0       	ldi	r21, 0x00	; 0
    115c:	4e 15       	cp	r20, r14
    115e:	5f 05       	cpc	r21, r15
    1160:	f1 f0       	breq	.+60     	; 0x119e <qtm_key_sensors_process+0x5fc>
    1162:	ec 81       	ldd	r30, Y+4	; 0x04
    1164:	fd 81       	ldd	r31, Y+5	; 0x05
    1166:	e6 0f       	add	r30, r22
    1168:	f7 1f       	adc	r31, r23
    116a:	20 81       	ld	r18, Z
    116c:	23 30       	cpi	r18, 0x03	; 3
    116e:	11 f0       	breq	.+4      	; 0x1174 <qtm_key_sensors_process+0x5d2>
    1170:	28 30       	cpi	r18, 0x08	; 8
    1172:	81 f4       	brne	.+32     	; 0x1194 <qtm_key_sensors_process+0x5f2>
    1174:	24 81       	ldd	r18, Z+4	; 0x04
    1176:	35 81       	ldd	r19, Z+5	; 0x05
    1178:	c2 80       	ldd	r12, Z+2	; 0x02
    117a:	d3 80       	ldd	r13, Z+3	; 0x03
    117c:	d6 01       	movw	r26, r12
    117e:	11 96       	adiw	r26, 0x01	; 1
    1180:	cd 90       	ld	r12, X+
    1182:	dc 90       	ld	r13, X
    1184:	12 97       	sbiw	r26, 0x02	; 2
    1186:	2c 15       	cp	r18, r12
    1188:	3d 05       	cpc	r19, r13
    118a:	20 f4       	brcc	.+8      	; 0x1194 <qtm_key_sensors_process+0x5f2>
    118c:	2f 5f       	subi	r18, 0xFF	; 255
    118e:	3f 4f       	sbci	r19, 0xFF	; 255
    1190:	24 83       	std	Z+4, r18	; 0x04
    1192:	35 83       	std	Z+5, r19	; 0x05
    1194:	4f 5f       	subi	r20, 0xFF	; 255
    1196:	5f 4f       	sbci	r21, 0xFF	; 255
    1198:	6a 5f       	subi	r22, 0xFA	; 250
    119a:	7f 4f       	sbci	r23, 0xFF	; 255
    119c:	df cf       	rjmp	.-66     	; 0x115c <qtm_key_sensors_process+0x5ba>
    119e:	f4 01       	movw	r30, r8
    11a0:	26 81       	ldd	r18, Z+6	; 0x06
    11a2:	d8 01       	movw	r26, r16
    11a4:	14 96       	adiw	r26, 0x04	; 4
    11a6:	2c 93       	st	X, r18
    11a8:	b2 cf       	rjmp	.-156    	; 0x110e <qtm_key_sensors_process+0x56c>
    11aa:	08 81       	ld	r16, Y
    11ac:	19 81       	ldd	r17, Y+1	; 0x01
    11ae:	d8 01       	movw	r26, r16
    11b0:	15 96       	adiw	r26, 0x05	; 5
    11b2:	2c 91       	ld	r18, X
    11b4:	21 11       	cpse	r18, r1
    11b6:	b1 cf       	rjmp	.-158    	; 0x111a <qtm_key_sensors_process+0x578>
    11b8:	e0 80       	ld	r14, Z
    11ba:	f1 80       	ldd	r15, Z+1	; 0x01
    11bc:	60 e0       	ldi	r22, 0x00	; 0
    11be:	70 e0       	ldi	r23, 0x00	; 0
    11c0:	40 e0       	ldi	r20, 0x00	; 0
    11c2:	50 e0       	ldi	r21, 0x00	; 0
    11c4:	4e 15       	cp	r20, r14
    11c6:	5f 05       	cpc	r21, r15
    11c8:	f1 f0       	breq	.+60     	; 0x1206 <qtm_key_sensors_process+0x664>
    11ca:	ec 81       	ldd	r30, Y+4	; 0x04
    11cc:	fd 81       	ldd	r31, Y+5	; 0x05
    11ce:	e6 0f       	add	r30, r22
    11d0:	f7 1f       	adc	r31, r23
    11d2:	20 81       	ld	r18, Z
    11d4:	23 30       	cpi	r18, 0x03	; 3
    11d6:	11 f0       	breq	.+4      	; 0x11dc <qtm_key_sensors_process+0x63a>
    11d8:	28 30       	cpi	r18, 0x08	; 8
    11da:	81 f4       	brne	.+32     	; 0x11fc <qtm_key_sensors_process+0x65a>
    11dc:	24 81       	ldd	r18, Z+4	; 0x04
    11de:	35 81       	ldd	r19, Z+5	; 0x05
    11e0:	c2 80       	ldd	r12, Z+2	; 0x02
    11e2:	d3 80       	ldd	r13, Z+3	; 0x03
    11e4:	d6 01       	movw	r26, r12
    11e6:	11 96       	adiw	r26, 0x01	; 1
    11e8:	cd 90       	ld	r12, X+
    11ea:	dc 90       	ld	r13, X
    11ec:	12 97       	sbiw	r26, 0x02	; 2
    11ee:	c2 16       	cp	r12, r18
    11f0:	d3 06       	cpc	r13, r19
    11f2:	20 f4       	brcc	.+8      	; 0x11fc <qtm_key_sensors_process+0x65a>
    11f4:	21 50       	subi	r18, 0x01	; 1
    11f6:	31 09       	sbc	r19, r1
    11f8:	24 83       	std	Z+4, r18	; 0x04
    11fa:	35 83       	std	Z+5, r19	; 0x05
    11fc:	4f 5f       	subi	r20, 0xFF	; 255
    11fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1200:	6a 5f       	subi	r22, 0xFA	; 250
    1202:	7f 4f       	sbci	r23, 0xFF	; 255
    1204:	df cf       	rjmp	.-66     	; 0x11c4 <qtm_key_sensors_process+0x622>
    1206:	f4 01       	movw	r30, r8
    1208:	27 81       	ldd	r18, Z+7	; 0x07
    120a:	d8 01       	movw	r26, r16
    120c:	15 96       	adiw	r26, 0x05	; 5
    120e:	2c 93       	st	X, r18
    1210:	84 cf       	rjmp	.-248    	; 0x111a <qtm_key_sensors_process+0x578>
    1212:	21 50       	subi	r18, 0x01	; 1
    1214:	23 83       	std	Z+3, r18	; 0x03
    1216:	81 cf       	rjmp	.-254    	; 0x111a <qtm_key_sensors_process+0x578>
    1218:	a9 01       	movw	r20, r18
    121a:	44 0f       	add	r20, r20
    121c:	55 1f       	adc	r21, r21
    121e:	ec 81       	ldd	r30, Y+4	; 0x04
    1220:	fd 81       	ldd	r31, Y+5	; 0x05
    1222:	e4 0f       	add	r30, r20
    1224:	f5 1f       	adc	r31, r21
    1226:	60 81       	ld	r22, Z
    1228:	65 38       	cpi	r22, 0x85	; 133
    122a:	09 f0       	breq	.+2      	; 0x122e <qtm_key_sensors_process+0x68c>
    122c:	47 c0       	rjmp	.+142    	; 0x12bc <qtm_key_sensors_process+0x71a>
    122e:	61 81       	ldd	r22, Z+1	; 0x01
    1230:	66 23       	and	r22, r22
    1232:	19 f0       	breq	.+6      	; 0x123a <qtm_key_sensors_process+0x698>
    1234:	61 50       	subi	r22, 0x01	; 1
    1236:	61 83       	std	Z+1, r22	; 0x01
    1238:	41 c0       	rjmp	.+130    	; 0x12bc <qtm_key_sensors_process+0x71a>
    123a:	a0 82       	st	Z, r10
    123c:	6c 81       	ldd	r22, Y+4	; 0x04
    123e:	7d 81       	ldd	r23, Y+5	; 0x05
    1240:	fb 01       	movw	r30, r22
    1242:	e4 0f       	add	r30, r20
    1244:	f5 1f       	adc	r31, r21
    1246:	02 80       	ldd	r0, Z+2	; 0x02
    1248:	f3 81       	ldd	r31, Z+3	; 0x03
    124a:	e0 2d       	mov	r30, r0
    124c:	b0 82       	st	Z, r11
    124e:	ee 81       	ldd	r30, Y+6	; 0x06
    1250:	ff 81       	ldd	r31, Y+7	; 0x07
    1252:	e2 0f       	add	r30, r18
    1254:	f3 1f       	adc	r31, r19
    1256:	d2 80       	ldd	r13, Z+2	; 0x02
    1258:	dd 20       	and	r13, r13
    125a:	81 f1       	breq	.+96     	; 0x12bc <qtm_key_sensors_process+0x71a>
    125c:	40 e0       	ldi	r20, 0x00	; 0
    125e:	50 e0       	ldi	r21, 0x00	; 0
    1260:	00 e0       	ldi	r16, 0x00	; 0
    1262:	10 e0       	ldi	r17, 0x00	; 0
    1264:	ea 81       	ldd	r30, Y+2	; 0x02
    1266:	fb 81       	ldd	r31, Y+3	; 0x03
    1268:	60 81       	ld	r22, Z
    126a:	71 81       	ldd	r23, Z+1	; 0x01
    126c:	06 17       	cp	r16, r22
    126e:	17 07       	cpc	r17, r23
    1270:	28 f5       	brcc	.+74     	; 0x12bc <qtm_key_sensors_process+0x71a>
    1272:	ee 81       	ldd	r30, Y+6	; 0x06
    1274:	ff 81       	ldd	r31, Y+7	; 0x07
    1276:	e4 0f       	add	r30, r20
    1278:	f5 1f       	adc	r31, r21
    127a:	62 81       	ldd	r22, Z+2	; 0x02
    127c:	d6 12       	cpse	r13, r22
    127e:	19 c0       	rjmp	.+50     	; 0x12b2 <qtm_key_sensors_process+0x710>
    1280:	ba 01       	movw	r22, r20
    1282:	66 0f       	add	r22, r22
    1284:	77 1f       	adc	r23, r23
    1286:	ec 81       	ldd	r30, Y+4	; 0x04
    1288:	fd 81       	ldd	r31, Y+5	; 0x05
    128a:	4f 01       	movw	r8, r30
    128c:	86 0e       	add	r8, r22
    128e:	97 1e       	adc	r9, r23
    1290:	f4 01       	movw	r30, r8
    1292:	e2 80       	ldd	r14, Z+2	; 0x02
    1294:	f3 80       	ldd	r15, Z+3	; 0x03
    1296:	f7 01       	movw	r30, r14
    1298:	f0 80       	ld	r15, Z
    129a:	f0 fe       	sbrs	r15, 0
    129c:	0a c0       	rjmp	.+20     	; 0x12b2 <qtm_key_sensors_process+0x710>
    129e:	f4 01       	movw	r30, r8
    12a0:	a0 82       	st	Z, r10
    12a2:	ec 81       	ldd	r30, Y+4	; 0x04
    12a4:	fd 81       	ldd	r31, Y+5	; 0x05
    12a6:	e6 0f       	add	r30, r22
    12a8:	f7 1f       	adc	r31, r23
    12aa:	02 80       	ldd	r0, Z+2	; 0x02
    12ac:	f3 81       	ldd	r31, Z+3	; 0x03
    12ae:	e0 2d       	mov	r30, r0
    12b0:	b0 82       	st	Z, r11
    12b2:	0f 5f       	subi	r16, 0xFF	; 255
    12b4:	1f 4f       	sbci	r17, 0xFF	; 255
    12b6:	4d 5f       	subi	r20, 0xFD	; 253
    12b8:	5f 4f       	sbci	r21, 0xFF	; 255
    12ba:	d4 cf       	rjmp	.-88     	; 0x1264 <qtm_key_sensors_process+0x6c2>
    12bc:	11 96       	adiw	r26, 0x01	; 1
    12be:	2d 5f       	subi	r18, 0xFD	; 253
    12c0:	3f 4f       	sbci	r19, 0xFF	; 255
    12c2:	34 cf       	rjmp	.-408    	; 0x112c <qtm_key_sensors_process+0x58a>
    12c4:	8b e0       	ldi	r24, 0x0B	; 11
    12c6:	df 91       	pop	r29
    12c8:	cf 91       	pop	r28
    12ca:	1f 91       	pop	r17
    12cc:	0f 91       	pop	r16
    12ce:	ff 90       	pop	r15
    12d0:	ef 90       	pop	r14
    12d2:	df 90       	pop	r13
    12d4:	cf 90       	pop	r12
    12d6:	bf 90       	pop	r11
    12d8:	af 90       	pop	r10
    12da:	9f 90       	pop	r9
    12dc:	8f 90       	pop	r8
    12de:	7f 90       	pop	r7
    12e0:	6f 90       	pop	r6
    12e2:	5f 90       	pop	r5
    12e4:	4f 90       	pop	r4
    12e6:	3f 90       	pop	r3
    12e8:	2f 90       	pop	r2
    12ea:	08 95       	ret

000012ec <select_next_channel_to_measure>:
    12ec:	80 91 8d 3e 	lds	r24, 0x3E8D	; 0x803e8d <current_measure_channel>
    12f0:	90 91 8e 3e 	lds	r25, 0x3E8E	; 0x803e8e <current_measure_channel+0x1>
    12f4:	a0 91 e4 3e 	lds	r26, 0x3EE4	; 0x803ee4 <qtm_acquisition_control_working_set_ptr>
    12f8:	b0 91 e5 3e 	lds	r27, 0x3EE5	; 0x803ee5 <qtm_acquisition_control_working_set_ptr+0x1>
    12fc:	ed 91       	ld	r30, X+
    12fe:	fc 91       	ld	r31, X
    1300:	11 97       	sbiw	r26, 0x01	; 1
    1302:	40 81       	ld	r20, Z
    1304:	51 81       	ldd	r21, Z+1	; 0x01
    1306:	25 e0       	ldi	r18, 0x05	; 5
    1308:	28 9f       	mul	r18, r24
    130a:	b0 01       	movw	r22, r0
    130c:	29 9f       	mul	r18, r25
    130e:	70 0d       	add	r23, r0
    1310:	11 24       	eor	r1, r1
    1312:	20 e0       	ldi	r18, 0x00	; 0
    1314:	30 e0       	ldi	r19, 0x00	; 0
    1316:	84 17       	cp	r24, r20
    1318:	95 07       	cpc	r25, r21
    131a:	a8 f4       	brcc	.+42     	; 0x1346 <select_next_channel_to_measure+0x5a>
    131c:	14 96       	adiw	r26, 0x04	; 4
    131e:	ed 91       	ld	r30, X+
    1320:	fc 91       	ld	r31, X
    1322:	15 97       	sbiw	r26, 0x05	; 5
    1324:	e2 0f       	add	r30, r18
    1326:	f3 1f       	adc	r31, r19
    1328:	e6 0f       	add	r30, r22
    132a:	f7 1f       	adc	r31, r23
    132c:	e0 81       	ld	r30, Z
    132e:	2b 5f       	subi	r18, 0xFB	; 251
    1330:	3f 4f       	sbci	r19, 0xFF	; 255
    1332:	e0 fd       	sbrc	r30, 0
    1334:	02 c0       	rjmp	.+4      	; 0x133a <select_next_channel_to_measure+0x4e>
    1336:	01 96       	adiw	r24, 0x01	; 1
    1338:	ee cf       	rjmp	.-36     	; 0x1316 <select_next_channel_to_measure+0x2a>
    133a:	80 93 8d 3e 	sts	0x3E8D, r24	; 0x803e8d <current_measure_channel>
    133e:	90 93 8e 3e 	sts	0x3E8E, r25	; 0x803e8e <current_measure_channel+0x1>
    1342:	80 e0       	ldi	r24, 0x00	; 0
    1344:	08 95       	ret
    1346:	10 92 8d 3e 	sts	0x3E8D, r1	; 0x803e8d <current_measure_channel>
    134a:	10 92 8e 3e 	sts	0x3E8E, r1	; 0x803e8e <current_measure_channel+0x1>
    134e:	81 e0       	ldi	r24, 0x01	; 1
    1350:	08 95       	ret

00001352 <qtm_measure_node>:
    1352:	bc 01       	movw	r22, r24
    1354:	e0 91 e4 3e 	lds	r30, 0x3EE4	; 0x803ee4 <qtm_acquisition_control_working_set_ptr>
    1358:	f0 91 e5 3e 	lds	r31, 0x3EE5	; 0x803ee5 <qtm_acquisition_control_working_set_ptr+0x1>
    135c:	86 e0       	ldi	r24, 0x06	; 6
    135e:	86 9f       	mul	r24, r22
    1360:	90 01       	movw	r18, r0
    1362:	87 9f       	mul	r24, r23
    1364:	30 0d       	add	r19, r0
    1366:	11 24       	eor	r1, r1
    1368:	a2 81       	ldd	r26, Z+2	; 0x02
    136a:	b3 81       	ldd	r27, Z+3	; 0x03
    136c:	a2 0f       	add	r26, r18
    136e:	b3 1f       	adc	r27, r19
    1370:	11 96       	adiw	r26, 0x01	; 1
    1372:	8c 91       	ld	r24, X
    1374:	80 93 2a 06 	sts	0x062A, r24	; 0x80062a <gain_setting_int_cap+0x7f6938>
    1378:	a2 81       	ldd	r26, Z+2	; 0x02
    137a:	b3 81       	ldd	r27, Z+3	; 0x03
    137c:	a2 0f       	add	r26, r18
    137e:	b3 1f       	adc	r27, r19
    1380:	8c 91       	ld	r24, X
    1382:	80 93 26 06 	sts	0x0626, r24	; 0x800626 <gain_setting_int_cap+0x7f6934>
    1386:	95 e0       	ldi	r25, 0x05	; 5
    1388:	96 9f       	mul	r25, r22
    138a:	a0 01       	movw	r20, r0
    138c:	97 9f       	mul	r25, r23
    138e:	50 0d       	add	r21, r0
    1390:	11 24       	eor	r1, r1
    1392:	a4 81       	ldd	r26, Z+4	; 0x04
    1394:	b5 81       	ldd	r27, Z+5	; 0x05
    1396:	a4 0f       	add	r26, r20
    1398:	b5 1f       	adc	r27, r21
    139a:	13 96       	adiw	r26, 0x03	; 3
    139c:	8c 91       	ld	r24, X
    139e:	80 93 1a 06 	sts	0x061A, r24	; 0x80061a <gain_setting_int_cap+0x7f6928>
    13a2:	a4 81       	ldd	r26, Z+4	; 0x04
    13a4:	b5 81       	ldd	r27, Z+5	; 0x05
    13a6:	a4 0f       	add	r26, r20
    13a8:	b5 1f       	adc	r27, r21
    13aa:	14 96       	adiw	r26, 0x04	; 4
    13ac:	8c 91       	ld	r24, X
    13ae:	80 93 1b 06 	sts	0x061B, r24	; 0x80061b <gain_setting_int_cap+0x7f6929>
    13b2:	a4 81       	ldd	r26, Z+4	; 0x04
    13b4:	b5 81       	ldd	r27, Z+5	; 0x05
    13b6:	a4 0f       	add	r26, r20
    13b8:	b5 1f       	adc	r27, r21
    13ba:	8c 91       	ld	r24, X
    13bc:	81 fd       	sbrc	r24, 1
    13be:	9c 93       	st	X, r25
    13c0:	84 81       	ldd	r24, Z+4	; 0x04
    13c2:	95 81       	ldd	r25, Z+5	; 0x05
    13c4:	dc 01       	movw	r26, r24
    13c6:	a4 0f       	add	r26, r20
    13c8:	b5 1f       	adc	r27, r21
    13ca:	8c 91       	ld	r24, X
    13cc:	8c 71       	andi	r24, 0x1C	; 28
    13ce:	69 f4       	brne	.+26     	; 0x13ea <qtm_measure_node+0x98>
    13d0:	a2 81       	ldd	r26, Z+2	; 0x02
    13d2:	b3 81       	ldd	r27, Z+3	; 0x03
    13d4:	a2 0f       	add	r26, r18
    13d6:	b3 1f       	adc	r27, r19
    13d8:	14 96       	adiw	r26, 0x04	; 4
    13da:	ac 91       	ld	r26, X
    13dc:	a2 95       	swap	r26
    13de:	af 70       	andi	r26, 0x0F	; 15
    13e0:	b0 e0       	ldi	r27, 0x00	; 0
    13e2:	ae 50       	subi	r26, 0x0E	; 14
    13e4:	b3 46       	sbci	r27, 0x63	; 99
    13e6:	8c 91       	ld	r24, X
    13e8:	01 c0       	rjmp	.+2      	; 0x13ec <qtm_measure_node+0x9a>
    13ea:	8f e3       	ldi	r24, 0x3F	; 63
    13ec:	80 93 1c 06 	sts	0x061C, r24	; 0x80061c <gain_setting_int_cap+0x7f692a>
    13f0:	a2 81       	ldd	r26, Z+2	; 0x02
    13f2:	b3 81       	ldd	r27, Z+3	; 0x03
    13f4:	a2 0f       	add	r26, r18
    13f6:	b3 1f       	adc	r27, r19
    13f8:	12 96       	adiw	r26, 0x02	; 2
    13fa:	8c 91       	ld	r24, X
    13fc:	8b 31       	cpi	r24, 0x1B	; 27
    13fe:	10 f4       	brcc	.+4      	; 0x1404 <qtm_measure_node+0xb2>
    1400:	8c 5f       	subi	r24, 0xFC	; 252
    1402:	01 c0       	rjmp	.+2      	; 0x1406 <qtm_measure_node+0xb4>
    1404:	8f e1       	ldi	r24, 0x1F	; 31
    1406:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <gain_setting_int_cap+0x7f6913>
    140a:	a2 81       	ldd	r26, Z+2	; 0x02
    140c:	b3 81       	ldd	r27, Z+3	; 0x03
    140e:	a2 0f       	add	r26, r18
    1410:	b3 1f       	adc	r27, r19
    1412:	15 96       	adiw	r26, 0x05	; 5
    1414:	8c 91       	ld	r24, X
    1416:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <gain_setting_int_cap+0x7f690f>
    141a:	a2 81       	ldd	r26, Z+2	; 0x02
    141c:	b3 81       	ldd	r27, Z+3	; 0x03
    141e:	a2 0f       	add	r26, r18
    1420:	b3 1f       	adc	r27, r19
    1422:	13 96       	adiw	r26, 0x03	; 3
    1424:	8c 91       	ld	r24, X
    1426:	82 95       	swap	r24
    1428:	8f 70       	andi	r24, 0x0F	; 15
    142a:	80 93 19 06 	sts	0x0619, r24	; 0x800619 <gain_setting_int_cap+0x7f6927>
    142e:	82 81       	ldd	r24, Z+2	; 0x02
    1430:	93 81       	ldd	r25, Z+3	; 0x03
    1432:	fc 01       	movw	r30, r24
    1434:	e2 0f       	add	r30, r18
    1436:	f3 1f       	adc	r31, r19
    1438:	83 81       	ldd	r24, Z+3	; 0x03
    143a:	8f 70       	andi	r24, 0x0F	; 15
    143c:	80 61       	ori	r24, 0x10	; 16
    143e:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <gain_setting_int_cap+0x7f6910>
    1442:	80 91 18 06 	lds	r24, 0x0618	; 0x800618 <gain_setting_int_cap+0x7f6926>
    1446:	83 60       	ori	r24, 0x03	; 3
    1448:	80 93 18 06 	sts	0x0618, r24	; 0x800618 <gain_setting_int_cap+0x7f6926>
    144c:	81 e8       	ldi	r24, 0x81	; 129
    144e:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <gain_setting_int_cap+0x7f690e>
    1452:	81 e0       	ldi	r24, 0x01	; 1
    1454:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <gain_setting_int_cap+0x7f6916>
    1458:	08 95       	ret

0000145a <qtm_acquisition_process>:
    145a:	3f 92       	push	r3
    145c:	4f 92       	push	r4
    145e:	5f 92       	push	r5
    1460:	6f 92       	push	r6
    1462:	7f 92       	push	r7
    1464:	8f 92       	push	r8
    1466:	9f 92       	push	r9
    1468:	af 92       	push	r10
    146a:	bf 92       	push	r11
    146c:	cf 92       	push	r12
    146e:	df 92       	push	r13
    1470:	ef 92       	push	r14
    1472:	ff 92       	push	r15
    1474:	0f 93       	push	r16
    1476:	1f 93       	push	r17
    1478:	cf 93       	push	r28
    147a:	df 93       	push	r29
    147c:	80 91 8c 3e 	lds	r24, 0x3E8C	; 0x803e8c <touch_seq_lib_state>
    1480:	88 23       	and	r24, r24
    1482:	09 f4       	brne	.+2      	; 0x1486 <qtm_acquisition_process+0x2c>
    1484:	48 c1       	rjmp	.+656    	; 0x1716 <qtm_acquisition_process+0x2bc>
    1486:	a0 91 e4 3e 	lds	r26, 0x3EE4	; 0x803ee4 <qtm_acquisition_control_working_set_ptr>
    148a:	b0 91 e5 3e 	lds	r27, 0x3EE5	; 0x803ee5 <qtm_acquisition_control_working_set_ptr+0x1>
    148e:	c0 90 e6 3e 	lds	r12, 0x3EE6	; 0x803ee6 <qtm_raw_data_measurements_ptr>
    1492:	d0 90 e7 3e 	lds	r13, 0x3EE7	; 0x803ee7 <qtm_raw_data_measurements_ptr+0x1>
    1496:	00 e0       	ldi	r16, 0x00	; 0
    1498:	10 e0       	ldi	r17, 0x00	; 0
    149a:	60 e0       	ldi	r22, 0x00	; 0
    149c:	70 e0       	ldi	r23, 0x00	; 0
    149e:	e1 2c       	mov	r14, r1
    14a0:	f1 2c       	mov	r15, r1
    14a2:	80 e0       	ldi	r24, 0x00	; 0
    14a4:	33 24       	eor	r3, r3
    14a6:	33 94       	inc	r3
    14a8:	d1 e8       	ldi	r29, 0x81	; 129
    14aa:	4d 2e       	mov	r4, r29
    14ac:	88 24       	eor	r8, r8
    14ae:	8a 94       	dec	r8
    14b0:	99 24       	eor	r9, r9
    14b2:	93 94       	inc	r9
    14b4:	6d 90       	ld	r6, X+
    14b6:	7c 90       	ld	r7, X
    14b8:	11 97       	sbiw	r26, 0x01	; 1
    14ba:	f3 01       	movw	r30, r6
    14bc:	20 81       	ld	r18, Z
    14be:	31 81       	ldd	r19, Z+1	; 0x01
    14c0:	e2 16       	cp	r14, r18
    14c2:	f3 06       	cpc	r15, r19
    14c4:	08 f0       	brcs	.+2      	; 0x14c8 <qtm_acquisition_process+0x6e>
    14c6:	23 c1       	rjmp	.+582    	; 0x170e <qtm_acquisition_process+0x2b4>
    14c8:	e6 01       	movw	r28, r12
    14ca:	29 91       	ld	r18, Y+
    14cc:	39 91       	ld	r19, Y+
    14ce:	6e 01       	movw	r12, r28
    14d0:	14 96       	adiw	r26, 0x04	; 4
    14d2:	ed 91       	ld	r30, X+
    14d4:	fc 91       	ld	r31, X
    14d6:	15 97       	sbiw	r26, 0x05	; 5
    14d8:	e6 0f       	add	r30, r22
    14da:	f7 1f       	adc	r31, r23
    14dc:	40 81       	ld	r20, Z
    14de:	4c 71       	andi	r20, 0x1C	; 28
    14e0:	50 e0       	ldi	r21, 0x00	; 0
    14e2:	56 95       	lsr	r21
    14e4:	47 95       	ror	r20
    14e6:	56 95       	lsr	r21
    14e8:	47 95       	ror	r20
    14ea:	41 15       	cp	r20, r1
    14ec:	51 05       	cpc	r21, r1
    14ee:	21 f0       	breq	.+8      	; 0x14f8 <qtm_acquisition_process+0x9e>
    14f0:	41 30       	cpi	r20, 0x01	; 1
    14f2:	51 05       	cpc	r21, r1
    14f4:	b9 f0       	breq	.+46     	; 0x1524 <qtm_acquisition_process+0xca>
    14f6:	02 c1       	rjmp	.+516    	; 0x16fc <qtm_acquisition_process+0x2a2>
    14f8:	12 96       	adiw	r26, 0x02	; 2
    14fa:	cd 91       	ld	r28, X+
    14fc:	dc 91       	ld	r29, X
    14fe:	13 97       	sbiw	r26, 0x03	; 3
    1500:	c0 0f       	add	r28, r16
    1502:	d1 1f       	adc	r29, r17
    1504:	4c 81       	ldd	r20, Y+4	; 0x04
    1506:	4f 70       	andi	r20, 0x0F	; 15
    1508:	9d 81       	ldd	r25, Y+5	; 0x05
    150a:	49 17       	cp	r20, r25
    150c:	10 f4       	brcc	.+4      	; 0x1512 <qtm_acquisition_process+0xb8>
    150e:	94 1b       	sub	r25, r20
    1510:	01 c0       	rjmp	.+2      	; 0x1514 <qtm_acquisition_process+0xba>
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	02 c0       	rjmp	.+4      	; 0x151a <qtm_acquisition_process+0xc0>
    1516:	36 95       	lsr	r19
    1518:	27 95       	ror	r18
    151a:	9a 95       	dec	r25
    151c:	e2 f7       	brpl	.-8      	; 0x1516 <qtm_acquisition_process+0xbc>
    151e:	21 83       	std	Z+1, r18	; 0x01
    1520:	32 83       	std	Z+2, r19	; 0x02
    1522:	ed c0       	rjmp	.+474    	; 0x16fe <qtm_acquisition_process+0x2a4>
    1524:	12 96       	adiw	r26, 0x02	; 2
    1526:	4d 91       	ld	r20, X+
    1528:	5c 91       	ld	r21, X
    152a:	13 97       	sbiw	r26, 0x03	; 3
    152c:	40 0f       	add	r20, r16
    152e:	51 1f       	adc	r21, r17
    1530:	ea 01       	movw	r28, r20
    1532:	0d 80       	ldd	r0, Y+5	; 0x05
    1534:	02 c0       	rjmp	.+4      	; 0x153a <qtm_acquisition_process+0xe0>
    1536:	36 95       	lsr	r19
    1538:	27 95       	ror	r18
    153a:	0a 94       	dec	r0
    153c:	e2 f7       	brpl	.-8      	; 0x1536 <qtm_acquisition_process+0xdc>
    153e:	21 83       	std	Z+1, r18	; 0x01
    1540:	32 83       	std	Z+2, r19	; 0x02
    1542:	a3 80       	ldd	r10, Z+3	; 0x03
    1544:	b4 80       	ldd	r11, Z+4	; 0x04
    1546:	21 15       	cp	r18, r1
    1548:	d2 e0       	ldi	r29, 0x02	; 2
    154a:	3d 07       	cpc	r19, r29
    154c:	20 f0       	brcs	.+8      	; 0x1556 <qtm_acquisition_process+0xfc>
    154e:	2f 5f       	subi	r18, 0xFF	; 255
    1550:	31 40       	sbci	r19, 0x01	; 1
    1552:	91 e0       	ldi	r25, 0x01	; 1
    1554:	05 c0       	rjmp	.+10     	; 0x1560 <qtm_acquisition_process+0x106>
    1556:	a4 01       	movw	r20, r8
    1558:	42 1b       	sub	r20, r18
    155a:	53 0b       	sbc	r21, r19
    155c:	9a 01       	movw	r18, r20
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	e3 01       	movw	r28, r6
    1562:	5a 80       	ldd	r5, Y+2	; 0x02
    1564:	d0 e4       	ldi	r29, 0x40	; 64
    1566:	5d 12       	cpse	r5, r29
    1568:	05 c0       	rjmp	.+10     	; 0x1574 <qtm_acquisition_process+0x11a>
    156a:	36 95       	lsr	r19
    156c:	27 95       	ror	r18
    156e:	99 23       	and	r25, r25
    1570:	19 f0       	breq	.+6      	; 0x1578 <qtm_acquisition_process+0x11e>
    1572:	09 c0       	rjmp	.+18     	; 0x1586 <qtm_acquisition_process+0x12c>
    1574:	99 23       	and	r25, r25
    1576:	39 f0       	breq	.+14     	; 0x1586 <qtm_acquisition_process+0x12c>
    1578:	4f ef       	ldi	r20, 0xFF	; 255
    157a:	a4 16       	cp	r10, r20
    157c:	b4 06       	cpc	r11, r20
    157e:	31 f4       	brne	.+12     	; 0x158c <qtm_acquisition_process+0x132>
    1580:	40 82       	st	Z, r4
    1582:	8e e0       	ldi	r24, 0x0E	; 14
    1584:	07 c0       	rjmp	.+14     	; 0x1594 <qtm_acquisition_process+0x13a>
    1586:	77 24       	eor	r7, r7
    1588:	73 94       	inc	r7
    158a:	01 c0       	rjmp	.+2      	; 0x158e <qtm_acquisition_process+0x134>
    158c:	71 2c       	mov	r7, r1
    158e:	2a 30       	cpi	r18, 0x0A	; 10
    1590:	31 05       	cpc	r19, r1
    1592:	90 f4       	brcc	.+36     	; 0x15b8 <qtm_acquisition_process+0x15e>
    1594:	14 96       	adiw	r26, 0x04	; 4
    1596:	ed 91       	ld	r30, X+
    1598:	fc 91       	ld	r31, X
    159a:	15 97       	sbiw	r26, 0x05	; 5
    159c:	e6 0f       	add	r30, r22
    159e:	f7 1f       	adc	r31, r23
    15a0:	90 81       	ld	r25, Z
    15a2:	97 ff       	sbrs	r25, 7
    15a4:	30 82       	st	Z, r3
    15a6:	14 96       	adiw	r26, 0x04	; 4
    15a8:	ed 91       	ld	r30, X+
    15aa:	fc 91       	ld	r31, X
    15ac:	15 97       	sbiw	r26, 0x05	; 5
    15ae:	e6 0f       	add	r30, r22
    15b0:	f7 1f       	adc	r31, r23
    15b2:	a3 82       	std	Z+3, r10	; 0x03
    15b4:	b4 82       	std	Z+4, r11	; 0x04
    15b6:	a3 c0       	rjmp	.+326    	; 0x16fe <qtm_acquisition_process+0x2a4>
    15b8:	e5 01       	movw	r28, r10
    15ba:	cd 2f       	mov	r28, r29
    15bc:	dd 27       	eor	r29, r29
    15be:	c2 95       	swap	r28
    15c0:	cf 70       	andi	r28, 0x0F	; 15
    15c2:	9c 2f       	mov	r25, r28
    15c4:	a5 01       	movw	r20, r10
    15c6:	44 27       	eor	r20, r20
    15c8:	5f 70       	andi	r21, 0x0F	; 15
    15ca:	65 2e       	mov	r6, r21
    15cc:	a5 01       	movw	r20, r10
    15ce:	40 7f       	andi	r20, 0xF0	; 240
    15d0:	55 27       	eor	r21, r21
    15d2:	52 95       	swap	r21
    15d4:	42 95       	swap	r20
    15d6:	4f 70       	andi	r20, 0x0F	; 15
    15d8:	45 27       	eor	r20, r21
    15da:	5f 70       	andi	r21, 0x0F	; 15
    15dc:	45 27       	eor	r20, r21
    15de:	5a 2d       	mov	r21, r10
    15e0:	5f 70       	andi	r21, 0x0F	; 15
    15e2:	a5 2e       	mov	r10, r21
    15e4:	c4 30       	cpi	r28, 0x04	; 4
    15e6:	30 f0       	brcs	.+12     	; 0x15f4 <qtm_acquisition_process+0x19a>
    15e8:	93 70       	andi	r25, 0x03	; 3
    15ea:	d6 95       	lsr	r29
    15ec:	c7 95       	ror	r28
    15ee:	d6 95       	lsr	r29
    15f0:	c7 95       	ror	r28
    15f2:	9c 0f       	add	r25, r28
    15f4:	71 10       	cpse	r7, r1
    15f6:	3c c0       	rjmp	.+120    	; 0x1670 <qtm_acquisition_process+0x216>
    15f8:	50 e8       	ldi	r21, 0x80	; 128
    15fa:	55 0d       	add	r21, r5
    15fc:	52 30       	cpi	r21, 0x02	; 2
    15fe:	10 f4       	brcc	.+4      	; 0x1604 <qtm_acquisition_process+0x1aa>
    1600:	56 e0       	ldi	r21, 0x06	; 6
    1602:	07 c0       	rjmp	.+14     	; 0x1612 <qtm_acquisition_process+0x1b8>
    1604:	53 e0       	ldi	r21, 0x03	; 3
    1606:	05 c0       	rjmp	.+10     	; 0x1612 <qtm_acquisition_process+0x1b8>
    1608:	95 17       	cp	r25, r21
    160a:	68 f4       	brcc	.+26     	; 0x1626 <qtm_acquisition_process+0x1cc>
    160c:	9f 5f       	subi	r25, 0xFF	; 255
    160e:	2f 5c       	subi	r18, 0xCF	; 207
    1610:	31 09       	sbc	r19, r1
    1612:	20 3d       	cpi	r18, 0xD0	; 208
    1614:	31 05       	cpc	r19, r1
    1616:	c0 f7       	brcc	.-16     	; 0x1608 <qtm_acquisition_process+0x1ae>
    1618:	06 c0       	rjmp	.+12     	; 0x1626 <qtm_acquisition_process+0x1cc>
    161a:	cf e0       	ldi	r28, 0x0F	; 15
    161c:	6c 16       	cp	r6, r28
    161e:	49 f0       	breq	.+18     	; 0x1632 <qtm_acquisition_process+0x1d8>
    1620:	63 94       	inc	r6
    1622:	25 51       	subi	r18, 0x15	; 21
    1624:	31 09       	sbc	r19, r1
    1626:	26 31       	cpi	r18, 0x16	; 22
    1628:	31 05       	cpc	r19, r1
    162a:	b8 f7       	brcc	.-18     	; 0x161a <qtm_acquisition_process+0x1c0>
    162c:	df e0       	ldi	r29, 0x0F	; 15
    162e:	6d 12       	cpse	r6, r29
    1630:	0e c0       	rjmp	.+28     	; 0x164e <qtm_acquisition_process+0x1f4>
    1632:	95 17       	cp	r25, r21
    1634:	20 f4       	brcc	.+8      	; 0x163e <qtm_acquisition_process+0x1e4>
    1636:	9f 5f       	subi	r25, 0xFF	; 255
    1638:	d5 e0       	ldi	r29, 0x05	; 5
    163a:	6d 2e       	mov	r6, r29
    163c:	08 c0       	rjmp	.+16     	; 0x164e <qtm_acquisition_process+0x1f4>
    163e:	cf e0       	ldi	r28, 0x0F	; 15
    1640:	6c 2e       	mov	r6, r28
    1642:	05 c0       	rjmp	.+10     	; 0x164e <qtm_acquisition_process+0x1f4>
    1644:	4f 30       	cpi	r20, 0x0F	; 15
    1646:	49 f0       	breq	.+18     	; 0x165a <qtm_acquisition_process+0x200>
    1648:	4f 5f       	subi	r20, 0xFF	; 255
    164a:	22 50       	subi	r18, 0x02	; 2
    164c:	31 09       	sbc	r19, r1
    164e:	23 30       	cpi	r18, 0x03	; 3
    1650:	31 05       	cpc	r19, r1
    1652:	c0 f7       	brcc	.-16     	; 0x1644 <qtm_acquisition_process+0x1ea>
    1654:	4f 30       	cpi	r20, 0x0F	; 15
    1656:	09 f0       	breq	.+2      	; 0x165a <qtm_acquisition_process+0x200>
    1658:	65 c0       	rjmp	.+202    	; 0x1724 <qtm_acquisition_process+0x2ca>
    165a:	4f e0       	ldi	r20, 0x0F	; 15
    165c:	64 16       	cp	r6, r20
    165e:	81 f1       	breq	.+96     	; 0x16c0 <qtm_acquisition_process+0x266>
    1660:	63 94       	inc	r6
    1662:	45 e0       	ldi	r20, 0x05	; 5
    1664:	5f c0       	rjmp	.+190    	; 0x1724 <qtm_acquisition_process+0x2ca>
    1666:	99 23       	and	r25, r25
    1668:	61 f0       	breq	.+24     	; 0x1682 <qtm_acquisition_process+0x228>
    166a:	91 50       	subi	r25, 0x01	; 1
    166c:	2f 5c       	subi	r18, 0xCF	; 207
    166e:	31 09       	sbc	r19, r1
    1670:	20 3d       	cpi	r18, 0xD0	; 208
    1672:	31 05       	cpc	r19, r1
    1674:	c0 f7       	brcc	.-16     	; 0x1666 <qtm_acquisition_process+0x20c>
    1676:	05 c0       	rjmp	.+10     	; 0x1682 <qtm_acquisition_process+0x228>
    1678:	66 20       	and	r6, r6
    167a:	41 f0       	breq	.+16     	; 0x168c <qtm_acquisition_process+0x232>
    167c:	6a 94       	dec	r6
    167e:	25 51       	subi	r18, 0x15	; 21
    1680:	31 09       	sbc	r19, r1
    1682:	26 31       	cpi	r18, 0x16	; 22
    1684:	31 05       	cpc	r19, r1
    1686:	c0 f7       	brcc	.-16     	; 0x1678 <qtm_acquisition_process+0x21e>
    1688:	61 10       	cpse	r6, r1
    168a:	0d c0       	rjmp	.+26     	; 0x16a6 <qtm_acquisition_process+0x24c>
    168c:	99 23       	and	r25, r25
    168e:	21 f0       	breq	.+8      	; 0x1698 <qtm_acquisition_process+0x23e>
    1690:	91 50       	subi	r25, 0x01	; 1
    1692:	5a e0       	ldi	r21, 0x0A	; 10
    1694:	65 2e       	mov	r6, r21
    1696:	07 c0       	rjmp	.+14     	; 0x16a6 <qtm_acquisition_process+0x24c>
    1698:	61 2c       	mov	r6, r1
    169a:	05 c0       	rjmp	.+10     	; 0x16a6 <qtm_acquisition_process+0x24c>
    169c:	44 23       	and	r20, r20
    169e:	41 f0       	breq	.+16     	; 0x16b0 <qtm_acquisition_process+0x256>
    16a0:	41 50       	subi	r20, 0x01	; 1
    16a2:	22 50       	subi	r18, 0x02	; 2
    16a4:	31 09       	sbc	r19, r1
    16a6:	23 30       	cpi	r18, 0x03	; 3
    16a8:	31 05       	cpc	r19, r1
    16aa:	c0 f7       	brcc	.-16     	; 0x169c <qtm_acquisition_process+0x242>
    16ac:	41 11       	cpse	r20, r1
    16ae:	10 c0       	rjmp	.+32     	; 0x16d0 <qtm_acquisition_process+0x276>
    16b0:	66 20       	and	r6, r6
    16b2:	e9 f1       	breq	.+122    	; 0x172e <qtm_acquisition_process+0x2d4>
    16b4:	6a 94       	dec	r6
    16b6:	4a e0       	ldi	r20, 0x0A	; 10
    16b8:	23 30       	cpi	r18, 0x03	; 3
    16ba:	31 05       	cpc	r19, r1
    16bc:	c8 f6       	brcc	.-78     	; 0x1670 <qtm_acquisition_process+0x216>
    16be:	08 c0       	rjmp	.+16     	; 0x16d0 <qtm_acquisition_process+0x276>
    16c0:	59 13       	cpse	r21, r25
    16c2:	2f c0       	rjmp	.+94     	; 0x1722 <qtm_acquisition_process+0x2c8>
    16c4:	23 30       	cpi	r18, 0x03	; 3
    16c6:	31 05       	cpc	r19, r1
    16c8:	40 f1       	brcs	.+80     	; 0x171a <qtm_acquisition_process+0x2c0>
    16ca:	4f e0       	ldi	r20, 0x0F	; 15
    16cc:	a4 2e       	mov	r10, r20
    16ce:	4f e0       	ldi	r20, 0x0F	; 15
    16d0:	94 30       	cpi	r25, 0x04	; 4
    16d2:	18 f0       	brcs	.+6      	; 0x16da <qtm_acquisition_process+0x280>
    16d4:	99 0f       	add	r25, r25
    16d6:	99 0f       	add	r25, r25
    16d8:	99 50       	subi	r25, 0x09	; 9
    16da:	c0 e1       	ldi	r28, 0x10	; 16
    16dc:	4c 9f       	mul	r20, r28
    16de:	a0 01       	movw	r20, r0
    16e0:	11 24       	eor	r1, r1
    16e2:	56 29       	or	r21, r6
    16e4:	4a 29       	or	r20, r10
    16e6:	c9 2f       	mov	r28, r25
    16e8:	d0 e0       	ldi	r29, 0x00	; 0
    16ea:	dc 2f       	mov	r29, r28
    16ec:	cc 27       	eor	r28, r28
    16ee:	d2 95       	swap	r29
    16f0:	d0 7f       	andi	r29, 0xF0	; 240
    16f2:	4c 2b       	or	r20, r28
    16f4:	5d 2b       	or	r21, r29
    16f6:	43 83       	std	Z+3, r20	; 0x03
    16f8:	54 83       	std	Z+4, r21	; 0x04
    16fa:	01 c0       	rjmp	.+2      	; 0x16fe <qtm_acquisition_process+0x2a4>
    16fc:	ff cf       	rjmp	.-2      	; 0x16fc <qtm_acquisition_process+0x2a2>
    16fe:	df ef       	ldi	r29, 0xFF	; 255
    1700:	ed 1a       	sub	r14, r29
    1702:	fd 0a       	sbc	r15, r29
    1704:	6b 5f       	subi	r22, 0xFB	; 251
    1706:	7f 4f       	sbci	r23, 0xFF	; 255
    1708:	0a 5f       	subi	r16, 0xFA	; 250
    170a:	1f 4f       	sbci	r17, 0xFF	; 255
    170c:	d3 ce       	rjmp	.-602    	; 0x14b4 <qtm_acquisition_process+0x5a>
    170e:	92 e0       	ldi	r25, 0x02	; 2
    1710:	90 93 8c 3e 	sts	0x3E8C, r25	; 0x803e8c <touch_seq_lib_state>
    1714:	0e c0       	rjmp	.+28     	; 0x1732 <qtm_acquisition_process+0x2d8>
    1716:	83 e0       	ldi	r24, 0x03	; 3
    1718:	0c c0       	rjmp	.+24     	; 0x1732 <qtm_acquisition_process+0x2d8>
    171a:	4f e0       	ldi	r20, 0x0F	; 15
    171c:	2f e0       	ldi	r18, 0x0F	; 15
    171e:	a2 2e       	mov	r10, r18
    1720:	d7 cf       	rjmp	.-82     	; 0x16d0 <qtm_acquisition_process+0x276>
    1722:	4f e0       	ldi	r20, 0x0F	; 15
    1724:	23 30       	cpi	r18, 0x03	; 3
    1726:	31 05       	cpc	r19, r1
    1728:	08 f0       	brcs	.+2      	; 0x172c <qtm_acquisition_process+0x2d2>
    172a:	73 cf       	rjmp	.-282    	; 0x1612 <qtm_acquisition_process+0x1b8>
    172c:	d1 cf       	rjmp	.-94     	; 0x16d0 <qtm_acquisition_process+0x276>
    172e:	40 e0       	ldi	r20, 0x00	; 0
    1730:	cf cf       	rjmp	.-98     	; 0x16d0 <qtm_acquisition_process+0x276>
    1732:	df 91       	pop	r29
    1734:	cf 91       	pop	r28
    1736:	1f 91       	pop	r17
    1738:	0f 91       	pop	r16
    173a:	ff 90       	pop	r15
    173c:	ef 90       	pop	r14
    173e:	df 90       	pop	r13
    1740:	cf 90       	pop	r12
    1742:	bf 90       	pop	r11
    1744:	af 90       	pop	r10
    1746:	9f 90       	pop	r9
    1748:	8f 90       	pop	r8
    174a:	7f 90       	pop	r7
    174c:	6f 90       	pop	r6
    174e:	5f 90       	pop	r5
    1750:	4f 90       	pop	r4
    1752:	3f 90       	pop	r3
    1754:	08 95       	ret

00001756 <qtm_ptc_init_acquisition_module>:
    1756:	cf 93       	push	r28
    1758:	dc 01       	movw	r26, r24
    175a:	89 2b       	or	r24, r25
    175c:	79 f1       	breq	.+94     	; 0x17bc <qtm_ptc_init_acquisition_module+0x66>
    175e:	ed 91       	ld	r30, X+
    1760:	fc 91       	ld	r31, X
    1762:	11 97       	sbiw	r26, 0x01	; 1
    1764:	60 81       	ld	r22, Z
    1766:	71 81       	ldd	r23, Z+1	; 0x01
    1768:	40 e0       	ldi	r20, 0x00	; 0
    176a:	50 e0       	ldi	r21, 0x00	; 0
    176c:	20 e0       	ldi	r18, 0x00	; 0
    176e:	30 e0       	ldi	r19, 0x00	; 0
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	26 17       	cp	r18, r22
    1774:	37 07       	cpc	r19, r23
    1776:	79 f0       	breq	.+30     	; 0x1796 <qtm_ptc_init_acquisition_module+0x40>
    1778:	12 96       	adiw	r26, 0x02	; 2
    177a:	ed 91       	ld	r30, X+
    177c:	fc 91       	ld	r31, X
    177e:	13 97       	sbiw	r26, 0x03	; 3
    1780:	e4 0f       	add	r30, r20
    1782:	f5 1f       	adc	r31, r21
    1784:	c0 81       	ld	r28, Z
    1786:	81 81       	ldd	r24, Z+1	; 0x01
    1788:	8c 2b       	or	r24, r28
    178a:	98 2b       	or	r25, r24
    178c:	2f 5f       	subi	r18, 0xFF	; 255
    178e:	3f 4f       	sbci	r19, 0xFF	; 255
    1790:	4a 5f       	subi	r20, 0xFA	; 250
    1792:	5f 4f       	sbci	r21, 0xFF	; 255
    1794:	ee cf       	rjmp	.-36     	; 0x1772 <qtm_ptc_init_acquisition_module+0x1c>
    1796:	99 23       	and	r25, r25
    1798:	99 f0       	breq	.+38     	; 0x17c0 <qtm_ptc_init_acquisition_module+0x6a>
    179a:	80 91 8c 3e 	lds	r24, 0x3E8C	; 0x803e8c <touch_seq_lib_state>
    179e:	81 11       	cpse	r24, r1
    17a0:	06 c0       	rjmp	.+12     	; 0x17ae <qtm_ptc_init_acquisition_module+0x58>
    17a2:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <gain_setting_int_cap+0x7f6930>
    17a6:	81 e0       	ldi	r24, 0x01	; 1
    17a8:	80 93 8c 3e 	sts	0x3E8C, r24	; 0x803e8c <touch_seq_lib_state>
    17ac:	05 c0       	rjmp	.+10     	; 0x17b8 <qtm_ptc_init_acquisition_module+0x62>
    17ae:	80 91 22 06 	lds	r24, 0x0622	; 0x800622 <gain_setting_int_cap+0x7f6930>
    17b2:	98 2b       	or	r25, r24
    17b4:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <gain_setting_int_cap+0x7f6930>
    17b8:	80 e0       	ldi	r24, 0x00	; 0
    17ba:	03 c0       	rjmp	.+6      	; 0x17c2 <qtm_ptc_init_acquisition_module+0x6c>
    17bc:	8b e0       	ldi	r24, 0x0B	; 11
    17be:	01 c0       	rjmp	.+2      	; 0x17c2 <qtm_ptc_init_acquisition_module+0x6c>
    17c0:	82 e0       	ldi	r24, 0x02	; 2
    17c2:	cf 91       	pop	r28
    17c4:	08 95       	ret

000017c6 <qtm_ptc_qtlib_assign_signal_memory>:
    17c6:	00 97       	sbiw	r24, 0x00	; 0
    17c8:	31 f0       	breq	.+12     	; 0x17d6 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    17ca:	80 93 e6 3e 	sts	0x3EE6, r24	; 0x803ee6 <qtm_raw_data_measurements_ptr>
    17ce:	90 93 e7 3e 	sts	0x3EE7, r25	; 0x803ee7 <qtm_raw_data_measurements_ptr+0x1>
    17d2:	80 e0       	ldi	r24, 0x00	; 0
    17d4:	08 95       	ret
    17d6:	8b e0       	ldi	r24, 0x0B	; 11
    17d8:	08 95       	ret

000017da <qtm_ptc_start_measurement_seq>:
    17da:	61 15       	cp	r22, r1
    17dc:	71 05       	cpc	r23, r1
    17de:	91 f1       	breq	.+100    	; 0x1844 <qtm_ptc_start_measurement_seq+0x6a>
    17e0:	00 97       	sbiw	r24, 0x00	; 0
    17e2:	81 f1       	breq	.+96     	; 0x1844 <qtm_ptc_start_measurement_seq+0x6a>
    17e4:	20 91 8c 3e 	lds	r18, 0x3E8C	; 0x803e8c <touch_seq_lib_state>
    17e8:	22 23       	and	r18, r18
    17ea:	71 f1       	breq	.+92     	; 0x1848 <qtm_ptc_start_measurement_seq+0x6e>
    17ec:	24 30       	cpi	r18, 0x04	; 4
    17ee:	71 f1       	breq	.+92     	; 0x184c <qtm_ptc_start_measurement_seq+0x72>
    17f0:	80 93 e4 3e 	sts	0x3EE4, r24	; 0x803ee4 <qtm_acquisition_control_working_set_ptr>
    17f4:	90 93 e5 3e 	sts	0x3EE5, r25	; 0x803ee5 <qtm_acquisition_control_working_set_ptr+0x1>
    17f8:	60 93 8a 3e 	sts	0x3E8A, r22	; 0x803e8a <ptc_seq_measure_complete_pointer>
    17fc:	70 93 8b 3e 	sts	0x3E8B, r23	; 0x803e8b <ptc_seq_measure_complete_pointer+0x1>
    1800:	20 ec       	ldi	r18, 0xC0	; 192
    1802:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <gain_setting_int_cap+0x7f6926>
    1806:	dc 01       	movw	r26, r24
    1808:	ed 91       	ld	r30, X+
    180a:	fc 91       	ld	r31, X
    180c:	22 81       	ldd	r18, Z+2	; 0x02
    180e:	20 34       	cpi	r18, 0x40	; 64
    1810:	21 f4       	brne	.+8      	; 0x181a <qtm_ptc_start_measurement_seq+0x40>
    1812:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <gain_setting_int_cap+0x7f6926>
    1816:	20 62       	ori	r18, 0x20	; 32
    1818:	05 c0       	rjmp	.+10     	; 0x1824 <qtm_ptc_start_measurement_seq+0x4a>
    181a:	20 38       	cpi	r18, 0x80	; 128
    181c:	41 f4       	brne	.+16     	; 0x182e <qtm_ptc_start_measurement_seq+0x54>
    181e:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <gain_setting_int_cap+0x7f6926>
    1822:	28 62       	ori	r18, 0x28	; 40
    1824:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <gain_setting_int_cap+0x7f6926>
    1828:	10 92 1e 06 	sts	0x061E, r1	; 0x80061e <gain_setting_int_cap+0x7f692c>
    182c:	13 c0       	rjmp	.+38     	; 0x1854 <qtm_ptc_start_measurement_seq+0x7a>
    182e:	21 38       	cpi	r18, 0x81	; 129
    1830:	79 f4       	brne	.+30     	; 0x1850 <qtm_ptc_start_measurement_seq+0x76>
    1832:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <gain_setting_int_cap+0x7f6926>
    1836:	28 62       	ori	r18, 0x28	; 40
    1838:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <gain_setting_int_cap+0x7f6926>
    183c:	26 e8       	ldi	r18, 0x86	; 134
    183e:	20 93 1e 06 	sts	0x061E, r18	; 0x80061e <gain_setting_int_cap+0x7f692c>
    1842:	08 c0       	rjmp	.+16     	; 0x1854 <qtm_ptc_start_measurement_seq+0x7a>
    1844:	8b e0       	ldi	r24, 0x0B	; 11
    1846:	08 95       	ret
    1848:	83 e0       	ldi	r24, 0x03	; 3
    184a:	08 95       	ret
    184c:	81 e0       	ldi	r24, 0x01	; 1
    184e:	08 95       	ret
    1850:	82 e0       	ldi	r24, 0x02	; 2
    1852:	08 95       	ret
    1854:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <gain_setting_int_cap+0x7f690e>
    1858:	dc 01       	movw	r26, r24
    185a:	ed 91       	ld	r30, X+
    185c:	fc 91       	ld	r31, X
    185e:	84 81       	ldd	r24, Z+4	; 0x04
    1860:	80 31       	cpi	r24, 0x10	; 16
    1862:	08 f0       	brcs	.+2      	; 0x1866 <qtm_ptc_start_measurement_seq+0x8c>
    1864:	80 e1       	ldi	r24, 0x10	; 16
    1866:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <gain_setting_int_cap+0x7f6911>
    186a:	81 e0       	ldi	r24, 0x01	; 1
    186c:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <gain_setting_int_cap+0x7f6919>
    1870:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <gain_setting_int_cap+0x7f6918>
    1874:	80 93 67 3e 	sts	0x3E67, r24	; 0x803e67 <qtm_which_mode_current>
    1878:	10 92 8d 3e 	sts	0x3E8D, r1	; 0x803e8d <current_measure_channel>
    187c:	10 92 8e 3e 	sts	0x3E8E, r1	; 0x803e8e <current_measure_channel+0x1>
    1880:	35 dd       	rcall	.-1430   	; 0x12ec <select_next_channel_to_measure>
    1882:	81 11       	cpse	r24, r1
    1884:	0a c0       	rjmp	.+20     	; 0x189a <qtm_ptc_start_measurement_seq+0xc0>
    1886:	84 e0       	ldi	r24, 0x04	; 4
    1888:	80 93 8c 3e 	sts	0x3E8C, r24	; 0x803e8c <touch_seq_lib_state>
    188c:	80 91 8d 3e 	lds	r24, 0x3E8D	; 0x803e8d <current_measure_channel>
    1890:	90 91 8e 3e 	lds	r25, 0x3E8E	; 0x803e8e <current_measure_channel+0x1>
    1894:	5e dd       	rcall	.-1348   	; 0x1352 <qtm_measure_node>
    1896:	80 e0       	ldi	r24, 0x00	; 0
    1898:	08 95       	ret
    189a:	82 e0       	ldi	r24, 0x02	; 2
    189c:	80 93 8c 3e 	sts	0x3E8C, r24	; 0x803e8c <touch_seq_lib_state>
    18a0:	08 95       	ret

000018a2 <qtm_enable_sensor_node>:
    18a2:	00 97       	sbiw	r24, 0x00	; 0
    18a4:	c9 f0       	breq	.+50     	; 0x18d8 <qtm_enable_sensor_node+0x36>
    18a6:	dc 01       	movw	r26, r24
    18a8:	ed 91       	ld	r30, X+
    18aa:	fc 91       	ld	r31, X
    18ac:	11 97       	sbiw	r26, 0x01	; 1
    18ae:	20 81       	ld	r18, Z
    18b0:	31 81       	ldd	r19, Z+1	; 0x01
    18b2:	26 17       	cp	r18, r22
    18b4:	37 07       	cpc	r19, r23
    18b6:	90 f0       	brcs	.+36     	; 0x18dc <qtm_enable_sensor_node+0x3a>
    18b8:	45 e0       	ldi	r20, 0x05	; 5
    18ba:	46 9f       	mul	r20, r22
    18bc:	90 01       	movw	r18, r0
    18be:	47 9f       	mul	r20, r23
    18c0:	30 0d       	add	r19, r0
    18c2:	11 24       	eor	r1, r1
    18c4:	14 96       	adiw	r26, 0x04	; 4
    18c6:	ed 91       	ld	r30, X+
    18c8:	fc 91       	ld	r31, X
    18ca:	15 97       	sbiw	r26, 0x05	; 5
    18cc:	e2 0f       	add	r30, r18
    18ce:	f3 1f       	adc	r31, r19
    18d0:	81 e0       	ldi	r24, 0x01	; 1
    18d2:	80 83       	st	Z, r24
    18d4:	80 e0       	ldi	r24, 0x00	; 0
    18d6:	08 95       	ret
    18d8:	8b e0       	ldi	r24, 0x0B	; 11
    18da:	08 95       	ret
    18dc:	82 e0       	ldi	r24, 0x02	; 2
    18de:	08 95       	ret

000018e0 <qtm_calibrate_sensor_node>:
    18e0:	fc 01       	movw	r30, r24
    18e2:	89 2b       	or	r24, r25
    18e4:	d1 f1       	breq	.+116    	; 0x195a <qtm_calibrate_sensor_node+0x7a>
    18e6:	a0 81       	ld	r26, Z
    18e8:	b1 81       	ldd	r27, Z+1	; 0x01
    18ea:	8d 91       	ld	r24, X+
    18ec:	9c 91       	ld	r25, X
    18ee:	11 97       	sbiw	r26, 0x01	; 1
    18f0:	86 17       	cp	r24, r22
    18f2:	97 07       	cpc	r25, r23
    18f4:	a0 f1       	brcs	.+104    	; 0x195e <qtm_calibrate_sensor_node+0x7e>
    18f6:	12 96       	adiw	r26, 0x02	; 2
    18f8:	9c 91       	ld	r25, X
    18fa:	04 80       	ldd	r0, Z+4	; 0x04
    18fc:	f5 81       	ldd	r31, Z+5	; 0x05
    18fe:	e0 2d       	mov	r30, r0
    1900:	90 34       	cpi	r25, 0x40	; 64
    1902:	59 f4       	brne	.+22     	; 0x191a <qtm_calibrate_sensor_node+0x3a>
    1904:	85 e0       	ldi	r24, 0x05	; 5
    1906:	86 9f       	mul	r24, r22
    1908:	d0 01       	movw	r26, r0
    190a:	87 9f       	mul	r24, r23
    190c:	b0 0d       	add	r27, r0
    190e:	11 24       	eor	r1, r1
    1910:	ae 0f       	add	r26, r30
    1912:	bf 1f       	adc	r27, r31
    1914:	84 e3       	ldi	r24, 0x34	; 52
    1916:	92 e0       	ldi	r25, 0x02	; 2
    1918:	0d c0       	rjmp	.+26     	; 0x1934 <qtm_calibrate_sensor_node+0x54>
    191a:	90 58       	subi	r25, 0x80	; 128
    191c:	92 30       	cpi	r25, 0x02	; 2
    191e:	80 f4       	brcc	.+32     	; 0x1940 <qtm_calibrate_sensor_node+0x60>
    1920:	85 e0       	ldi	r24, 0x05	; 5
    1922:	86 9f       	mul	r24, r22
    1924:	d0 01       	movw	r26, r0
    1926:	87 9f       	mul	r24, r23
    1928:	b0 0d       	add	r27, r0
    192a:	11 24       	eor	r1, r1
    192c:	ae 0f       	add	r26, r30
    192e:	bf 1f       	adc	r27, r31
    1930:	87 e6       	ldi	r24, 0x67	; 103
    1932:	95 e0       	ldi	r25, 0x05	; 5
    1934:	13 96       	adiw	r26, 0x03	; 3
    1936:	8d 93       	st	X+, r24
    1938:	9c 93       	st	X, r25
    193a:	14 97       	sbiw	r26, 0x04	; 4
    193c:	80 e0       	ldi	r24, 0x00	; 0
    193e:	01 c0       	rjmp	.+2      	; 0x1942 <qtm_calibrate_sensor_node+0x62>
    1940:	82 e0       	ldi	r24, 0x02	; 2
    1942:	95 e0       	ldi	r25, 0x05	; 5
    1944:	96 9f       	mul	r25, r22
    1946:	90 01       	movw	r18, r0
    1948:	97 9f       	mul	r25, r23
    194a:	30 0d       	add	r19, r0
    194c:	11 24       	eor	r1, r1
    194e:	e2 0f       	add	r30, r18
    1950:	f3 1f       	adc	r31, r19
    1952:	90 81       	ld	r25, Z
    1954:	92 60       	ori	r25, 0x02	; 2
    1956:	90 83       	st	Z, r25
    1958:	08 95       	ret
    195a:	8b e0       	ldi	r24, 0x0B	; 11
    195c:	08 95       	ret
    195e:	82 e0       	ldi	r24, 0x02	; 2
    1960:	08 95       	ret

00001962 <qtm_t81x_ptc_handler_eoc>:
    1962:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <gain_setting_int_cap+0x7f690e>
    1966:	40 91 10 06 	lds	r20, 0x0610	; 0x800610 <gain_setting_int_cap+0x7f691e>
    196a:	50 91 11 06 	lds	r21, 0x0611	; 0x800611 <gain_setting_int_cap+0x7f691f>
    196e:	80 91 8d 3e 	lds	r24, 0x3E8D	; 0x803e8d <current_measure_channel>
    1972:	90 91 8e 3e 	lds	r25, 0x3E8E	; 0x803e8e <current_measure_channel+0x1>
    1976:	9c 01       	movw	r18, r24
    1978:	22 0f       	add	r18, r18
    197a:	33 1f       	adc	r19, r19
    197c:	e0 91 e6 3e 	lds	r30, 0x3EE6	; 0x803ee6 <qtm_raw_data_measurements_ptr>
    1980:	f0 91 e7 3e 	lds	r31, 0x3EE7	; 0x803ee7 <qtm_raw_data_measurements_ptr+0x1>
    1984:	e2 0f       	add	r30, r18
    1986:	f3 1f       	adc	r31, r19
    1988:	40 83       	st	Z, r20
    198a:	51 83       	std	Z+1, r21	; 0x01
    198c:	01 96       	adiw	r24, 0x01	; 1
    198e:	80 93 8d 3e 	sts	0x3E8D, r24	; 0x803e8d <current_measure_channel>
    1992:	90 93 8e 3e 	sts	0x3E8E, r25	; 0x803e8e <current_measure_channel+0x1>
    1996:	aa dc       	rcall	.-1708   	; 0x12ec <select_next_channel_to_measure>
    1998:	81 11       	cpse	r24, r1
    199a:	08 c0       	rjmp	.+16     	; 0x19ac <qtm_t81x_ptc_handler_eoc+0x4a>
    199c:	84 e0       	ldi	r24, 0x04	; 4
    199e:	80 93 8c 3e 	sts	0x3E8C, r24	; 0x803e8c <touch_seq_lib_state>
    19a2:	80 91 8d 3e 	lds	r24, 0x3E8D	; 0x803e8d <current_measure_channel>
    19a6:	90 91 8e 3e 	lds	r25, 0x3E8E	; 0x803e8e <current_measure_channel+0x1>
    19aa:	d3 cc       	rjmp	.-1626   	; 0x1352 <qtm_measure_node>
    19ac:	e0 91 8a 3e 	lds	r30, 0x3E8A	; 0x803e8a <ptc_seq_measure_complete_pointer>
    19b0:	f0 91 8b 3e 	lds	r31, 0x3E8B	; 0x803e8b <ptc_seq_measure_complete_pointer+0x1>
    19b4:	09 94       	ijmp

000019b6 <__divsf3>:
    19b6:	0e 94 ef 0c 	call	0x19de	; 0x19de <__divsf3x>
    19ba:	0c 94 d0 0d 	jmp	0x1ba0	; 0x1ba0 <__fp_round>
    19be:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <__fp_pscB>
    19c2:	58 f0       	brcs	.+22     	; 0x19da <__divsf3+0x24>
    19c4:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <__fp_pscA>
    19c8:	40 f0       	brcs	.+16     	; 0x19da <__divsf3+0x24>
    19ca:	29 f4       	brne	.+10     	; 0x19d6 <__divsf3+0x20>
    19cc:	5f 3f       	cpi	r21, 0xFF	; 255
    19ce:	29 f0       	breq	.+10     	; 0x19da <__divsf3+0x24>
    19d0:	0c 94 b9 0d 	jmp	0x1b72	; 0x1b72 <__fp_inf>
    19d4:	51 11       	cpse	r21, r1
    19d6:	0c 94 04 0e 	jmp	0x1c08	; 0x1c08 <__fp_szero>
    19da:	0c 94 bf 0d 	jmp	0x1b7e	; 0x1b7e <__fp_nan>

000019de <__divsf3x>:
    19de:	0e 94 e1 0d 	call	0x1bc2	; 0x1bc2 <__fp_split3>
    19e2:	68 f3       	brcs	.-38     	; 0x19be <__divsf3+0x8>

000019e4 <__divsf3_pse>:
    19e4:	99 23       	and	r25, r25
    19e6:	b1 f3       	breq	.-20     	; 0x19d4 <__divsf3+0x1e>
    19e8:	55 23       	and	r21, r21
    19ea:	91 f3       	breq	.-28     	; 0x19d0 <__divsf3+0x1a>
    19ec:	95 1b       	sub	r25, r21
    19ee:	55 0b       	sbc	r21, r21
    19f0:	bb 27       	eor	r27, r27
    19f2:	aa 27       	eor	r26, r26
    19f4:	62 17       	cp	r22, r18
    19f6:	73 07       	cpc	r23, r19
    19f8:	84 07       	cpc	r24, r20
    19fa:	38 f0       	brcs	.+14     	; 0x1a0a <__divsf3_pse+0x26>
    19fc:	9f 5f       	subi	r25, 0xFF	; 255
    19fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1a00:	22 0f       	add	r18, r18
    1a02:	33 1f       	adc	r19, r19
    1a04:	44 1f       	adc	r20, r20
    1a06:	aa 1f       	adc	r26, r26
    1a08:	a9 f3       	breq	.-22     	; 0x19f4 <__divsf3_pse+0x10>
    1a0a:	35 d0       	rcall	.+106    	; 0x1a76 <__divsf3_pse+0x92>
    1a0c:	0e 2e       	mov	r0, r30
    1a0e:	3a f0       	brmi	.+14     	; 0x1a1e <__divsf3_pse+0x3a>
    1a10:	e0 e8       	ldi	r30, 0x80	; 128
    1a12:	32 d0       	rcall	.+100    	; 0x1a78 <__divsf3_pse+0x94>
    1a14:	91 50       	subi	r25, 0x01	; 1
    1a16:	50 40       	sbci	r21, 0x00	; 0
    1a18:	e6 95       	lsr	r30
    1a1a:	00 1c       	adc	r0, r0
    1a1c:	ca f7       	brpl	.-14     	; 0x1a10 <__divsf3_pse+0x2c>
    1a1e:	2b d0       	rcall	.+86     	; 0x1a76 <__divsf3_pse+0x92>
    1a20:	fe 2f       	mov	r31, r30
    1a22:	29 d0       	rcall	.+82     	; 0x1a76 <__divsf3_pse+0x92>
    1a24:	66 0f       	add	r22, r22
    1a26:	77 1f       	adc	r23, r23
    1a28:	88 1f       	adc	r24, r24
    1a2a:	bb 1f       	adc	r27, r27
    1a2c:	26 17       	cp	r18, r22
    1a2e:	37 07       	cpc	r19, r23
    1a30:	48 07       	cpc	r20, r24
    1a32:	ab 07       	cpc	r26, r27
    1a34:	b0 e8       	ldi	r27, 0x80	; 128
    1a36:	09 f0       	breq	.+2      	; 0x1a3a <__divsf3_pse+0x56>
    1a38:	bb 0b       	sbc	r27, r27
    1a3a:	80 2d       	mov	r24, r0
    1a3c:	bf 01       	movw	r22, r30
    1a3e:	ff 27       	eor	r31, r31
    1a40:	93 58       	subi	r25, 0x83	; 131
    1a42:	5f 4f       	sbci	r21, 0xFF	; 255
    1a44:	3a f0       	brmi	.+14     	; 0x1a54 <__divsf3_pse+0x70>
    1a46:	9e 3f       	cpi	r25, 0xFE	; 254
    1a48:	51 05       	cpc	r21, r1
    1a4a:	78 f0       	brcs	.+30     	; 0x1a6a <__divsf3_pse+0x86>
    1a4c:	0c 94 b9 0d 	jmp	0x1b72	; 0x1b72 <__fp_inf>
    1a50:	0c 94 04 0e 	jmp	0x1c08	; 0x1c08 <__fp_szero>
    1a54:	5f 3f       	cpi	r21, 0xFF	; 255
    1a56:	e4 f3       	brlt	.-8      	; 0x1a50 <__divsf3_pse+0x6c>
    1a58:	98 3e       	cpi	r25, 0xE8	; 232
    1a5a:	d4 f3       	brlt	.-12     	; 0x1a50 <__divsf3_pse+0x6c>
    1a5c:	86 95       	lsr	r24
    1a5e:	77 95       	ror	r23
    1a60:	67 95       	ror	r22
    1a62:	b7 95       	ror	r27
    1a64:	f7 95       	ror	r31
    1a66:	9f 5f       	subi	r25, 0xFF	; 255
    1a68:	c9 f7       	brne	.-14     	; 0x1a5c <__divsf3_pse+0x78>
    1a6a:	88 0f       	add	r24, r24
    1a6c:	91 1d       	adc	r25, r1
    1a6e:	96 95       	lsr	r25
    1a70:	87 95       	ror	r24
    1a72:	97 f9       	bld	r25, 7
    1a74:	08 95       	ret
    1a76:	e1 e0       	ldi	r30, 0x01	; 1
    1a78:	66 0f       	add	r22, r22
    1a7a:	77 1f       	adc	r23, r23
    1a7c:	88 1f       	adc	r24, r24
    1a7e:	bb 1f       	adc	r27, r27
    1a80:	62 17       	cp	r22, r18
    1a82:	73 07       	cpc	r23, r19
    1a84:	84 07       	cpc	r24, r20
    1a86:	ba 07       	cpc	r27, r26
    1a88:	20 f0       	brcs	.+8      	; 0x1a92 <__divsf3_pse+0xae>
    1a8a:	62 1b       	sub	r22, r18
    1a8c:	73 0b       	sbc	r23, r19
    1a8e:	84 0b       	sbc	r24, r20
    1a90:	ba 0b       	sbc	r27, r26
    1a92:	ee 1f       	adc	r30, r30
    1a94:	88 f7       	brcc	.-30     	; 0x1a78 <__divsf3_pse+0x94>
    1a96:	e0 95       	com	r30
    1a98:	08 95       	ret

00001a9a <__fixunssfsi>:
    1a9a:	0e 94 e9 0d 	call	0x1bd2	; 0x1bd2 <__fp_splitA>
    1a9e:	88 f0       	brcs	.+34     	; 0x1ac2 <__fixunssfsi+0x28>
    1aa0:	9f 57       	subi	r25, 0x7F	; 127
    1aa2:	98 f0       	brcs	.+38     	; 0x1aca <__fixunssfsi+0x30>
    1aa4:	b9 2f       	mov	r27, r25
    1aa6:	99 27       	eor	r25, r25
    1aa8:	b7 51       	subi	r27, 0x17	; 23
    1aaa:	b0 f0       	brcs	.+44     	; 0x1ad8 <__fixunssfsi+0x3e>
    1aac:	e1 f0       	breq	.+56     	; 0x1ae6 <__fixunssfsi+0x4c>
    1aae:	66 0f       	add	r22, r22
    1ab0:	77 1f       	adc	r23, r23
    1ab2:	88 1f       	adc	r24, r24
    1ab4:	99 1f       	adc	r25, r25
    1ab6:	1a f0       	brmi	.+6      	; 0x1abe <__fixunssfsi+0x24>
    1ab8:	ba 95       	dec	r27
    1aba:	c9 f7       	brne	.-14     	; 0x1aae <__fixunssfsi+0x14>
    1abc:	14 c0       	rjmp	.+40     	; 0x1ae6 <__fixunssfsi+0x4c>
    1abe:	b1 30       	cpi	r27, 0x01	; 1
    1ac0:	91 f0       	breq	.+36     	; 0x1ae6 <__fixunssfsi+0x4c>
    1ac2:	0e 94 03 0e 	call	0x1c06	; 0x1c06 <__fp_zero>
    1ac6:	b1 e0       	ldi	r27, 0x01	; 1
    1ac8:	08 95       	ret
    1aca:	0c 94 03 0e 	jmp	0x1c06	; 0x1c06 <__fp_zero>
    1ace:	67 2f       	mov	r22, r23
    1ad0:	78 2f       	mov	r23, r24
    1ad2:	88 27       	eor	r24, r24
    1ad4:	b8 5f       	subi	r27, 0xF8	; 248
    1ad6:	39 f0       	breq	.+14     	; 0x1ae6 <__fixunssfsi+0x4c>
    1ad8:	b9 3f       	cpi	r27, 0xF9	; 249
    1ada:	cc f3       	brlt	.-14     	; 0x1ace <__fixunssfsi+0x34>
    1adc:	86 95       	lsr	r24
    1ade:	77 95       	ror	r23
    1ae0:	67 95       	ror	r22
    1ae2:	b3 95       	inc	r27
    1ae4:	d9 f7       	brne	.-10     	; 0x1adc <__fixunssfsi+0x42>
    1ae6:	3e f4       	brtc	.+14     	; 0x1af6 <__fixunssfsi+0x5c>
    1ae8:	90 95       	com	r25
    1aea:	80 95       	com	r24
    1aec:	70 95       	com	r23
    1aee:	61 95       	neg	r22
    1af0:	7f 4f       	sbci	r23, 0xFF	; 255
    1af2:	8f 4f       	sbci	r24, 0xFF	; 255
    1af4:	9f 4f       	sbci	r25, 0xFF	; 255
    1af6:	08 95       	ret

00001af8 <__floatunsisf>:
    1af8:	e8 94       	clt
    1afa:	09 c0       	rjmp	.+18     	; 0x1b0e <__floatsisf+0x12>

00001afc <__floatsisf>:
    1afc:	97 fb       	bst	r25, 7
    1afe:	3e f4       	brtc	.+14     	; 0x1b0e <__floatsisf+0x12>
    1b00:	90 95       	com	r25
    1b02:	80 95       	com	r24
    1b04:	70 95       	com	r23
    1b06:	61 95       	neg	r22
    1b08:	7f 4f       	sbci	r23, 0xFF	; 255
    1b0a:	8f 4f       	sbci	r24, 0xFF	; 255
    1b0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b0e:	99 23       	and	r25, r25
    1b10:	a9 f0       	breq	.+42     	; 0x1b3c <__floatsisf+0x40>
    1b12:	f9 2f       	mov	r31, r25
    1b14:	96 e9       	ldi	r25, 0x96	; 150
    1b16:	bb 27       	eor	r27, r27
    1b18:	93 95       	inc	r25
    1b1a:	f6 95       	lsr	r31
    1b1c:	87 95       	ror	r24
    1b1e:	77 95       	ror	r23
    1b20:	67 95       	ror	r22
    1b22:	b7 95       	ror	r27
    1b24:	f1 11       	cpse	r31, r1
    1b26:	f8 cf       	rjmp	.-16     	; 0x1b18 <__floatsisf+0x1c>
    1b28:	fa f4       	brpl	.+62     	; 0x1b68 <__floatsisf+0x6c>
    1b2a:	bb 0f       	add	r27, r27
    1b2c:	11 f4       	brne	.+4      	; 0x1b32 <__floatsisf+0x36>
    1b2e:	60 ff       	sbrs	r22, 0
    1b30:	1b c0       	rjmp	.+54     	; 0x1b68 <__floatsisf+0x6c>
    1b32:	6f 5f       	subi	r22, 0xFF	; 255
    1b34:	7f 4f       	sbci	r23, 0xFF	; 255
    1b36:	8f 4f       	sbci	r24, 0xFF	; 255
    1b38:	9f 4f       	sbci	r25, 0xFF	; 255
    1b3a:	16 c0       	rjmp	.+44     	; 0x1b68 <__floatsisf+0x6c>
    1b3c:	88 23       	and	r24, r24
    1b3e:	11 f0       	breq	.+4      	; 0x1b44 <__floatsisf+0x48>
    1b40:	96 e9       	ldi	r25, 0x96	; 150
    1b42:	11 c0       	rjmp	.+34     	; 0x1b66 <__floatsisf+0x6a>
    1b44:	77 23       	and	r23, r23
    1b46:	21 f0       	breq	.+8      	; 0x1b50 <__floatsisf+0x54>
    1b48:	9e e8       	ldi	r25, 0x8E	; 142
    1b4a:	87 2f       	mov	r24, r23
    1b4c:	76 2f       	mov	r23, r22
    1b4e:	05 c0       	rjmp	.+10     	; 0x1b5a <__floatsisf+0x5e>
    1b50:	66 23       	and	r22, r22
    1b52:	71 f0       	breq	.+28     	; 0x1b70 <__floatsisf+0x74>
    1b54:	96 e8       	ldi	r25, 0x86	; 134
    1b56:	86 2f       	mov	r24, r22
    1b58:	70 e0       	ldi	r23, 0x00	; 0
    1b5a:	60 e0       	ldi	r22, 0x00	; 0
    1b5c:	2a f0       	brmi	.+10     	; 0x1b68 <__floatsisf+0x6c>
    1b5e:	9a 95       	dec	r25
    1b60:	66 0f       	add	r22, r22
    1b62:	77 1f       	adc	r23, r23
    1b64:	88 1f       	adc	r24, r24
    1b66:	da f7       	brpl	.-10     	; 0x1b5e <__floatsisf+0x62>
    1b68:	88 0f       	add	r24, r24
    1b6a:	96 95       	lsr	r25
    1b6c:	87 95       	ror	r24
    1b6e:	97 f9       	bld	r25, 7
    1b70:	08 95       	ret

00001b72 <__fp_inf>:
    1b72:	97 f9       	bld	r25, 7
    1b74:	9f 67       	ori	r25, 0x7F	; 127
    1b76:	80 e8       	ldi	r24, 0x80	; 128
    1b78:	70 e0       	ldi	r23, 0x00	; 0
    1b7a:	60 e0       	ldi	r22, 0x00	; 0
    1b7c:	08 95       	ret

00001b7e <__fp_nan>:
    1b7e:	9f ef       	ldi	r25, 0xFF	; 255
    1b80:	80 ec       	ldi	r24, 0xC0	; 192
    1b82:	08 95       	ret

00001b84 <__fp_pscA>:
    1b84:	00 24       	eor	r0, r0
    1b86:	0a 94       	dec	r0
    1b88:	16 16       	cp	r1, r22
    1b8a:	17 06       	cpc	r1, r23
    1b8c:	18 06       	cpc	r1, r24
    1b8e:	09 06       	cpc	r0, r25
    1b90:	08 95       	ret

00001b92 <__fp_pscB>:
    1b92:	00 24       	eor	r0, r0
    1b94:	0a 94       	dec	r0
    1b96:	12 16       	cp	r1, r18
    1b98:	13 06       	cpc	r1, r19
    1b9a:	14 06       	cpc	r1, r20
    1b9c:	05 06       	cpc	r0, r21
    1b9e:	08 95       	ret

00001ba0 <__fp_round>:
    1ba0:	09 2e       	mov	r0, r25
    1ba2:	03 94       	inc	r0
    1ba4:	00 0c       	add	r0, r0
    1ba6:	11 f4       	brne	.+4      	; 0x1bac <__fp_round+0xc>
    1ba8:	88 23       	and	r24, r24
    1baa:	52 f0       	brmi	.+20     	; 0x1bc0 <__fp_round+0x20>
    1bac:	bb 0f       	add	r27, r27
    1bae:	40 f4       	brcc	.+16     	; 0x1bc0 <__fp_round+0x20>
    1bb0:	bf 2b       	or	r27, r31
    1bb2:	11 f4       	brne	.+4      	; 0x1bb8 <__fp_round+0x18>
    1bb4:	60 ff       	sbrs	r22, 0
    1bb6:	04 c0       	rjmp	.+8      	; 0x1bc0 <__fp_round+0x20>
    1bb8:	6f 5f       	subi	r22, 0xFF	; 255
    1bba:	7f 4f       	sbci	r23, 0xFF	; 255
    1bbc:	8f 4f       	sbci	r24, 0xFF	; 255
    1bbe:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc0:	08 95       	ret

00001bc2 <__fp_split3>:
    1bc2:	57 fd       	sbrc	r21, 7
    1bc4:	90 58       	subi	r25, 0x80	; 128
    1bc6:	44 0f       	add	r20, r20
    1bc8:	55 1f       	adc	r21, r21
    1bca:	59 f0       	breq	.+22     	; 0x1be2 <__fp_splitA+0x10>
    1bcc:	5f 3f       	cpi	r21, 0xFF	; 255
    1bce:	71 f0       	breq	.+28     	; 0x1bec <__fp_splitA+0x1a>
    1bd0:	47 95       	ror	r20

00001bd2 <__fp_splitA>:
    1bd2:	88 0f       	add	r24, r24
    1bd4:	97 fb       	bst	r25, 7
    1bd6:	99 1f       	adc	r25, r25
    1bd8:	61 f0       	breq	.+24     	; 0x1bf2 <__fp_splitA+0x20>
    1bda:	9f 3f       	cpi	r25, 0xFF	; 255
    1bdc:	79 f0       	breq	.+30     	; 0x1bfc <__fp_splitA+0x2a>
    1bde:	87 95       	ror	r24
    1be0:	08 95       	ret
    1be2:	12 16       	cp	r1, r18
    1be4:	13 06       	cpc	r1, r19
    1be6:	14 06       	cpc	r1, r20
    1be8:	55 1f       	adc	r21, r21
    1bea:	f2 cf       	rjmp	.-28     	; 0x1bd0 <__fp_split3+0xe>
    1bec:	46 95       	lsr	r20
    1bee:	f1 df       	rcall	.-30     	; 0x1bd2 <__fp_splitA>
    1bf0:	08 c0       	rjmp	.+16     	; 0x1c02 <__fp_splitA+0x30>
    1bf2:	16 16       	cp	r1, r22
    1bf4:	17 06       	cpc	r1, r23
    1bf6:	18 06       	cpc	r1, r24
    1bf8:	99 1f       	adc	r25, r25
    1bfa:	f1 cf       	rjmp	.-30     	; 0x1bde <__fp_splitA+0xc>
    1bfc:	86 95       	lsr	r24
    1bfe:	71 05       	cpc	r23, r1
    1c00:	61 05       	cpc	r22, r1
    1c02:	08 94       	sec
    1c04:	08 95       	ret

00001c06 <__fp_zero>:
    1c06:	e8 94       	clt

00001c08 <__fp_szero>:
    1c08:	bb 27       	eor	r27, r27
    1c0a:	66 27       	eor	r22, r22
    1c0c:	77 27       	eor	r23, r23
    1c0e:	cb 01       	movw	r24, r22
    1c10:	97 f9       	bld	r25, 7
    1c12:	08 95       	ret

00001c14 <__mulsf3>:
    1c14:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <__mulsf3x>
    1c18:	0c 94 d0 0d 	jmp	0x1ba0	; 0x1ba0 <__fp_round>
    1c1c:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <__fp_pscA>
    1c20:	38 f0       	brcs	.+14     	; 0x1c30 <__mulsf3+0x1c>
    1c22:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <__fp_pscB>
    1c26:	20 f0       	brcs	.+8      	; 0x1c30 <__mulsf3+0x1c>
    1c28:	95 23       	and	r25, r21
    1c2a:	11 f0       	breq	.+4      	; 0x1c30 <__mulsf3+0x1c>
    1c2c:	0c 94 b9 0d 	jmp	0x1b72	; 0x1b72 <__fp_inf>
    1c30:	0c 94 bf 0d 	jmp	0x1b7e	; 0x1b7e <__fp_nan>
    1c34:	11 24       	eor	r1, r1
    1c36:	0c 94 04 0e 	jmp	0x1c08	; 0x1c08 <__fp_szero>

00001c3a <__mulsf3x>:
    1c3a:	0e 94 e1 0d 	call	0x1bc2	; 0x1bc2 <__fp_split3>
    1c3e:	70 f3       	brcs	.-36     	; 0x1c1c <__mulsf3+0x8>

00001c40 <__mulsf3_pse>:
    1c40:	95 9f       	mul	r25, r21
    1c42:	c1 f3       	breq	.-16     	; 0x1c34 <__mulsf3+0x20>
    1c44:	95 0f       	add	r25, r21
    1c46:	50 e0       	ldi	r21, 0x00	; 0
    1c48:	55 1f       	adc	r21, r21
    1c4a:	62 9f       	mul	r22, r18
    1c4c:	f0 01       	movw	r30, r0
    1c4e:	72 9f       	mul	r23, r18
    1c50:	bb 27       	eor	r27, r27
    1c52:	f0 0d       	add	r31, r0
    1c54:	b1 1d       	adc	r27, r1
    1c56:	63 9f       	mul	r22, r19
    1c58:	aa 27       	eor	r26, r26
    1c5a:	f0 0d       	add	r31, r0
    1c5c:	b1 1d       	adc	r27, r1
    1c5e:	aa 1f       	adc	r26, r26
    1c60:	64 9f       	mul	r22, r20
    1c62:	66 27       	eor	r22, r22
    1c64:	b0 0d       	add	r27, r0
    1c66:	a1 1d       	adc	r26, r1
    1c68:	66 1f       	adc	r22, r22
    1c6a:	82 9f       	mul	r24, r18
    1c6c:	22 27       	eor	r18, r18
    1c6e:	b0 0d       	add	r27, r0
    1c70:	a1 1d       	adc	r26, r1
    1c72:	62 1f       	adc	r22, r18
    1c74:	73 9f       	mul	r23, r19
    1c76:	b0 0d       	add	r27, r0
    1c78:	a1 1d       	adc	r26, r1
    1c7a:	62 1f       	adc	r22, r18
    1c7c:	83 9f       	mul	r24, r19
    1c7e:	a0 0d       	add	r26, r0
    1c80:	61 1d       	adc	r22, r1
    1c82:	22 1f       	adc	r18, r18
    1c84:	74 9f       	mul	r23, r20
    1c86:	33 27       	eor	r19, r19
    1c88:	a0 0d       	add	r26, r0
    1c8a:	61 1d       	adc	r22, r1
    1c8c:	23 1f       	adc	r18, r19
    1c8e:	84 9f       	mul	r24, r20
    1c90:	60 0d       	add	r22, r0
    1c92:	21 1d       	adc	r18, r1
    1c94:	82 2f       	mov	r24, r18
    1c96:	76 2f       	mov	r23, r22
    1c98:	6a 2f       	mov	r22, r26
    1c9a:	11 24       	eor	r1, r1
    1c9c:	9f 57       	subi	r25, 0x7F	; 127
    1c9e:	50 40       	sbci	r21, 0x00	; 0
    1ca0:	9a f0       	brmi	.+38     	; 0x1cc8 <__mulsf3_pse+0x88>
    1ca2:	f1 f0       	breq	.+60     	; 0x1ce0 <__mulsf3_pse+0xa0>
    1ca4:	88 23       	and	r24, r24
    1ca6:	4a f0       	brmi	.+18     	; 0x1cba <__mulsf3_pse+0x7a>
    1ca8:	ee 0f       	add	r30, r30
    1caa:	ff 1f       	adc	r31, r31
    1cac:	bb 1f       	adc	r27, r27
    1cae:	66 1f       	adc	r22, r22
    1cb0:	77 1f       	adc	r23, r23
    1cb2:	88 1f       	adc	r24, r24
    1cb4:	91 50       	subi	r25, 0x01	; 1
    1cb6:	50 40       	sbci	r21, 0x00	; 0
    1cb8:	a9 f7       	brne	.-22     	; 0x1ca4 <__mulsf3_pse+0x64>
    1cba:	9e 3f       	cpi	r25, 0xFE	; 254
    1cbc:	51 05       	cpc	r21, r1
    1cbe:	80 f0       	brcs	.+32     	; 0x1ce0 <__mulsf3_pse+0xa0>
    1cc0:	0c 94 b9 0d 	jmp	0x1b72	; 0x1b72 <__fp_inf>
    1cc4:	0c 94 04 0e 	jmp	0x1c08	; 0x1c08 <__fp_szero>
    1cc8:	5f 3f       	cpi	r21, 0xFF	; 255
    1cca:	e4 f3       	brlt	.-8      	; 0x1cc4 <__mulsf3_pse+0x84>
    1ccc:	98 3e       	cpi	r25, 0xE8	; 232
    1cce:	d4 f3       	brlt	.-12     	; 0x1cc4 <__mulsf3_pse+0x84>
    1cd0:	86 95       	lsr	r24
    1cd2:	77 95       	ror	r23
    1cd4:	67 95       	ror	r22
    1cd6:	b7 95       	ror	r27
    1cd8:	f7 95       	ror	r31
    1cda:	e7 95       	ror	r30
    1cdc:	9f 5f       	subi	r25, 0xFF	; 255
    1cde:	c1 f7       	brne	.-16     	; 0x1cd0 <__mulsf3_pse+0x90>
    1ce0:	fe 2b       	or	r31, r30
    1ce2:	88 0f       	add	r24, r24
    1ce4:	91 1d       	adc	r25, r1
    1ce6:	96 95       	lsr	r25
    1ce8:	87 95       	ror	r24
    1cea:	97 f9       	bld	r25, 7
    1cec:	08 95       	ret

00001cee <_exit>:
    1cee:	f8 94       	cli

00001cf0 <__stop_program>:
    1cf0:	ff cf       	rjmp	.-2      	; 0x1cf0 <__stop_program>
